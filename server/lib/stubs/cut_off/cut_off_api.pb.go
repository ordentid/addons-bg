// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: cut_off_api.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cut_off_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cut_off_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_cut_off_api_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cut_off_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_cut_off_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_cut_off_api_proto_rawDescGZIP(), []int{1}
}

var File_cut_off_api_proto protoreflect.FileDescriptor

var file_cut_off_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x63, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xed, 0x2f, 0x0a, 0x0d, 0x43, 0x75,
	0x74, 0x4f, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x95, 0x02, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x2b, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x74, 0x4f,
	0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3c, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f,
	0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x3a, 0x01, 0x2a, 0x5a, 0x24, 0x22, 0x1f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x65, 0x64, 0x69, 0x74, 0x2f, 0x7b, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x7d, 0x3a, 0x01, 0x2a,
	0x92, 0x41, 0x60, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66,
	0x66, 0x12, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x43,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x6f, 0x72, 0x20, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x2c, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20,
	0x74, 0x61, 0x73, 0x6b, 0x20, 0x69, 0x64, 0x20, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x64, 0x12, 0xb9, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f,
	0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x29, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66,
	0x66, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d,
	0x6f, 0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x92, 0x41, 0x2c, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66,
	0x66, 0x12, 0x0d, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x6c, 0x69, 0x73, 0x74,
	0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x81, 0x02, 0x0a, 0x10, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x91, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x6b, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x43,
	0x75, 0x74, 0x20, 0x4f, 0x66, 0x66, 0x12, 0x0f, 0x53, 0x65, 0x74, 0x20, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x4a, 0x73, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73,
	0x6b, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x20, 0x27, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0xe2, 0x80, 0x99, 0x2c, 0x20, 0x27,
	0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0xe2, 0x80, 0x99, 0x2c, 0x20, 0x27, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0xe2, 0x80, 0x99, 0x2c, 0x20, 0xe2, 0x80, 0x98, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0xe2, 0x80, 0x99, 0x12, 0xc1, 0x01, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2d,
	0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f,
	0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x7d,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x31, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x43, 0x75, 0x74,
	0x20, 0x4f, 0x66, 0x66, 0x12, 0x12, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x6c,
	0x69, 0x73, 0x74, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xc8, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x74, 0x6f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e,
	0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x75,
	0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x30, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66,
	0x12, 0x0f, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x1a, 0x0f, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0xac, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66,
	0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f,
	0x66, 0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x92, 0x41, 0x27, 0x0a, 0x07, 0x43, 0x75, 0x74, 0x20,
	0x4f, 0x66, 0x66, 0x12, 0x0d, 0x47, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x69, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x75,
	0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc3, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x2c, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66,
	0x66, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75,
	0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x2b, 0x0a, 0x07, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66,
	0x12, 0x0f, 0x47, 0x65, 0x74, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x1a, 0x0f, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x7d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x74,
	0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xe7, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x2e,
	0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66,
	0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x92,
	0x41, 0x39, 0x0a, 0x07, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66, 0x12, 0x16, 0x47, 0x65, 0x74,
	0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x16, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xe2, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x92, 0x41, 0x3b, 0x0a, 0x07, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66, 0x12, 0x19,
	0x47, 0x65, 0x74, 0x20, 0x43, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x66, 0x20, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x15, 0x67, 0x65, 0x74, 0x20, 0x63,
	0x75, 0x74, 0x20, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0xc5, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f,
	0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x22, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x6d, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x92, 0x41, 0x48,
	0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x20, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66, 0x12, 0x16,
	0x47, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6d, 0x79, 0x20, 0x75, 0x73, 0x65, 0x72,
	0x20, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x12, 0xc7, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x19, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63,
	0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x73, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d,
	0x6f, 0x66, 0x66, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x92, 0x41, 0x48, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b,
	0x20, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66, 0x12, 0x16, 0x47, 0x65, 0x74, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x6d, 0x79, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x1a, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x73, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x12, 0xf2, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f,
	0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f,
	0x74, 0x61, 0x73, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x7b, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x92, 0x41, 0x59, 0x0a, 0x0c,
	0x54, 0x61, 0x73, 0x6b, 0x20, 0x43, 0x75, 0x74, 0x20, 0x4f, 0x66, 0x66, 0x12, 0x1d, 0x47, 0x65,
	0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x61,
	0x76, 0x61, 0x69, 0x62, 0x6c, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x1a, 0x2a, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x62,
	0x6c, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64, 0x12, 0x69, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x43,
	0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x63, 0x75, 0x74, 0x2e,
	0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x75,
	0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x74, 0x4f,
	0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x43, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x75, 0x74, 0x4f, 0x66,
	0x66, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xf1, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x29, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x01, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66,
	0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x92, 0x41, 0x63,
	0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x1a, 0x2e, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x8a, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x63, 0x75, 0x74,
	0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x74, 0x2e,
	0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66,
	0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x7b, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x7d, 0x92, 0x41, 0x67, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x47,
	0x65, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x49, 0x44,
	0x1a, 0x2e, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67,
	0x65, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x49, 0x44,
	0x12, 0xa8, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2c, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4c, 0x22, 0x19, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x3a, 0x01, 0x2a, 0x5a, 0x2c, 0x22, 0x27, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x7b, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x60, 0x0a, 0x07, 0x48, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x68, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x2a, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x6d, 0x61, 0x6e, 0x65, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x12, 0x25, 0x2e, 0x63, 0x75, 0x74, 0x2e,
	0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xe0, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x48, 0x54, 0x54, 0x50, 0x12, 0x25, 0x2e,
	0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f,
	0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x92,
	0x41, 0x5b, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x12, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2d,
	0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x12, 0xa1, 0x02,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x42, 0x79, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x30, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x42, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x74, 0x2e,
	0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x42, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d,
	0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x7b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x7d, 0x92, 0x41, 0x72, 0x0a,
	0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x2a, 0x4c,
	0x69, 0x73, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x49, 0x44, 0x1a, 0x36, 0x54, 0x68, 0x69, 0x73, 0x20,
	0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x49,
	0x44, 0x12, 0xa5, 0x02, 0x0a, 0x11, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x7b, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x7b, 0x0a, 0x07,
	0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x0f, 0x53, 0x65, 0x74, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74,
	0x61, 0x73, 0x6b, 0x1a, 0x54, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x69, 0x73,
	0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x74, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x0a, 0x20, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x72, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x82, 0x02, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x2e, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x89, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x92, 0x41, 0x60, 0x0a, 0x07,
	0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x1a,
	0x2d, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65,
	0x74, 0x20, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x20, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0xd2,
	0x01, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x74,
	0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x22, 0x6d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x7b, 0x66, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x7d, 0x92, 0x41, 0x37, 0x0a, 0x03, 0x41, 0x6c,
	0x6c, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79,
	0x12, 0x12, 0x47, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20,
	0x66, 0x69, 0x6c, 0x65, 0x1a, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x20, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0xd5, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x48, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74,
	0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x2f, 0x6d, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x92,
	0x41, 0x49, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x12, 0x16, 0x47, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6d, 0x79, 0x20, 0x75,
	0x73, 0x65, 0x72, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20,
	0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x73, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x12, 0xd7, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x19, 0x2e, 0x63, 0x75,
	0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12,
	0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x68, 0x6f,
	0x6c, 0x69, 0x64, 0x61, 0x79, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x6d, 0x65, 0x2f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x2d, 0x62, 0x79, 0x92, 0x41, 0x49, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x12, 0x16, 0x47, 0x65, 0x74,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6d, 0x79, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x1a, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x20, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x66, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x12, 0x28, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x12, 0x28,
	0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f,
	0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0xe1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x63, 0x75, 0x74,
	0x2e, 0x6f, 0x66, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x75, 0x74, 0x2e, 0x6f, 0x66,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x75, 0x74, 0x2d, 0x6f, 0x66, 0x66, 0x2f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x74, 0x69, 0x6d, 0x65, 0x92, 0x41, 0x4c, 0x0a, 0x03, 0x41,
	0x6c, 0x6c, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x0a, 0x07, 0x43, 0x75, 0x74,
	0x20, 0x4f, 0x66, 0x66, 0x12, 0x12, 0x47, 0x65, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x1f, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41,
	0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x47, 0x65, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x42, 0xb2, 0x01, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x92, 0x41, 0xa8, 0x01, 0x12, 0x16, 0x0a, 0x0f, 0x43, 0x75, 0x74, 0x2d, 0x4f, 0x66,
	0x66, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x03, 0x30, 0x2e, 0x32, 0x2a, 0x01,
	0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a,
	0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cut_off_api_proto_rawDescOnce sync.Once
	file_cut_off_api_proto_rawDescData = file_cut_off_api_proto_rawDesc
)

func file_cut_off_api_proto_rawDescGZIP() []byte {
	file_cut_off_api_proto_rawDescOnce.Do(func() {
		file_cut_off_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cut_off_api_proto_rawDescData)
	})
	return file_cut_off_api_proto_rawDescData
}

var file_cut_off_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cut_off_api_proto_goTypes = []interface{}{
	(*ErrorBodyResponse)(nil),                     // 0: cut.off.service.v1.errorBodyResponse
	(*Empty)(nil),                                 // 1: cut.off.service.v1.Empty
	(*CreateCutOffTaskRequest)(nil),               // 2: cut.off.service.v1.CreateCutOffTaskRequest
	(*ListCutOffTaskRequest)(nil),                 // 3: cut.off.service.v1.ListCutOffTaskRequest
	(*CutOffTaskActionRequest)(nil),               // 4: cut.off.service.v1.CutOffTaskActionRequest
	(*FileListCutOffTaskRequest)(nil),             // 5: cut.off.service.v1.FileListCutOffTaskRequest
	(*GetCutOffTaskByIDRequest)(nil),              // 6: cut.off.service.v1.GetCutOffTaskByIDRequest
	(*ListCutOffDataRequest)(nil),                 // 7: cut.off.service.v1.ListCutOffDataRequest
	(*GetCutOffDataByIDRequest)(nil),              // 8: cut.off.service.v1.GetCutOffDataByIDRequest
	(*ListCutOffDataScheduleRequest)(nil),         // 9: cut.off.service.v1.ListCutOffDataScheduleRequest
	(*ListCutOffDataScheduleTodayRequest)(nil),    // 10: cut.off.service.v1.ListCutOffDataScheduleTodayRequest
	(*ListProductUsedReq)(nil),                    // 11: cut.off.service.v1.ListProductUsedReq
	(*SaveCutOffDataRequest)(nil),                 // 12: cut.off.service.v1.SaveCutOffDataRequest
	(*GetHolidayTaskRequest)(nil),                 // 13: cut.off.service.v1.GetHolidayTaskRequest
	(*GetHolidayTaskByIDRequest)(nil),             // 14: cut.off.service.v1.GetHolidayTaskByIDRequest
	(*CreateHolidayTaskRequest)(nil),              // 15: cut.off.service.v1.CreateHolidayTaskRequest
	(*GetHolidayRequest)(nil),                     // 16: cut.off.service.v1.GetHolidayRequest
	(*GetHolidayByFeatureIDRequest)(nil),          // 17: cut.off.service.v1.GetHolidayByFeatureIDRequest
	(*HolidayTaskActionRequest)(nil),              // 18: cut.off.service.v1.HolidayTaskActionRequest
	(*GetHolidaySchedulesRequest)(nil),            // 19: cut.off.service.v1.GetHolidaySchedulesRequest
	(*DownloadListHolidayTaskRequest)(nil),        // 20: cut.off.service.v1.DownloadListHolidayTaskRequest
	(*CreateHolidayRequest)(nil),                  // 21: cut.off.service.v1.CreateHolidayRequest
	(*DeleteHolidayRequest)(nil),                  // 22: cut.off.service.v1.DeleteHolidayRequest
	(*GetAvailableTimeRequest)(nil),               // 23: cut.off.service.v1.GetAvailableTimeRequest
	(*CreateCutOffTaskResponse)(nil),              // 24: cut.off.service.v1.CreateCutOffTaskResponse
	(*ListCutOffTaskResponse)(nil),                // 25: cut.off.service.v1.ListCutOffTaskResponse
	(*CutOffTaskActionResponse)(nil),              // 26: cut.off.service.v1.CutOffTaskActionResponse
	(*httpbody.HttpBody)(nil),                     // 27: google.api.HttpBody
	(*GetCutOffTaskByIDResponse)(nil),             // 28: cut.off.service.v1.GetCutOffTaskByIDResponse
	(*ListCutOffDataResponse)(nil),                // 29: cut.off.service.v1.ListCutOffDataResponse
	(*ListCutOffDataTemplateResponse)(nil),        // 30: cut.off.service.v1.ListCutOffDataTemplateResponse
	(*GetCutOffDataByIDResponse)(nil),             // 31: cut.off.service.v1.GetCutOffDataByIDResponse
	(*ListCutOffScheduledDataResponse)(nil),       // 32: cut.off.service.v1.ListCutOffScheduledDataResponse
	(*ListCutOffScheduledDataByTimeResponse)(nil), // 33: cut.off.service.v1.ListCutOffScheduledDataByTimeResponse
	(*ListCutOffDataScheduleTodayRespons)(nil),    // 34: cut.off.service.v1.ListCutOffDataScheduleTodayRespons
	(*ArrayString)(nil),                           // 35: cut.off.service.v1.ArrayString
	(*ListProductUsedRes)(nil),                    // 36: cut.off.service.v1.ListProductUsedRes
	(*SaveCutOffDataResponse)(nil),                // 37: cut.off.service.v1.SaveCutOffDataResponse
	(*GetHolidayTaskResponse)(nil),                // 38: cut.off.service.v1.GetHolidayTaskResponse
	(*GetHolidayTaskByIDResponse)(nil),            // 39: cut.off.service.v1.GetHolidayTaskByIDResponse
	(*CreateHolidayTaskResponse)(nil),             // 40: cut.off.service.v1.CreateHolidayTaskResponse
	(*GetHolidayResponse)(nil),                    // 41: cut.off.service.v1.GetHolidayResponse
	(*GetHolidayByFeatureIDResponse)(nil),         // 42: cut.off.service.v1.GetHolidayByFeatureIDResponse
	(*HolidayTaskActionResponse)(nil),             // 43: cut.off.service.v1.HolidayTaskActionResponse
	(*GetHolidaySchedulesResponse)(nil),           // 44: cut.off.service.v1.GetHolidaySchedulesResponse
	(*CreateHolidayResponse)(nil),                 // 45: cut.off.service.v1.CreateHolidayResponse
	(*GetAvailableTimeResponse)(nil),              // 46: cut.off.service.v1.GetAvailableTimeResponse
}
var file_cut_off_api_proto_depIdxs = []int32{
	2,  // 0: cut.off.service.v1.CutOffService.CreateCutOffTask:input_type -> cut.off.service.v1.CreateCutOffTaskRequest
	3,  // 1: cut.off.service.v1.CutOffService.ListCutOffTask:input_type -> cut.off.service.v1.ListCutOffTaskRequest
	4,  // 2: cut.off.service.v1.CutOffService.CutOffTaskAction:input_type -> cut.off.service.v1.CutOffTaskActionRequest
	5,  // 3: cut.off.service.v1.CutOffService.DownloadListCutOffTask:input_type -> cut.off.service.v1.FileListCutOffTaskRequest
	6,  // 4: cut.off.service.v1.CutOffService.GetCutoffTaskByID:input_type -> cut.off.service.v1.GetCutOffTaskByIDRequest
	7,  // 5: cut.off.service.v1.CutOffService.ListCutOffData:input_type -> cut.off.service.v1.ListCutOffDataRequest
	1,  // 6: cut.off.service.v1.CutOffService.ListCutOffDataTemplate:input_type -> cut.off.service.v1.Empty
	8,  // 7: cut.off.service.v1.CutOffService.GetCutOffDataByID:input_type -> cut.off.service.v1.GetCutOffDataByIDRequest
	9,  // 8: cut.off.service.v1.CutOffService.GetCutOffSchedule:input_type -> cut.off.service.v1.ListCutOffDataScheduleRequest
	9,  // 9: cut.off.service.v1.CutOffService.GetCutOffScheduleByTime:input_type -> cut.off.service.v1.ListCutOffDataScheduleRequest
	10, // 10: cut.off.service.v1.CutOffService.GetCutOffScheduleToday:input_type -> cut.off.service.v1.ListCutOffDataScheduleTodayRequest
	1,  // 11: cut.off.service.v1.CutOffService.GetMyTasksCreatedBy:input_type -> cut.off.service.v1.Empty
	1,  // 12: cut.off.service.v1.CutOffService.GetMyTasksApprovedBy:input_type -> cut.off.service.v1.Empty
	11, // 13: cut.off.service.v1.CutOffService.GetProductAvaible:input_type -> cut.off.service.v1.ListProductUsedReq
	12, // 14: cut.off.service.v1.CutOffService.SaveCutOffData:input_type -> cut.off.service.v1.SaveCutOffDataRequest
	12, // 15: cut.off.service.v1.CutOffService.DeleteCutOffData:input_type -> cut.off.service.v1.SaveCutOffDataRequest
	13, // 16: cut.off.service.v1.CutOffService.GetHolidayTask:input_type -> cut.off.service.v1.GetHolidayTaskRequest
	14, // 17: cut.off.service.v1.CutOffService.GetHolidayTaskByID:input_type -> cut.off.service.v1.GetHolidayTaskByIDRequest
	15, // 18: cut.off.service.v1.CutOffService.CreateHolidayTask:input_type -> cut.off.service.v1.CreateHolidayTaskRequest
	16, // 19: cut.off.service.v1.CutOffService.GetHoliday:input_type -> cut.off.service.v1.GetHolidayRequest
	16, // 20: cut.off.service.v1.CutOffService.GetHolidayHTTP:input_type -> cut.off.service.v1.GetHolidayRequest
	17, // 21: cut.off.service.v1.CutOffService.GetHolidayByFeatureID:input_type -> cut.off.service.v1.GetHolidayByFeatureIDRequest
	18, // 22: cut.off.service.v1.CutOffService.HolidayTaskAction:input_type -> cut.off.service.v1.HolidayTaskActionRequest
	19, // 23: cut.off.service.v1.CutOffService.GetHolidaySchedules:input_type -> cut.off.service.v1.GetHolidaySchedulesRequest
	20, // 24: cut.off.service.v1.CutOffService.DownloadListHolidayTask:input_type -> cut.off.service.v1.DownloadListHolidayTaskRequest
	1,  // 25: cut.off.service.v1.CutOffService.GetMyHolidayTasksCreatedBy:input_type -> cut.off.service.v1.Empty
	1,  // 26: cut.off.service.v1.CutOffService.GetMyHolidayTasksApprovedBy:input_type -> cut.off.service.v1.Empty
	21, // 27: cut.off.service.v1.CutOffService.CreateHoliday:input_type -> cut.off.service.v1.CreateHolidayRequest
	22, // 28: cut.off.service.v1.CutOffService.DeleteHoliday:input_type -> cut.off.service.v1.DeleteHolidayRequest
	23, // 29: cut.off.service.v1.CutOffService.GetAvailableTime:input_type -> cut.off.service.v1.GetAvailableTimeRequest
	24, // 30: cut.off.service.v1.CutOffService.CreateCutOffTask:output_type -> cut.off.service.v1.CreateCutOffTaskResponse
	25, // 31: cut.off.service.v1.CutOffService.ListCutOffTask:output_type -> cut.off.service.v1.ListCutOffTaskResponse
	26, // 32: cut.off.service.v1.CutOffService.CutOffTaskAction:output_type -> cut.off.service.v1.CutOffTaskActionResponse
	27, // 33: cut.off.service.v1.CutOffService.DownloadListCutOffTask:output_type -> google.api.HttpBody
	28, // 34: cut.off.service.v1.CutOffService.GetCutoffTaskByID:output_type -> cut.off.service.v1.GetCutOffTaskByIDResponse
	29, // 35: cut.off.service.v1.CutOffService.ListCutOffData:output_type -> cut.off.service.v1.ListCutOffDataResponse
	30, // 36: cut.off.service.v1.CutOffService.ListCutOffDataTemplate:output_type -> cut.off.service.v1.ListCutOffDataTemplateResponse
	31, // 37: cut.off.service.v1.CutOffService.GetCutOffDataByID:output_type -> cut.off.service.v1.GetCutOffDataByIDResponse
	32, // 38: cut.off.service.v1.CutOffService.GetCutOffSchedule:output_type -> cut.off.service.v1.ListCutOffScheduledDataResponse
	33, // 39: cut.off.service.v1.CutOffService.GetCutOffScheduleByTime:output_type -> cut.off.service.v1.ListCutOffScheduledDataByTimeResponse
	34, // 40: cut.off.service.v1.CutOffService.GetCutOffScheduleToday:output_type -> cut.off.service.v1.ListCutOffDataScheduleTodayRespons
	35, // 41: cut.off.service.v1.CutOffService.GetMyTasksCreatedBy:output_type -> cut.off.service.v1.ArrayString
	35, // 42: cut.off.service.v1.CutOffService.GetMyTasksApprovedBy:output_type -> cut.off.service.v1.ArrayString
	36, // 43: cut.off.service.v1.CutOffService.GetProductAvaible:output_type -> cut.off.service.v1.ListProductUsedRes
	37, // 44: cut.off.service.v1.CutOffService.SaveCutOffData:output_type -> cut.off.service.v1.SaveCutOffDataResponse
	37, // 45: cut.off.service.v1.CutOffService.DeleteCutOffData:output_type -> cut.off.service.v1.SaveCutOffDataResponse
	38, // 46: cut.off.service.v1.CutOffService.GetHolidayTask:output_type -> cut.off.service.v1.GetHolidayTaskResponse
	39, // 47: cut.off.service.v1.CutOffService.GetHolidayTaskByID:output_type -> cut.off.service.v1.GetHolidayTaskByIDResponse
	40, // 48: cut.off.service.v1.CutOffService.CreateHolidayTask:output_type -> cut.off.service.v1.CreateHolidayTaskResponse
	41, // 49: cut.off.service.v1.CutOffService.GetHoliday:output_type -> cut.off.service.v1.GetHolidayResponse
	41, // 50: cut.off.service.v1.CutOffService.GetHolidayHTTP:output_type -> cut.off.service.v1.GetHolidayResponse
	42, // 51: cut.off.service.v1.CutOffService.GetHolidayByFeatureID:output_type -> cut.off.service.v1.GetHolidayByFeatureIDResponse
	43, // 52: cut.off.service.v1.CutOffService.HolidayTaskAction:output_type -> cut.off.service.v1.HolidayTaskActionResponse
	44, // 53: cut.off.service.v1.CutOffService.GetHolidaySchedules:output_type -> cut.off.service.v1.GetHolidaySchedulesResponse
	27, // 54: cut.off.service.v1.CutOffService.DownloadListHolidayTask:output_type -> google.api.HttpBody
	35, // 55: cut.off.service.v1.CutOffService.GetMyHolidayTasksCreatedBy:output_type -> cut.off.service.v1.ArrayString
	35, // 56: cut.off.service.v1.CutOffService.GetMyHolidayTasksApprovedBy:output_type -> cut.off.service.v1.ArrayString
	45, // 57: cut.off.service.v1.CutOffService.CreateHoliday:output_type -> cut.off.service.v1.CreateHolidayResponse
	1,  // 58: cut.off.service.v1.CutOffService.DeleteHoliday:output_type -> cut.off.service.v1.Empty
	46, // 59: cut.off.service.v1.CutOffService.GetAvailableTime:output_type -> cut.off.service.v1.GetAvailableTimeResponse
	30, // [30:60] is the sub-list for method output_type
	0,  // [0:30] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_cut_off_api_proto_init() }
func file_cut_off_api_proto_init() {
	if File_cut_off_api_proto != nil {
		return
	}
	file_cut_off_payload_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cut_off_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cut_off_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cut_off_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cut_off_api_proto_goTypes,
		DependencyIndexes: file_cut_off_api_proto_depIdxs,
		MessageInfos:      file_cut_off_api_proto_msgTypes,
	}.Build()
	File_cut_off_api_proto = out.File
	file_cut_off_api_proto_rawDesc = nil
	file_cut_off_api_proto_goTypes = nil
	file_cut_off_api_proto_depIdxs = nil
}
