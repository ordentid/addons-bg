// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: workflow_payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListWorkflowRequestDirection int32

const (
	ListWorkflowRequest_DESC ListWorkflowRequestDirection = 0
	ListWorkflowRequest_ASC  ListWorkflowRequestDirection = 1
)

// Enum value maps for ListWorkflowRequestDirection.
var (
	ListWorkflowRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListWorkflowRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListWorkflowRequestDirection) Enum() *ListWorkflowRequestDirection {
	p := new(ListWorkflowRequestDirection)
	*p = x
	return p
}

func (x ListWorkflowRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListWorkflowRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[0].Descriptor()
}

func (ListWorkflowRequestDirection) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[0]
}

func (x ListWorkflowRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListWorkflowRequestDirection.Descriptor instead.
func (ListWorkflowRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{8, 0}
}

type ListWorkflowTaskFilterStatuses int32

const (
	ListWorkflowTaskFilter_NullStatus    ListWorkflowTaskFilterStatuses = 0
	ListWorkflowTaskFilter_Pending       ListWorkflowTaskFilterStatuses = 1
	ListWorkflowTaskFilter_Draft         ListWorkflowTaskFilterStatuses = 2
	ListWorkflowTaskFilter_Returned      ListWorkflowTaskFilterStatuses = 3
	ListWorkflowTaskFilter_Approved      ListWorkflowTaskFilterStatuses = 4
	ListWorkflowTaskFilter_Rejected      ListWorkflowTaskFilterStatuses = 5
	ListWorkflowTaskFilter_DeleteRequest ListWorkflowTaskFilterStatuses = 6
	ListWorkflowTaskFilter_Deleted       ListWorkflowTaskFilterStatuses = 7
)

// Enum value maps for ListWorkflowTaskFilterStatuses.
var (
	ListWorkflowTaskFilterStatuses_name = map[int32]string{
		0: "NullStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	ListWorkflowTaskFilterStatuses_value = map[string]int32{
		"NullStatus":    0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x ListWorkflowTaskFilterStatuses) Enum() *ListWorkflowTaskFilterStatuses {
	p := new(ListWorkflowTaskFilterStatuses)
	*p = x
	return p
}

func (x ListWorkflowTaskFilterStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListWorkflowTaskFilterStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[1].Descriptor()
}

func (ListWorkflowTaskFilterStatuses) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[1]
}

func (x ListWorkflowTaskFilterStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListWorkflowTaskFilterStatuses.Descriptor instead.
func (ListWorkflowTaskFilterStatuses) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{22, 0}
}

type ListWorkflowTaskRequestStatuses int32

const (
	ListWorkflowTaskRequest_AllStatus     ListWorkflowTaskRequestStatuses = 0
	ListWorkflowTaskRequest_Pending       ListWorkflowTaskRequestStatuses = 1
	ListWorkflowTaskRequest_Draft         ListWorkflowTaskRequestStatuses = 2
	ListWorkflowTaskRequest_Returned      ListWorkflowTaskRequestStatuses = 3
	ListWorkflowTaskRequest_Approved      ListWorkflowTaskRequestStatuses = 4
	ListWorkflowTaskRequest_Rejected      ListWorkflowTaskRequestStatuses = 5
	ListWorkflowTaskRequest_DeleteRequest ListWorkflowTaskRequestStatuses = 6
	ListWorkflowTaskRequest_Deleted       ListWorkflowTaskRequestStatuses = 7
)

// Enum value maps for ListWorkflowTaskRequestStatuses.
var (
	ListWorkflowTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	ListWorkflowTaskRequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x ListWorkflowTaskRequestStatuses) Enum() *ListWorkflowTaskRequestStatuses {
	p := new(ListWorkflowTaskRequestStatuses)
	*p = x
	return p
}

func (x ListWorkflowTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListWorkflowTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[2].Descriptor()
}

func (ListWorkflowTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[2]
}

func (x ListWorkflowTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListWorkflowTaskRequestStatuses.Descriptor instead.
func (ListWorkflowTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{25, 0}
}

type ListWorkflowTaskRequestSteps int32

const (
	ListWorkflowTaskRequest_AllStep  ListWorkflowTaskRequestSteps = 0
	ListWorkflowTaskRequest_Maker    ListWorkflowTaskRequestSteps = 1
	ListWorkflowTaskRequest_Checker  ListWorkflowTaskRequestSteps = 2
	ListWorkflowTaskRequest_Signer   ListWorkflowTaskRequestSteps = 3
	ListWorkflowTaskRequest_Releaser ListWorkflowTaskRequestSteps = 4
)

// Enum value maps for ListWorkflowTaskRequestSteps.
var (
	ListWorkflowTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListWorkflowTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListWorkflowTaskRequestSteps) Enum() *ListWorkflowTaskRequestSteps {
	p := new(ListWorkflowTaskRequestSteps)
	*p = x
	return p
}

func (x ListWorkflowTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListWorkflowTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[3].Descriptor()
}

func (ListWorkflowTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[3]
}

func (x ListWorkflowTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListWorkflowTaskRequestSteps.Descriptor instead.
func (ListWorkflowTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{25, 1}
}

type ListWorkflowTaskRequest_SortOption int32

const (
	ListWorkflowTaskRequest_none        ListWorkflowTaskRequest_SortOption = 0
	ListWorkflowTaskRequest_code        ListWorkflowTaskRequest_SortOption = 1
	ListWorkflowTaskRequest_companyName ListWorkflowTaskRequest_SortOption = 2
	ListWorkflowTaskRequest_subsidiary  ListWorkflowTaskRequest_SortOption = 3
	ListWorkflowTaskRequest_createdBy   ListWorkflowTaskRequest_SortOption = 4
	ListWorkflowTaskRequest_taskStatus  ListWorkflowTaskRequest_SortOption = 5
	ListWorkflowTaskRequest_description ListWorkflowTaskRequest_SortOption = 6
)

// Enum value maps for ListWorkflowTaskRequest_SortOption.
var (
	ListWorkflowTaskRequest_SortOption_name = map[int32]string{
		0: "none",
		1: "code",
		2: "companyName",
		3: "subsidiary",
		4: "createdBy",
		5: "taskStatus",
		6: "description",
	}
	ListWorkflowTaskRequest_SortOption_value = map[string]int32{
		"none":        0,
		"code":        1,
		"companyName": 2,
		"subsidiary":  3,
		"createdBy":   4,
		"taskStatus":  5,
		"description": 6,
	}
)

func (x ListWorkflowTaskRequest_SortOption) Enum() *ListWorkflowTaskRequest_SortOption {
	p := new(ListWorkflowTaskRequest_SortOption)
	*p = x
	return p
}

func (x ListWorkflowTaskRequest_SortOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListWorkflowTaskRequest_SortOption) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[4].Descriptor()
}

func (ListWorkflowTaskRequest_SortOption) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[4]
}

func (x ListWorkflowTaskRequest_SortOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListWorkflowTaskRequest_SortOption.Descriptor instead.
func (ListWorkflowTaskRequest_SortOption) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{25, 2}
}

type ListWorkflowTaskRequestDirection int32

const (
	ListWorkflowTaskRequest_DESC ListWorkflowTaskRequestDirection = 0
	ListWorkflowTaskRequest_ASC  ListWorkflowTaskRequestDirection = 1
)

// Enum value maps for ListWorkflowTaskRequestDirection.
var (
	ListWorkflowTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListWorkflowTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListWorkflowTaskRequestDirection) Enum() *ListWorkflowTaskRequestDirection {
	p := new(ListWorkflowTaskRequestDirection)
	*p = x
	return p
}

func (x ListWorkflowTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListWorkflowTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[5].Descriptor()
}

func (ListWorkflowTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[5]
}

func (x ListWorkflowTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListWorkflowTaskRequestDirection.Descriptor instead.
func (ListWorkflowTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{25, 3}
}

type DownloadListWorkflowTaskRequestStatuses int32

const (
	DownloadListWorkflowTaskRequest_AllStatus     DownloadListWorkflowTaskRequestStatuses = 0
	DownloadListWorkflowTaskRequest_Pending       DownloadListWorkflowTaskRequestStatuses = 1
	DownloadListWorkflowTaskRequest_Draft         DownloadListWorkflowTaskRequestStatuses = 2
	DownloadListWorkflowTaskRequest_Returned      DownloadListWorkflowTaskRequestStatuses = 3
	DownloadListWorkflowTaskRequest_Approved      DownloadListWorkflowTaskRequestStatuses = 4
	DownloadListWorkflowTaskRequest_Rejected      DownloadListWorkflowTaskRequestStatuses = 5
	DownloadListWorkflowTaskRequest_DeleteRequest DownloadListWorkflowTaskRequestStatuses = 6
	DownloadListWorkflowTaskRequest_Deleted       DownloadListWorkflowTaskRequestStatuses = 7
)

// Enum value maps for DownloadListWorkflowTaskRequestStatuses.
var (
	DownloadListWorkflowTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	DownloadListWorkflowTaskRequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x DownloadListWorkflowTaskRequestStatuses) Enum() *DownloadListWorkflowTaskRequestStatuses {
	p := new(DownloadListWorkflowTaskRequestStatuses)
	*p = x
	return p
}

func (x DownloadListWorkflowTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListWorkflowTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[6].Descriptor()
}

func (DownloadListWorkflowTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[6]
}

func (x DownloadListWorkflowTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListWorkflowTaskRequestStatuses.Descriptor instead.
func (DownloadListWorkflowTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{26, 0}
}

type DownloadListWorkflowTaskRequestSteps int32

const (
	DownloadListWorkflowTaskRequest_AllStep  DownloadListWorkflowTaskRequestSteps = 0
	DownloadListWorkflowTaskRequest_Maker    DownloadListWorkflowTaskRequestSteps = 1
	DownloadListWorkflowTaskRequest_Checker  DownloadListWorkflowTaskRequestSteps = 2
	DownloadListWorkflowTaskRequest_Signer   DownloadListWorkflowTaskRequestSteps = 3
	DownloadListWorkflowTaskRequest_Releaser DownloadListWorkflowTaskRequestSteps = 4
)

// Enum value maps for DownloadListWorkflowTaskRequestSteps.
var (
	DownloadListWorkflowTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	DownloadListWorkflowTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x DownloadListWorkflowTaskRequestSteps) Enum() *DownloadListWorkflowTaskRequestSteps {
	p := new(DownloadListWorkflowTaskRequestSteps)
	*p = x
	return p
}

func (x DownloadListWorkflowTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListWorkflowTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[7].Descriptor()
}

func (DownloadListWorkflowTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[7]
}

func (x DownloadListWorkflowTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListWorkflowTaskRequestSteps.Descriptor instead.
func (DownloadListWorkflowTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{26, 1}
}

type DownloadListWorkflowTaskRequest_SortOption int32

const (
	DownloadListWorkflowTaskRequest_none        DownloadListWorkflowTaskRequest_SortOption = 0
	DownloadListWorkflowTaskRequest_code        DownloadListWorkflowTaskRequest_SortOption = 1
	DownloadListWorkflowTaskRequest_companyName DownloadListWorkflowTaskRequest_SortOption = 2
	DownloadListWorkflowTaskRequest_subsidiary  DownloadListWorkflowTaskRequest_SortOption = 3
	DownloadListWorkflowTaskRequest_createdBy   DownloadListWorkflowTaskRequest_SortOption = 4
	DownloadListWorkflowTaskRequest_taskStatus  DownloadListWorkflowTaskRequest_SortOption = 5
	DownloadListWorkflowTaskRequest_description DownloadListWorkflowTaskRequest_SortOption = 6
)

// Enum value maps for DownloadListWorkflowTaskRequest_SortOption.
var (
	DownloadListWorkflowTaskRequest_SortOption_name = map[int32]string{
		0: "none",
		1: "code",
		2: "companyName",
		3: "subsidiary",
		4: "createdBy",
		5: "taskStatus",
		6: "description",
	}
	DownloadListWorkflowTaskRequest_SortOption_value = map[string]int32{
		"none":        0,
		"code":        1,
		"companyName": 2,
		"subsidiary":  3,
		"createdBy":   4,
		"taskStatus":  5,
		"description": 6,
	}
)

func (x DownloadListWorkflowTaskRequest_SortOption) Enum() *DownloadListWorkflowTaskRequest_SortOption {
	p := new(DownloadListWorkflowTaskRequest_SortOption)
	*p = x
	return p
}

func (x DownloadListWorkflowTaskRequest_SortOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListWorkflowTaskRequest_SortOption) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[8].Descriptor()
}

func (DownloadListWorkflowTaskRequest_SortOption) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[8]
}

func (x DownloadListWorkflowTaskRequest_SortOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListWorkflowTaskRequest_SortOption.Descriptor instead.
func (DownloadListWorkflowTaskRequest_SortOption) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{26, 2}
}

type DownloadListWorkflowTaskRequestDirection int32

const (
	DownloadListWorkflowTaskRequest_DESC DownloadListWorkflowTaskRequestDirection = 0
	DownloadListWorkflowTaskRequest_ASC  DownloadListWorkflowTaskRequestDirection = 1
)

// Enum value maps for DownloadListWorkflowTaskRequestDirection.
var (
	DownloadListWorkflowTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	DownloadListWorkflowTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x DownloadListWorkflowTaskRequestDirection) Enum() *DownloadListWorkflowTaskRequestDirection {
	p := new(DownloadListWorkflowTaskRequestDirection)
	*p = x
	return p
}

func (x DownloadListWorkflowTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListWorkflowTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[9].Descriptor()
}

func (DownloadListWorkflowTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[9]
}

func (x DownloadListWorkflowTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListWorkflowTaskRequestDirection.Descriptor instead.
func (DownloadListWorkflowTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{26, 3}
}

type DownloadListWorkflowTaskRequest_Formats int32

const (
	DownloadListWorkflowTaskRequest_null DownloadListWorkflowTaskRequest_Formats = 0
	DownloadListWorkflowTaskRequest_pdf  DownloadListWorkflowTaskRequest_Formats = 1
	DownloadListWorkflowTaskRequest_xls  DownloadListWorkflowTaskRequest_Formats = 2
	DownloadListWorkflowTaskRequest_csv  DownloadListWorkflowTaskRequest_Formats = 3
)

// Enum value maps for DownloadListWorkflowTaskRequest_Formats.
var (
	DownloadListWorkflowTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	DownloadListWorkflowTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x DownloadListWorkflowTaskRequest_Formats) Enum() *DownloadListWorkflowTaskRequest_Formats {
	p := new(DownloadListWorkflowTaskRequest_Formats)
	*p = x
	return p
}

func (x DownloadListWorkflowTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListWorkflowTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[10].Descriptor()
}

func (DownloadListWorkflowTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[10]
}

func (x DownloadListWorkflowTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListWorkflowTaskRequest_Formats.Descriptor instead.
func (DownloadListWorkflowTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{26, 4}
}

type ListCompanyWorkflowRequestDirection int32

const (
	ListCompanyWorkflowRequest_DESC ListCompanyWorkflowRequestDirection = 0
	ListCompanyWorkflowRequest_ASC  ListCompanyWorkflowRequestDirection = 1
)

// Enum value maps for ListCompanyWorkflowRequestDirection.
var (
	ListCompanyWorkflowRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListCompanyWorkflowRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListCompanyWorkflowRequestDirection) Enum() *ListCompanyWorkflowRequestDirection {
	p := new(ListCompanyWorkflowRequestDirection)
	*p = x
	return p
}

func (x ListCompanyWorkflowRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListCompanyWorkflowRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_workflow_payload_proto_enumTypes[11].Descriptor()
}

func (ListCompanyWorkflowRequestDirection) Type() protoreflect.EnumType {
	return &file_workflow_payload_proto_enumTypes[11]
}

func (x ListCompanyWorkflowRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListCompanyWorkflowRequestDirection.Descriptor instead.
func (ListCompanyWorkflowRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{30, 0}
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{3}
}

type InvalidKeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidKeyError) Reset() {
	*x = InvalidKeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyError) ProtoMessage() {}

func (x *InvalidKeyError) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyError.ProtoReflect.Descriptor instead.
func (*InvalidKeyError) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{4}
}

func (x *InvalidKeyError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InvalidKeyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *JWTTokenResponse) Reset() {
	*x = JWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokenResponse) ProtoMessage() {}

func (x *JWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokenResponse.ProtoReflect.Descriptor instead.
func (*JWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{6}
}

func (x *JWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTTokenResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{7}
}

type ListWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *Workflow                    `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Limit    int32                        `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                        `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string                       `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir      ListWorkflowRequestDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=workflow.service.v1.ListWorkflowRequestDirection" json:"dir,omitempty"`
	Filter   string                       `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                       `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListWorkflowRequest) Reset() {
	*x = ListWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowRequest) ProtoMessage() {}

func (x *ListWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{8}
}

func (x *ListWorkflowRequest) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *ListWorkflowRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorkflowRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListWorkflowRequest) GetDir() ListWorkflowRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListWorkflowRequest_DESC
}

func (x *ListWorkflowRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListWorkflowRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{9}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type ListWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*Workflow         `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListWorkflowResponse) Reset() {
	*x = ListWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowResponse) ProtoMessage() {}

func (x *ListWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{10}
}

func (x *ListWorkflowResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListWorkflowResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListWorkflowResponse) GetData() []*Workflow {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListWorkflowResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *Workflow `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64    `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateWorkflowRequest) Reset() {
	*x = CreateWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowRequest) ProtoMessage() {}

func (x *CreateWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{11}
}

func (x *CreateWorkflowRequest) GetData() *Workflow {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateWorkflowRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateWorkflowTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *WorkflowWrite `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64         `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool           `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateWorkflowTaskRequest) Reset() {
	*x = CreateWorkflowTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkflowTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowTaskRequest) ProtoMessage() {}

func (x *CreateWorkflowTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkflowTaskRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{12}
}

func (x *CreateWorkflowTaskRequest) GetData() *WorkflowWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateWorkflowTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateWorkflowTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type WorkflowWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowID            uint64                 `protobuf:"varint,1,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	ModuleID              []uint64               `protobuf:"varint,2,rep,packed,name=moduleID,proto3" json:"moduleID,omitempty"`
	CompanyID             uint64                 `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CurrencyID            uint64                 `protobuf:"varint,4,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	CurrencyName          string                 `protobuf:"bytes,5,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
	WorkflowCode          string                 `protobuf:"bytes,6,opt,name=workflowCode,proto3" json:"workflowCode,omitempty"`
	Description           string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt             *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	IsCreatedInputAccount bool                   `protobuf:"varint,21,opt,name=isCreatedInputAccount,proto3" json:"isCreatedInputAccount,omitempty"`
	IsCustomInputAccount  bool                   `protobuf:"varint,22,opt,name=isCustomInputAccount,proto3" json:"isCustomInputAccount,omitempty"`
	Logics                []*WorkflowLogic       `protobuf:"bytes,20,rep,name=logics,proto3" json:"logics,omitempty"`
	CreatedByID           uint64                 `protobuf:"varint,25,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedByID           uint64                 `protobuf:"varint,26,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
}

func (x *WorkflowWrite) Reset() {
	*x = WorkflowWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowWrite) ProtoMessage() {}

func (x *WorkflowWrite) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowWrite.ProtoReflect.Descriptor instead.
func (*WorkflowWrite) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{13}
}

func (x *WorkflowWrite) GetWorkflowID() uint64 {
	if x != nil {
		return x.WorkflowID
	}
	return 0
}

func (x *WorkflowWrite) GetModuleID() []uint64 {
	if x != nil {
		return x.ModuleID
	}
	return nil
}

func (x *WorkflowWrite) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *WorkflowWrite) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *WorkflowWrite) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *WorkflowWrite) GetWorkflowCode() string {
	if x != nil {
		return x.WorkflowCode
	}
	return ""
}

func (x *WorkflowWrite) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowWrite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowWrite) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *WorkflowWrite) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *WorkflowWrite) GetIsCreatedInputAccount() bool {
	if x != nil {
		return x.IsCreatedInputAccount
	}
	return false
}

func (x *WorkflowWrite) GetIsCustomInputAccount() bool {
	if x != nil {
		return x.IsCustomInputAccount
	}
	return false
}

func (x *WorkflowWrite) GetLogics() []*WorkflowLogic {
	if x != nil {
		return x.Logics
	}
	return nil
}

func (x *WorkflowWrite) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *WorkflowWrite) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

type CreateWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WorkflowWrite `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateWorkflowResponse) Reset() {
	*x = CreateWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowResponse) ProtoMessage() {}

func (x *CreateWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{14}
}

func (x *CreateWorkflowResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateWorkflowResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateWorkflowResponse) GetData() *WorkflowWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,11,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,12,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,13,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{15}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *Task) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Task) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type WorkflowTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *WorkflowWrite `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Task     *Task          `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Company  *Company       `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Currency *Currency      `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Module   []*Product     `protobuf:"bytes,5,rep,name=module,proto3" json:"module,omitempty"`
}

func (x *WorkflowTask) Reset() {
	*x = WorkflowTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTask) ProtoMessage() {}

func (x *WorkflowTask) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTask.ProtoReflect.Descriptor instead.
func (*WorkflowTask) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{16}
}

func (x *WorkflowTask) GetWorkflow() *WorkflowWrite {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *WorkflowTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *WorkflowTask) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *WorkflowTask) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *WorkflowTask) GetModule() []*Product {
	if x != nil {
		return x.Module
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID          string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName        string `protobuf:"bytes,2,opt,name=companyName,proto3" json:"companyName,omitempty"`
	HoldingID          uint64 `protobuf:"varint,3,opt,name=holdingID,proto3" json:"holdingID,omitempty"`
	GroupName          string `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	HoldingCompanyName string `protobuf:"bytes,5,opt,name=holdingCompanyName,proto3" json:"holdingCompanyName,omitempty"`
	Subsidiaries       string `protobuf:"bytes,6,opt,name=subsidiaries,proto3" json:"subsidiaries,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{17}
}

func (x *Company) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *Company) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Company) GetHoldingID() uint64 {
	if x != nil {
		return x.HoldingID
	}
	return 0
}

func (x *Company) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Company) GetHoldingCompanyName() string {
	if x != nil {
		return x.HoldingCompanyName
	}
	return ""
}

func (x *Company) GetSubsidiaries() string {
	if x != nil {
		return x.Subsidiaries
	}
	return ""
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyID   uint64 `protobuf:"varint,1,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	CurrencyName string `protobuf:"bytes,2,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
	CurrencyCode string `protobuf:"bytes,3,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{18}
}

func (x *Currency) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *Currency) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *Currency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID       uint64 `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountNumber   string `protobuf:"bytes,2,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountAlias    string `protobuf:"bytes,3,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	AccountName     string `protobuf:"bytes,4,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountType     string `protobuf:"bytes,5,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountStatus   string `protobuf:"bytes,6,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`
	AccountCurrency string `protobuf:"bytes,7,opt,name=accountCurrency,proto3" json:"accountCurrency,omitempty"`
	AccessLevel     string `protobuf:"bytes,8,opt,name=accessLevel,proto3" json:"accessLevel,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{19}
}

func (x *Account) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *Account) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *Account) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *Account) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *Account) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *Account) GetAccountStatus() string {
	if x != nil {
		return x.AccountStatus
	}
	return ""
}

func (x *Account) GetAccountCurrency() string {
	if x != nil {
		return x.AccountCurrency
	}
	return ""
}

func (x *Account) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID       uint64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Is3RdParty      bool   `protobuf:"varint,3,opt,name=is3rdParty,proto3" json:"is3rdParty,omitempty"`
	IsTransactional bool   `protobuf:"varint,4,opt,name=IsTransactional,proto3" json:"IsTransactional,omitempty"`
	CurrencyID      uint64 `protobuf:"varint,5,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{20}
}

func (x *Product) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetIs3RdParty() bool {
	if x != nil {
		return x.Is3RdParty
	}
	return false
}

func (x *Product) GetIsTransactional() bool {
	if x != nil {
		return x.IsTransactional
	}
	return false
}

func (x *Product) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

type CreateWorkflowTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TaskID  uint64 `protobuf:"varint,4,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateWorkflowTaskResponse) Reset() {
	*x = CreateWorkflowTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkflowTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkflowTaskResponse) ProtoMessage() {}

func (x *CreateWorkflowTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkflowTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkflowTaskResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{21}
}

func (x *CreateWorkflowTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateWorkflowTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateWorkflowTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateWorkflowTaskResponse) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ListWorkflowTaskFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module       string                         `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Company      string                         `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	CurrencyName string                         `protobuf:"bytes,3,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
	WorkflowCode string                         `protobuf:"bytes,4,opt,name=workflowCode,proto3" json:"workflowCode,omitempty"`
	Status       ListWorkflowTaskFilterStatuses `protobuf:"varint,5,opt,name=status,proto3,enum=workflow.service.v1.ListWorkflowTaskFilterStatuses" json:"status,omitempty"`
	CreatedBy    string                         `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CompanyID    uint64                         `protobuf:"varint,7,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *ListWorkflowTaskFilter) Reset() {
	*x = ListWorkflowTaskFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowTaskFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowTaskFilter) ProtoMessage() {}

func (x *ListWorkflowTaskFilter) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowTaskFilter.ProtoReflect.Descriptor instead.
func (*ListWorkflowTaskFilter) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{22}
}

func (x *ListWorkflowTaskFilter) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *ListWorkflowTaskFilter) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ListWorkflowTaskFilter) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *ListWorkflowTaskFilter) GetWorkflowCode() string {
	if x != nil {
		return x.WorkflowCode
	}
	return ""
}

func (x *ListWorkflowTaskFilter) GetStatus() ListWorkflowTaskFilterStatuses {
	if x != nil {
		return x.Status
	}
	return ListWorkflowTaskFilter_NullStatus
}

func (x *ListWorkflowTaskFilter) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ListWorkflowTaskFilter) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type GetWorkflowTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetWorkflowTaskRequest) Reset() {
	*x = GetWorkflowTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowTaskRequest) ProtoMessage() {}

func (x *GetWorkflowTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowTaskRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowTaskRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{23}
}

func (x *GetWorkflowTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetWorkflowTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool          `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WorkflowTask `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWorkflowTaskResponse) Reset() {
	*x = GetWorkflowTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowTaskResponse) ProtoMessage() {}

func (x *GetWorkflowTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowTaskResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowTaskResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{24}
}

func (x *GetWorkflowTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetWorkflowTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetWorkflowTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetWorkflowTaskResponse) GetData() *WorkflowTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListWorkflowTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     ListWorkflowTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=workflow.service.v1.ListWorkflowTaskRequestStatuses" json:"status,omitempty"`
	Step       ListWorkflowTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=workflow.service.v1.ListWorkflowTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                            `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                            `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                           `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        ListWorkflowTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=workflow.service.v1.ListWorkflowTaskRequestDirection" json:"dir,omitempty"`
	Filter     *ListWorkflowTaskFilter          `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                           `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	MyTaskOnly bool                             `protobuf:"varint,9,opt,name=myTaskOnly,proto3" json:"myTaskOnly,omitempty"`
}

func (x *ListWorkflowTaskRequest) Reset() {
	*x = ListWorkflowTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowTaskRequest) ProtoMessage() {}

func (x *ListWorkflowTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowTaskRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowTaskRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{25}
}

func (x *ListWorkflowTaskRequest) GetStatus() ListWorkflowTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListWorkflowTaskRequest_AllStatus
}

func (x *ListWorkflowTaskRequest) GetStep() ListWorkflowTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListWorkflowTaskRequest_AllStep
}

func (x *ListWorkflowTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkflowTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWorkflowTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListWorkflowTaskRequest) GetDir() ListWorkflowTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListWorkflowTaskRequest_DESC
}

func (x *ListWorkflowTaskRequest) GetFilter() *ListWorkflowTaskFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListWorkflowTaskRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListWorkflowTaskRequest) GetMyTaskOnly() bool {
	if x != nil {
		return x.MyTaskOnly
	}
	return false
}

type DownloadListWorkflowTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     DownloadListWorkflowTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=workflow.service.v1.DownloadListWorkflowTaskRequestStatuses" json:"status,omitempty"`
	Step       DownloadListWorkflowTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=workflow.service.v1.DownloadListWorkflowTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                                    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                    `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        DownloadListWorkflowTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=workflow.service.v1.DownloadListWorkflowTaskRequestDirection" json:"dir,omitempty"`
	Filter     *ListWorkflowTaskFilter                  `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Search     string                                   `protobuf:"bytes,8,opt,name=search,proto3" json:"search,omitempty"`
	MyTaskOnly bool                                     `protobuf:"varint,9,opt,name=myTaskOnly,proto3" json:"myTaskOnly,omitempty"`
	FileFormat DownloadListWorkflowTaskRequest_Formats  `protobuf:"varint,15,opt,name=fileFormat,proto3,enum=workflow.service.v1.DownloadListWorkflowTaskRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *DownloadListWorkflowTaskRequest) Reset() {
	*x = DownloadListWorkflowTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadListWorkflowTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadListWorkflowTaskRequest) ProtoMessage() {}

func (x *DownloadListWorkflowTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadListWorkflowTaskRequest.ProtoReflect.Descriptor instead.
func (*DownloadListWorkflowTaskRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{26}
}

func (x *DownloadListWorkflowTaskRequest) GetStatus() DownloadListWorkflowTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return DownloadListWorkflowTaskRequest_AllStatus
}

func (x *DownloadListWorkflowTaskRequest) GetStep() DownloadListWorkflowTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return DownloadListWorkflowTaskRequest_AllStep
}

func (x *DownloadListWorkflowTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DownloadListWorkflowTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DownloadListWorkflowTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DownloadListWorkflowTaskRequest) GetDir() DownloadListWorkflowTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return DownloadListWorkflowTaskRequest_DESC
}

func (x *DownloadListWorkflowTaskRequest) GetFilter() *ListWorkflowTaskFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DownloadListWorkflowTaskRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *DownloadListWorkflowTaskRequest) GetMyTaskOnly() bool {
	if x != nil {
		return x.MyTaskOnly
	}
	return false
}

func (x *DownloadListWorkflowTaskRequest) GetFileFormat() DownloadListWorkflowTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return DownloadListWorkflowTaskRequest_null
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{27}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type GetWorkflowTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetWorkflowTaskByIDRequest) Reset() {
	*x = GetWorkflowTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowTaskByIDRequest) ProtoMessage() {}

func (x *GetWorkflowTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{28}
}

func (x *GetWorkflowTaskByIDRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ListWorkflowTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*WorkflowTask     `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListWorkflowTaskResponse) Reset() {
	*x = ListWorkflowTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowTaskResponse) ProtoMessage() {}

func (x *ListWorkflowTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowTaskResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowTaskResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{29}
}

func (x *ListWorkflowTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListWorkflowTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListWorkflowTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListWorkflowTaskResponse) GetData() []*WorkflowTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListWorkflowTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListCompanyWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *CompanyWorkflows                   `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Limit    int32                               `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                               `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string                              `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir      ListCompanyWorkflowRequestDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=workflow.service.v1.ListCompanyWorkflowRequestDirection" json:"dir,omitempty"`
	Filter   string                              `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                              `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListCompanyWorkflowRequest) Reset() {
	*x = ListCompanyWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCompanyWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompanyWorkflowRequest) ProtoMessage() {}

func (x *ListCompanyWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompanyWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ListCompanyWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{30}
}

func (x *ListCompanyWorkflowRequest) GetWorkflow() *CompanyWorkflows {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *ListCompanyWorkflowRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCompanyWorkflowRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCompanyWorkflowRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListCompanyWorkflowRequest) GetDir() ListCompanyWorkflowRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListCompanyWorkflowRequest_DESC
}

func (x *ListCompanyWorkflowRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListCompanyWorkflowRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListCompanyWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*CompanyWorkflows `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCompanyWorkflowResponse) Reset() {
	*x = ListCompanyWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCompanyWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompanyWorkflowResponse) ProtoMessage() {}

func (x *ListCompanyWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompanyWorkflowResponse.ProtoReflect.Descriptor instead.
func (*ListCompanyWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{31}
}

func (x *ListCompanyWorkflowResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListCompanyWorkflowResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListCompanyWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListCompanyWorkflowResponse) GetData() []*CompanyWorkflows {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListCompanyWorkflowResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCompanyWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *GetCompanyWorkflowRequest) Reset() {
	*x = GetCompanyWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyWorkflowRequest) ProtoMessage() {}

func (x *GetCompanyWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{32}
}

func (x *GetCompanyWorkflowRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type GetCompanyWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CompanyWorkflows `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCompanyWorkflowResponse) Reset() {
	*x = GetCompanyWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyWorkflowResponse) ProtoMessage() {}

func (x *GetCompanyWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{33}
}

func (x *GetCompanyWorkflowResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetCompanyWorkflowResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCompanyWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCompanyWorkflowResponse) GetData() *CompanyWorkflows {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCompanyWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CompanyWorkflows `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64            `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateCompanyWorkflowRequest) Reset() {
	*x = CreateCompanyWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyWorkflowRequest) ProtoMessage() {}

func (x *CreateCompanyWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyWorkflowRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{34}
}

func (x *CreateCompanyWorkflowRequest) GetData() *CompanyWorkflows {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateCompanyWorkflowRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateCompanyWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CompanyWorkflows `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCompanyWorkflowResponse) Reset() {
	*x = CreateCompanyWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyWorkflowResponse) ProtoMessage() {}

func (x *CreateCompanyWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyWorkflowResponse.ProtoReflect.Descriptor instead.
func (*CreateCompanyWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{35}
}

func (x *CreateCompanyWorkflowResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateCompanyWorkflowResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateCompanyWorkflowResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateCompanyWorkflowResponse) GetData() *CompanyWorkflows {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAvailableCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64   `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	ModuleID  []uint64 `protobuf:"varint,2,rep,packed,name=moduleID,proto3" json:"moduleID,omitempty"`
}

func (x *GetAvailableCurrencyRequest) Reset() {
	*x = GetAvailableCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableCurrencyRequest) ProtoMessage() {}

func (x *GetAvailableCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableCurrencyRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{36}
}

func (x *GetAvailableCurrencyRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *GetAvailableCurrencyRequest) GetModuleID() []uint64 {
	if x != nil {
		return x.ModuleID
	}
	return nil
}

type GetAvailableCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Currency `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAvailableCurrencyResponse) Reset() {
	*x = GetAvailableCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableCurrencyResponse) ProtoMessage() {}

func (x *GetAvailableCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{37}
}

func (x *GetAvailableCurrencyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetAvailableCurrencyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAvailableCurrencyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAvailableCurrencyResponse) GetData() []*Currency {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteRequirementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequirementID []uint64 `protobuf:"varint,1,rep,packed,name=requirementID,proto3" json:"requirementID,omitempty"`
	CompanyID     uint64   `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	AssignedSteps []string `protobuf:"bytes,3,rep,name=assignedSteps,proto3" json:"assignedSteps,omitempty"`
}

func (x *DeleteRequirementRequest) Reset() {
	*x = DeleteRequirementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequirementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequirementRequest) ProtoMessage() {}

func (x *DeleteRequirementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequirementRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequirementRequest) Descriptor() ([]byte, []int) {
	return file_workflow_payload_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteRequirementRequest) GetRequirementID() []uint64 {
	if x != nil {
		return x.RequirementID
	}
	return nil
}

func (x *DeleteRequirementRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *DeleteRequirementRequest) GetAssignedSteps() []string {
	if x != nil {
		return x.AssignedSteps
	}
	return nil
}

var File_workflow_payload_proto protoreflect.FileDescriptor

var file_workflow_payload_proto_rawDesc = []byte{
	0x0a, 0x16, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x20, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x0d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x4b, 0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x44, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10,
	0x01, 0x22, 0x3c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xd6, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x85, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x22, 0x8b, 0x05, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x73, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x04, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa6,
	0x02, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x3e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x2d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x36,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x33, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x33, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x22, 0x78, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x22, 0x9a, 0x03, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x22, 0x7c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x0a, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05,
	0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07,
	0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf8, 0x07, 0x0a, 0x17, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x48, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x57, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x32, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x4a, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x32, 0x92, 0x41, 0x2f, 0x32, 0x2d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x62, 0x79,
	0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x20,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x7b, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10,
	0x04, 0x22, 0x71, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61,
	0x72, 0x79, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x06, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x53, 0x43, 0x10, 0x01, 0x22, 0xa6, 0x09, 0x0a, 0x1f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x4e, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e,
	0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20,
	0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32,
	0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x50, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x57, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x12, 0x92, 0x41, 0x0f, 0x32, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x92, 0x41, 0x2f,
	0x32, 0x2d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x62, 0x79, 0x20, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x20, 0x20, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x20, 0x6f,
	0x72, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x7b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x07, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65,
	0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x71, 0x0a, 0x0a, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x72, 0x79, 0x10, 0x03, 0x12, 0x0d, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x22, 0x1e, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45,
	0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x2e, 0x0a,
	0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78,
	0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0x7c, 0x0a,
	0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x22, 0xde, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xdb, 0x03, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31,
	0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70,
	0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65,
	0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x39, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01,
	0x22, 0xe5, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x22, 0x9b, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x71, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x22, 0x9e, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x95,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x73, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workflow_payload_proto_rawDescOnce sync.Once
	file_workflow_payload_proto_rawDescData = file_workflow_payload_proto_rawDesc
)

func file_workflow_payload_proto_rawDescGZIP() []byte {
	file_workflow_payload_proto_rawDescOnce.Do(func() {
		file_workflow_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_workflow_payload_proto_rawDescData)
	})
	return file_workflow_payload_proto_rawDescData
}

var file_workflow_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_workflow_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_workflow_payload_proto_goTypes = []interface{}{
	(ListWorkflowRequestDirection)(0),               // 0: workflow.service.v1.ListWorkflowRequest.direction
	(ListWorkflowTaskFilterStatuses)(0),             // 1: workflow.service.v1.ListWorkflowTaskFilter.statuses
	(ListWorkflowTaskRequestStatuses)(0),            // 2: workflow.service.v1.ListWorkflowTaskRequest.statuses
	(ListWorkflowTaskRequestSteps)(0),               // 3: workflow.service.v1.ListWorkflowTaskRequest.steps
	(ListWorkflowTaskRequest_SortOption)(0),         // 4: workflow.service.v1.ListWorkflowTaskRequest.SortOption
	(ListWorkflowTaskRequestDirection)(0),           // 5: workflow.service.v1.ListWorkflowTaskRequest.direction
	(DownloadListWorkflowTaskRequestStatuses)(0),    // 6: workflow.service.v1.DownloadListWorkflowTaskRequest.statuses
	(DownloadListWorkflowTaskRequestSteps)(0),       // 7: workflow.service.v1.DownloadListWorkflowTaskRequest.steps
	(DownloadListWorkflowTaskRequest_SortOption)(0), // 8: workflow.service.v1.DownloadListWorkflowTaskRequest.SortOption
	(DownloadListWorkflowTaskRequestDirection)(0),   // 9: workflow.service.v1.DownloadListWorkflowTaskRequest.direction
	(DownloadListWorkflowTaskRequest_Formats)(0),    // 10: workflow.service.v1.DownloadListWorkflowTaskRequest.Formats
	(ListCompanyWorkflowRequestDirection)(0),        // 11: workflow.service.v1.ListCompanyWorkflowRequest.direction
	(*LoginRequest)(nil),                            // 12: workflow.service.v1.LoginRequest
	(*LoginResponse)(nil),                           // 13: workflow.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                     // 14: workflow.service.v1.HealthCheckResponse
	(*Empty)(nil),                                   // 15: workflow.service.v1.Empty
	(*InvalidKeyError)(nil),                         // 16: workflow.service.v1.InvalidKeyError
	(*ErrorBodyResponse)(nil),                       // 17: workflow.service.v1.errorBodyResponse
	(*JWTTokenResponse)(nil),                        // 18: workflow.service.v1.JWTTokenResponse
	(*ListRequest)(nil),                             // 19: workflow.service.v1.ListRequest
	(*ListWorkflowRequest)(nil),                     // 20: workflow.service.v1.ListWorkflowRequest
	(*Sort)(nil),                                    // 21: workflow.service.v1.Sort
	(*ListWorkflowResponse)(nil),                    // 22: workflow.service.v1.ListWorkflowResponse
	(*CreateWorkflowRequest)(nil),                   // 23: workflow.service.v1.CreateWorkflowRequest
	(*CreateWorkflowTaskRequest)(nil),               // 24: workflow.service.v1.CreateWorkflowTaskRequest
	(*WorkflowWrite)(nil),                           // 25: workflow.service.v1.WorkflowWrite
	(*CreateWorkflowResponse)(nil),                  // 26: workflow.service.v1.CreateWorkflowResponse
	(*Task)(nil),                                    // 27: workflow.service.v1.Task
	(*WorkflowTask)(nil),                            // 28: workflow.service.v1.WorkflowTask
	(*Company)(nil),                                 // 29: workflow.service.v1.Company
	(*Currency)(nil),                                // 30: workflow.service.v1.Currency
	(*Account)(nil),                                 // 31: workflow.service.v1.Account
	(*Product)(nil),                                 // 32: workflow.service.v1.Product
	(*CreateWorkflowTaskResponse)(nil),              // 33: workflow.service.v1.CreateWorkflowTaskResponse
	(*ListWorkflowTaskFilter)(nil),                  // 34: workflow.service.v1.ListWorkflowTaskFilter
	(*GetWorkflowTaskRequest)(nil),                  // 35: workflow.service.v1.GetWorkflowTaskRequest
	(*GetWorkflowTaskResponse)(nil),                 // 36: workflow.service.v1.GetWorkflowTaskResponse
	(*ListWorkflowTaskRequest)(nil),                 // 37: workflow.service.v1.ListWorkflowTaskRequest
	(*DownloadListWorkflowTaskRequest)(nil),         // 38: workflow.service.v1.DownloadListWorkflowTaskRequest
	(*PaginationResponse)(nil),                      // 39: workflow.service.v1.PaginationResponse
	(*GetWorkflowTaskByIDRequest)(nil),              // 40: workflow.service.v1.GetWorkflowTaskByIDRequest
	(*ListWorkflowTaskResponse)(nil),                // 41: workflow.service.v1.ListWorkflowTaskResponse
	(*ListCompanyWorkflowRequest)(nil),              // 42: workflow.service.v1.ListCompanyWorkflowRequest
	(*ListCompanyWorkflowResponse)(nil),             // 43: workflow.service.v1.ListCompanyWorkflowResponse
	(*GetCompanyWorkflowRequest)(nil),               // 44: workflow.service.v1.GetCompanyWorkflowRequest
	(*GetCompanyWorkflowResponse)(nil),              // 45: workflow.service.v1.GetCompanyWorkflowResponse
	(*CreateCompanyWorkflowRequest)(nil),            // 46: workflow.service.v1.CreateCompanyWorkflowRequest
	(*CreateCompanyWorkflowResponse)(nil),           // 47: workflow.service.v1.CreateCompanyWorkflowResponse
	(*GetAvailableCurrencyRequest)(nil),             // 48: workflow.service.v1.GetAvailableCurrencyRequest
	(*GetAvailableCurrencyResponse)(nil),            // 49: workflow.service.v1.GetAvailableCurrencyResponse
	(*DeleteRequirementRequest)(nil),                // 50: workflow.service.v1.DeleteRequirementRequest
	(*Workflow)(nil),                                // 51: workflow.service.v1.Workflow
	(*timestamppb.Timestamp)(nil),                   // 52: google.protobuf.Timestamp
	(*WorkflowLogic)(nil),                           // 53: workflow.service.v1.WorkflowLogic
	(*CompanyWorkflows)(nil),                        // 54: workflow.service.v1.CompanyWorkflows
}
var file_workflow_payload_proto_depIdxs = []int32{
	51, // 0: workflow.service.v1.ListWorkflowRequest.workflow:type_name -> workflow.service.v1.Workflow
	0,  // 1: workflow.service.v1.ListWorkflowRequest.dir:type_name -> workflow.service.v1.ListWorkflowRequest.direction
	51, // 2: workflow.service.v1.ListWorkflowResponse.data:type_name -> workflow.service.v1.Workflow
	39, // 3: workflow.service.v1.ListWorkflowResponse.pagination:type_name -> workflow.service.v1.PaginationResponse
	51, // 4: workflow.service.v1.CreateWorkflowRequest.data:type_name -> workflow.service.v1.Workflow
	25, // 5: workflow.service.v1.CreateWorkflowTaskRequest.data:type_name -> workflow.service.v1.WorkflowWrite
	52, // 6: workflow.service.v1.WorkflowWrite.createdAt:type_name -> google.protobuf.Timestamp
	52, // 7: workflow.service.v1.WorkflowWrite.updatedAt:type_name -> google.protobuf.Timestamp
	52, // 8: workflow.service.v1.WorkflowWrite.deletedAt:type_name -> google.protobuf.Timestamp
	53, // 9: workflow.service.v1.WorkflowWrite.logics:type_name -> workflow.service.v1.WorkflowLogic
	25, // 10: workflow.service.v1.CreateWorkflowResponse.data:type_name -> workflow.service.v1.WorkflowWrite
	52, // 11: workflow.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	52, // 12: workflow.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	25, // 13: workflow.service.v1.WorkflowTask.workflow:type_name -> workflow.service.v1.WorkflowWrite
	27, // 14: workflow.service.v1.WorkflowTask.task:type_name -> workflow.service.v1.Task
	29, // 15: workflow.service.v1.WorkflowTask.company:type_name -> workflow.service.v1.Company
	30, // 16: workflow.service.v1.WorkflowTask.currency:type_name -> workflow.service.v1.Currency
	32, // 17: workflow.service.v1.WorkflowTask.module:type_name -> workflow.service.v1.Product
	1,  // 18: workflow.service.v1.ListWorkflowTaskFilter.status:type_name -> workflow.service.v1.ListWorkflowTaskFilter.statuses
	28, // 19: workflow.service.v1.GetWorkflowTaskResponse.data:type_name -> workflow.service.v1.WorkflowTask
	2,  // 20: workflow.service.v1.ListWorkflowTaskRequest.status:type_name -> workflow.service.v1.ListWorkflowTaskRequest.statuses
	3,  // 21: workflow.service.v1.ListWorkflowTaskRequest.step:type_name -> workflow.service.v1.ListWorkflowTaskRequest.steps
	5,  // 22: workflow.service.v1.ListWorkflowTaskRequest.dir:type_name -> workflow.service.v1.ListWorkflowTaskRequest.direction
	34, // 23: workflow.service.v1.ListWorkflowTaskRequest.filter:type_name -> workflow.service.v1.ListWorkflowTaskFilter
	6,  // 24: workflow.service.v1.DownloadListWorkflowTaskRequest.status:type_name -> workflow.service.v1.DownloadListWorkflowTaskRequest.statuses
	7,  // 25: workflow.service.v1.DownloadListWorkflowTaskRequest.step:type_name -> workflow.service.v1.DownloadListWorkflowTaskRequest.steps
	9,  // 26: workflow.service.v1.DownloadListWorkflowTaskRequest.dir:type_name -> workflow.service.v1.DownloadListWorkflowTaskRequest.direction
	34, // 27: workflow.service.v1.DownloadListWorkflowTaskRequest.filter:type_name -> workflow.service.v1.ListWorkflowTaskFilter
	10, // 28: workflow.service.v1.DownloadListWorkflowTaskRequest.fileFormat:type_name -> workflow.service.v1.DownloadListWorkflowTaskRequest.Formats
	28, // 29: workflow.service.v1.ListWorkflowTaskResponse.data:type_name -> workflow.service.v1.WorkflowTask
	39, // 30: workflow.service.v1.ListWorkflowTaskResponse.pagination:type_name -> workflow.service.v1.PaginationResponse
	54, // 31: workflow.service.v1.ListCompanyWorkflowRequest.workflow:type_name -> workflow.service.v1.CompanyWorkflows
	11, // 32: workflow.service.v1.ListCompanyWorkflowRequest.dir:type_name -> workflow.service.v1.ListCompanyWorkflowRequest.direction
	54, // 33: workflow.service.v1.ListCompanyWorkflowResponse.data:type_name -> workflow.service.v1.CompanyWorkflows
	39, // 34: workflow.service.v1.ListCompanyWorkflowResponse.pagination:type_name -> workflow.service.v1.PaginationResponse
	54, // 35: workflow.service.v1.GetCompanyWorkflowResponse.data:type_name -> workflow.service.v1.CompanyWorkflows
	54, // 36: workflow.service.v1.CreateCompanyWorkflowRequest.data:type_name -> workflow.service.v1.CompanyWorkflows
	54, // 37: workflow.service.v1.CreateCompanyWorkflowResponse.data:type_name -> workflow.service.v1.CompanyWorkflows
	30, // 38: workflow.service.v1.GetAvailableCurrencyResponse.data:type_name -> workflow.service.v1.Currency
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_workflow_payload_proto_init() }
func file_workflow_payload_proto_init() {
	if File_workflow_payload_proto != nil {
		return
	}
	file_workflow_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_workflow_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkflowTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkflowTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowTaskFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadListWorkflowTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCompanyWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCompanyWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequirementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workflow_payload_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workflow_payload_proto_goTypes,
		DependencyIndexes: file_workflow_payload_proto_depIdxs,
		EnumInfos:         file_workflow_payload_proto_enumTypes,
		MessageInfos:      file_workflow_payload_proto_msgTypes,
	}.Build()
	File_workflow_payload_proto = out.File
	file_workflow_payload_proto_rawDesc = nil
	file_workflow_payload_proto_goTypes = nil
	file_workflow_payload_proto_depIdxs = nil
}
