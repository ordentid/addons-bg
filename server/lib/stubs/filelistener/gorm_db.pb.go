// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: gorm_db.proto

package pb

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileData_FileStatus int32

const (
	FileData_null            FileData_FileStatus = 0
	FileData_checking        FileData_FileStatus = 1
	FileData_failedToRead    FileData_FileStatus = 2
	FileData_idle            FileData_FileStatus = 3
	FileData_processing      FileData_FileStatus = 4
	FileData_processed       FileData_FileStatus = 5
	FileData_failedToProcess FileData_FileStatus = 6
)

// Enum value maps for FileData_FileStatus.
var (
	FileData_FileStatus_name = map[int32]string{
		0: "null",
		1: "checking",
		2: "failedToRead",
		3: "idle",
		4: "processing",
		5: "processed",
		6: "failedToProcess",
	}
	FileData_FileStatus_value = map[string]int32{
		"null":            0,
		"checking":        1,
		"failedToRead":    2,
		"idle":            3,
		"processing":      4,
		"processed":       5,
		"failedToProcess": 6,
	}
)

func (x FileData_FileStatus) Enum() *FileData_FileStatus {
	p := new(FileData_FileStatus)
	*p = x
	return p
}

func (x FileData_FileStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileData_FileStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_db_proto_enumTypes[0].Descriptor()
}

func (FileData_FileStatus) Type() protoreflect.EnumType {
	return &file_gorm_db_proto_enumTypes[0]
}

func (x FileData_FileStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileData_FileStatus.Descriptor instead.
func (FileData_FileStatus) EnumDescriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{0, 0}
}

type FileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID         uint64                 `protobuf:"varint,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	FileName       string                 `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileUrl        string                 `protobuf:"bytes,3,opt,name=fileUrl,proto3" json:"fileUrl,omitempty"`
	FileOriginName string                 `protobuf:"bytes,4,opt,name=fileOriginName,proto3" json:"fileOriginName,omitempty"`
	FileOriginUrl  string                 `protobuf:"bytes,5,opt,name=fileOriginUrl,proto3" json:"fileOriginUrl,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	TaskType       string                 `protobuf:"bytes,7,opt,name=taskType,proto3" json:"taskType,omitempty"`
	TaskID         uint64                 `protobuf:"varint,8,opt,name=taskID,proto3" json:"taskID,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FileData) Reset() {
	*x = FileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{0}
}

func (x *FileData) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *FileData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileData) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *FileData) GetFileOriginName() string {
	if x != nil {
		return x.FileOriginName
	}
	return ""
}

func (x *FileData) GetFileOriginUrl() string {
	if x != nil {
		return x.FileOriginUrl
	}
	return ""
}

func (x *FileData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileData) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *FileData) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *FileData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FileManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskID     uint64                 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TaskType   string                 `protobuf:"bytes,3,opt,name=taskType,proto3" json:"taskType,omitempty"`
	ObjectName string                 `protobuf:"bytes,4,opt,name=objectName,proto3" json:"objectName,omitempty"`
	Status     string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Step       string                 `protobuf:"bytes,6,opt,name=step,proto3" json:"step,omitempty"`
	Files      string                 `protobuf:"bytes,7,opt,name=files,proto3" json:"files,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FileManager) Reset() {
	*x = FileManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileManager) ProtoMessage() {}

func (x *FileManager) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileManager.ProtoReflect.Descriptor instead.
func (*FileManager) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{1}
}

func (x *FileManager) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileManager) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *FileManager) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *FileManager) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *FileManager) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileManager) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *FileManager) GetFiles() string {
	if x != nil {
		return x.Files
	}
	return ""
}

func (x *FileManager) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileManager) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FileManagerDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskID     uint64                 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TaskType   string                 `protobuf:"bytes,3,opt,name=taskType,proto3" json:"taskType,omitempty"`
	ObjectName string                 `protobuf:"bytes,4,opt,name=objectName,proto3" json:"objectName,omitempty"`
	Status     string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Step       string                 `protobuf:"bytes,6,opt,name=step,proto3" json:"step,omitempty"`
	Files      []string               `protobuf:"bytes,7,rep,name=files,proto3" json:"files,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FileManagerDTO) Reset() {
	*x = FileManagerDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileManagerDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileManagerDTO) ProtoMessage() {}

func (x *FileManagerDTO) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileManagerDTO.ProtoReflect.Descriptor instead.
func (*FileManagerDTO) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{2}
}

func (x *FileManagerDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileManagerDTO) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *FileManagerDTO) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *FileManagerDTO) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *FileManagerDTO) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileManagerDTO) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *FileManagerDTO) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *FileManagerDTO) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileManagerDTO) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FileProcessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ManagerID uint64                 `protobuf:"varint,2,opt,name=managerID,proto3" json:"managerID,omitempty"`
	TaskID    uint64                 `protobuf:"varint,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
	TaskType  string                 `protobuf:"bytes,4,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Data      string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Status    string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FileProcessor) Reset() {
	*x = FileProcessor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileProcessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProcessor) ProtoMessage() {}

func (x *FileProcessor) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProcessor.ProtoReflect.Descriptor instead.
func (*FileProcessor) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{3}
}

func (x *FileProcessor) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileProcessor) GetManagerID() uint64 {
	if x != nil {
		return x.ManagerID
	}
	return 0
}

func (x *FileProcessor) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *FileProcessor) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *FileProcessor) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *FileProcessor) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileProcessor) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileProcessor) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FileProcessorDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ManagerID uint64                 `protobuf:"varint,2,opt,name=managerID,proto3" json:"managerID,omitempty"`
	TaskID    uint64                 `protobuf:"varint,3,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type      string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data      string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Status    string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FileProcessorDTO) Reset() {
	*x = FileProcessorDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileProcessorDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProcessorDTO) ProtoMessage() {}

func (x *FileProcessorDTO) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProcessorDTO.ProtoReflect.Descriptor instead.
func (*FileProcessorDTO) Descriptor() ([]byte, []int) {
	return file_gorm_db_proto_rawDescGZIP(), []int{4}
}

func (x *FileProcessorDTO) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileProcessorDTO) GetManagerID() uint64 {
	if x != nil {
		return x.ManagerID
	}
	return 0
}

func (x *FileProcessorDTO) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *FileProcessorDTO) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FileProcessorDTO) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *FileProcessorDTO) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileProcessorDTO) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FileProcessorDTO) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_gorm_db_proto protoreflect.FileDescriptor

var file_gorm_db_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x19, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x05,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x15, 0xe0, 0x41, 0x03, 0xba,
	0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x28, 0x01, 0x40,
	0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xba, 0xb9, 0x19,
	0x1a, 0x0a, 0x18, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x35, 0x35, 0x29, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x04, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x4e, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x26, 0xba, 0xb9, 0x19, 0x22, 0x0a, 0x20, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x32, 0x35, 0x35, 0x29, 0x40, 0x01, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e,
	0xba, 0xb9, 0x19, 0x1a, 0x0a, 0x18, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x04, 0x74, 0x65, 0x78, 0x74, 0x40, 0x01, 0x52, 0x0d,
	0x66, 0x69, 0x6c, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x3d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xba,
	0xb9, 0x19, 0x21, 0x0a, 0x1f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x76,
	0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x30, 0x29, 0x3a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d,
	0xba, 0xb9, 0x19, 0x19, 0x0a, 0x17, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x30, 0x29, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x0a,
	0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a,
	0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03,
	0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x74, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x54, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x69, 0x64, 0x6c,
	0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x6f, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x10, 0x06, 0x3a, 0x0d, 0xba, 0xb9, 0x19, 0x09, 0x08, 0x01, 0x1a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xa9, 0x04, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x19, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x0a, 0x02, 0x69,
	0x64, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x17, 0xba, 0xb9, 0x19, 0x13, 0x0a, 0x11, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xba, 0xb9, 0x19, 0x1a, 0x0a, 0x18, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x35, 0x30, 0x29, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41,
	0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x21, 0xba, 0xb9, 0x19, 0x1d, 0x0a, 0x1b, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72,
	0x28, 0x32, 0x35, 0x35, 0x29, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x24, 0xba, 0xb9, 0x19, 0x20, 0x0a, 0x1e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x30, 0x29, 0x3a, 0x07,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x30, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xba,
	0xb9, 0x19, 0x18, 0x0a, 0x16, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x0b, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x30, 0x29, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xba, 0xb9, 0x19, 0x14, 0x0a, 0x12, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x05, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x3a, 0x02, 0x5b, 0x5d, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x15, 0xba, 0xb9, 0x19,
	0x11, 0x08, 0x01, 0x1a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x22, 0xb9, 0x02, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x44, 0x54, 0x4f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xef,
	0x03, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x19, 0xe0, 0x41,
	0x03, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x12, 0x06, 0x62, 0x69, 0x67,
	0x69, 0x6e, 0x74, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x1a,
	0xba, 0xb9, 0x19, 0x16, 0x0a, 0x14, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x17, 0xba, 0xb9, 0x19, 0x13, 0x0a, 0x11, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0xba, 0xb9, 0x19, 0x1a, 0x0a, 0x18,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x76, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x72, 0x28, 0x35, 0x30, 0x29, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x17, 0xba, 0xb9, 0x19, 0x13, 0x0a, 0x11, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x05,
	0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x3a, 0x02, 0x7b, 0x7d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x24, 0xba, 0xb9, 0x19, 0x20, 0x0a, 0x1e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x76, 0x61, 0x72, 0x63, 0x68, 0x61, 0x72, 0x28, 0x32, 0x30, 0x29, 0x3a, 0x07, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0xe0, 0x41,
	0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x43, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x09, 0xe0, 0x41, 0x03, 0xba, 0xb9, 0x19, 0x02, 0x0a, 0x00, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x3a, 0x17, 0xba, 0xb9, 0x19, 0x13, 0x08, 0x01, 0x1a,
	0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73,
	0x22, 0x9b, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x44, 0x54, 0x4f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gorm_db_proto_rawDescOnce sync.Once
	file_gorm_db_proto_rawDescData = file_gorm_db_proto_rawDesc
)

func file_gorm_db_proto_rawDescGZIP() []byte {
	file_gorm_db_proto_rawDescOnce.Do(func() {
		file_gorm_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_gorm_db_proto_rawDescData)
	})
	return file_gorm_db_proto_rawDescData
}

var file_gorm_db_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gorm_db_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gorm_db_proto_goTypes = []interface{}{
	(FileData_FileStatus)(0),      // 0: file_processor.service.v1.FileData.FileStatus
	(*FileData)(nil),              // 1: file_processor.service.v1.FileData
	(*FileManager)(nil),           // 2: file_processor.service.v1.FileManager
	(*FileManagerDTO)(nil),        // 3: file_processor.service.v1.FileManagerDTO
	(*FileProcessor)(nil),         // 4: file_processor.service.v1.FileProcessor
	(*FileProcessorDTO)(nil),      // 5: file_processor.service.v1.FileProcessorDTO
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_gorm_db_proto_depIdxs = []int32{
	6,  // 0: file_processor.service.v1.FileData.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 1: file_processor.service.v1.FileData.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 2: file_processor.service.v1.FileManager.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 3: file_processor.service.v1.FileManager.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 4: file_processor.service.v1.FileManagerDTO.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 5: file_processor.service.v1.FileManagerDTO.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 6: file_processor.service.v1.FileProcessor.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 7: file_processor.service.v1.FileProcessor.updatedAt:type_name -> google.protobuf.Timestamp
	6,  // 8: file_processor.service.v1.FileProcessorDTO.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 9: file_processor.service.v1.FileProcessorDTO.updatedAt:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_gorm_db_proto_init() }
func file_gorm_db_proto_init() {
	if File_gorm_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gorm_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileManagerDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileProcessor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileProcessorDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gorm_db_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gorm_db_proto_goTypes,
		DependencyIndexes: file_gorm_db_proto_depIdxs,
		EnumInfos:         file_gorm_db_proto_enumTypes,
		MessageInfos:      file_gorm_db_proto_msgTypes,
	}.Build()
	File_gorm_db_proto = out.File
	file_gorm_db_proto_rawDesc = nil
	file_gorm_db_proto_goTypes = nil
	file_gorm_db_proto_depIdxs = nil
}
