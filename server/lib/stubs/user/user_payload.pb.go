// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: user_payload.proto

package pb

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListUserReqDirection int32

const (
	ListUserReq_DESC ListUserReqDirection = 0
	ListUserReq_ASC  ListUserReqDirection = 1
)

// Enum value maps for ListUserReqDirection.
var (
	ListUserReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListUserReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListUserReqDirection) Enum() *ListUserReqDirection {
	p := new(ListUserReqDirection)
	*p = x
	return p
}

func (x ListUserReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUserReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[0].Descriptor()
}

func (ListUserReqDirection) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[0]
}

func (x ListUserReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUserReqDirection.Descriptor instead.
func (ListUserReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{12, 0}
}

type ListUserReqLoginDirection int32

const (
	ListUserReqLogin_DESC ListUserReqLoginDirection = 0
	ListUserReqLogin_ASC  ListUserReqLoginDirection = 1
)

// Enum value maps for ListUserReqLoginDirection.
var (
	ListUserReqLoginDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListUserReqLoginDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListUserReqLoginDirection) Enum() *ListUserReqLoginDirection {
	p := new(ListUserReqLoginDirection)
	*p = x
	return p
}

func (x ListUserReqLoginDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUserReqLoginDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[1].Descriptor()
}

func (ListUserReqLoginDirection) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[1]
}

func (x ListUserReqLoginDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUserReqLoginDirection.Descriptor instead.
func (ListUserReqLoginDirection) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{14, 0}
}

type ListUserWithTaskRequestStatuses int32

const (
	ListUserWithTaskRequest_AllStatus     ListUserWithTaskRequestStatuses = 0
	ListUserWithTaskRequest_Pending       ListUserWithTaskRequestStatuses = 1
	ListUserWithTaskRequest_Draft         ListUserWithTaskRequestStatuses = 2
	ListUserWithTaskRequest_Returned      ListUserWithTaskRequestStatuses = 3
	ListUserWithTaskRequest_Approved      ListUserWithTaskRequestStatuses = 4
	ListUserWithTaskRequest_Rejected      ListUserWithTaskRequestStatuses = 5
	ListUserWithTaskRequest_DeleteRequest ListUserWithTaskRequestStatuses = 6
	ListUserWithTaskRequest_Deleted       ListUserWithTaskRequestStatuses = 7
)

// Enum value maps for ListUserWithTaskRequestStatuses.
var (
	ListUserWithTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	ListUserWithTaskRequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x ListUserWithTaskRequestStatuses) Enum() *ListUserWithTaskRequestStatuses {
	p := new(ListUserWithTaskRequestStatuses)
	*p = x
	return p
}

func (x ListUserWithTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUserWithTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[2].Descriptor()
}

func (ListUserWithTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[2]
}

func (x ListUserWithTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUserWithTaskRequestStatuses.Descriptor instead.
func (ListUserWithTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{29, 0}
}

type ListUserWithTaskRequestSteps int32

const (
	ListUserWithTaskRequest_AllStep  ListUserWithTaskRequestSteps = 0
	ListUserWithTaskRequest_Maker    ListUserWithTaskRequestSteps = 1
	ListUserWithTaskRequest_Checker  ListUserWithTaskRequestSteps = 2
	ListUserWithTaskRequest_Signer   ListUserWithTaskRequestSteps = 3
	ListUserWithTaskRequest_Releaser ListUserWithTaskRequestSteps = 4
)

// Enum value maps for ListUserWithTaskRequestSteps.
var (
	ListUserWithTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListUserWithTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListUserWithTaskRequestSteps) Enum() *ListUserWithTaskRequestSteps {
	p := new(ListUserWithTaskRequestSteps)
	*p = x
	return p
}

func (x ListUserWithTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUserWithTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[3].Descriptor()
}

func (ListUserWithTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[3]
}

func (x ListUserWithTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUserWithTaskRequestSteps.Descriptor instead.
func (ListUserWithTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{29, 1}
}

type ListUserWithTaskRequestDirection int32

const (
	ListUserWithTaskRequest_DESC ListUserWithTaskRequestDirection = 0
	ListUserWithTaskRequest_ASC  ListUserWithTaskRequestDirection = 1
)

// Enum value maps for ListUserWithTaskRequestDirection.
var (
	ListUserWithTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListUserWithTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListUserWithTaskRequestDirection) Enum() *ListUserWithTaskRequestDirection {
	p := new(ListUserWithTaskRequestDirection)
	*p = x
	return p
}

func (x ListUserWithTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListUserWithTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[4].Descriptor()
}

func (ListUserWithTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[4]
}

func (x ListUserWithTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListUserWithTaskRequestDirection.Descriptor instead.
func (ListUserWithTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{29, 2}
}

type DownloadListUserWithTaskRequestStatuses int32

const (
	DownloadListUserWithTaskRequest_AllStatus     DownloadListUserWithTaskRequestStatuses = 0
	DownloadListUserWithTaskRequest_Pending       DownloadListUserWithTaskRequestStatuses = 1
	DownloadListUserWithTaskRequest_Draft         DownloadListUserWithTaskRequestStatuses = 2
	DownloadListUserWithTaskRequest_Returned      DownloadListUserWithTaskRequestStatuses = 3
	DownloadListUserWithTaskRequest_Approved      DownloadListUserWithTaskRequestStatuses = 4
	DownloadListUserWithTaskRequest_Rejected      DownloadListUserWithTaskRequestStatuses = 5
	DownloadListUserWithTaskRequest_DeleteRequest DownloadListUserWithTaskRequestStatuses = 6
	DownloadListUserWithTaskRequest_Deleted       DownloadListUserWithTaskRequestStatuses = 7
)

// Enum value maps for DownloadListUserWithTaskRequestStatuses.
var (
	DownloadListUserWithTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
		6: "DeleteRequest",
		7: "Deleted",
	}
	DownloadListUserWithTaskRequestStatuses_value = map[string]int32{
		"AllStatus":     0,
		"Pending":       1,
		"Draft":         2,
		"Returned":      3,
		"Approved":      4,
		"Rejected":      5,
		"DeleteRequest": 6,
		"Deleted":       7,
	}
)

func (x DownloadListUserWithTaskRequestStatuses) Enum() *DownloadListUserWithTaskRequestStatuses {
	p := new(DownloadListUserWithTaskRequestStatuses)
	*p = x
	return p
}

func (x DownloadListUserWithTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListUserWithTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[5].Descriptor()
}

func (DownloadListUserWithTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[5]
}

func (x DownloadListUserWithTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListUserWithTaskRequestStatuses.Descriptor instead.
func (DownloadListUserWithTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{30, 0}
}

type DownloadListUserWithTaskRequestSteps int32

const (
	DownloadListUserWithTaskRequest_AllStep  DownloadListUserWithTaskRequestSteps = 0
	DownloadListUserWithTaskRequest_Maker    DownloadListUserWithTaskRequestSteps = 1
	DownloadListUserWithTaskRequest_Checker  DownloadListUserWithTaskRequestSteps = 2
	DownloadListUserWithTaskRequest_Signer   DownloadListUserWithTaskRequestSteps = 3
	DownloadListUserWithTaskRequest_Releaser DownloadListUserWithTaskRequestSteps = 4
)

// Enum value maps for DownloadListUserWithTaskRequestSteps.
var (
	DownloadListUserWithTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	DownloadListUserWithTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x DownloadListUserWithTaskRequestSteps) Enum() *DownloadListUserWithTaskRequestSteps {
	p := new(DownloadListUserWithTaskRequestSteps)
	*p = x
	return p
}

func (x DownloadListUserWithTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListUserWithTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[6].Descriptor()
}

func (DownloadListUserWithTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[6]
}

func (x DownloadListUserWithTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListUserWithTaskRequestSteps.Descriptor instead.
func (DownloadListUserWithTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{30, 1}
}

type DownloadListUserWithTaskRequestDirection int32

const (
	DownloadListUserWithTaskRequest_DESC DownloadListUserWithTaskRequestDirection = 0
	DownloadListUserWithTaskRequest_ASC  DownloadListUserWithTaskRequestDirection = 1
)

// Enum value maps for DownloadListUserWithTaskRequestDirection.
var (
	DownloadListUserWithTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	DownloadListUserWithTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x DownloadListUserWithTaskRequestDirection) Enum() *DownloadListUserWithTaskRequestDirection {
	p := new(DownloadListUserWithTaskRequestDirection)
	*p = x
	return p
}

func (x DownloadListUserWithTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListUserWithTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[7].Descriptor()
}

func (DownloadListUserWithTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[7]
}

func (x DownloadListUserWithTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListUserWithTaskRequestDirection.Descriptor instead.
func (DownloadListUserWithTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{30, 2}
}

type DownloadListUserWithTaskRequest_Formats int32

const (
	DownloadListUserWithTaskRequest_null DownloadListUserWithTaskRequest_Formats = 0
	DownloadListUserWithTaskRequest_pdf  DownloadListUserWithTaskRequest_Formats = 1
	DownloadListUserWithTaskRequest_xls  DownloadListUserWithTaskRequest_Formats = 2
	DownloadListUserWithTaskRequest_csv  DownloadListUserWithTaskRequest_Formats = 3
)

// Enum value maps for DownloadListUserWithTaskRequest_Formats.
var (
	DownloadListUserWithTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	DownloadListUserWithTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x DownloadListUserWithTaskRequest_Formats) Enum() *DownloadListUserWithTaskRequest_Formats {
	p := new(DownloadListUserWithTaskRequest_Formats)
	*p = x
	return p
}

func (x DownloadListUserWithTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadListUserWithTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_user_payload_proto_enumTypes[8].Descriptor()
}

func (DownloadListUserWithTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_user_payload_proto_enumTypes[8]
}

func (x DownloadListUserWithTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadListUserWithTaskRequest_Formats.Descriptor instead.
func (DownloadListUserWithTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{30, 3}
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool              `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32            `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    _struct.NullValue `protobuf:"varint,4,opt,name=data,proto3,enum=google.protobuf.NullValue" json:"data,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorBodyResponse) GetData() _struct.NullValue {
	if x != nil {
		return x.Data
	}
	return _struct.NullValue_NULL_VALUE
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{4}
}

type ArrayString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ArrayString) Reset() {
	*x = ArrayString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayString) ProtoMessage() {}

func (x *ArrayString) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayString.ProtoReflect.Descriptor instead.
func (*ArrayString) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{5}
}

func (x *ArrayString) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ArrayString) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ArrayString) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ArrayString) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type InvalidKeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidKeyError) Reset() {
	*x = InvalidKeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyError) ProtoMessage() {}

func (x *InvalidKeyError) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyError.ProtoReflect.Descriptor instead.
func (*InvalidKeyError) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{6}
}

func (x *InvalidKeyError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InvalidKeyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *JWTTokenResponse) Reset() {
	*x = JWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokenResponse) ProtoMessage() {}

func (x *JWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokenResponse.ProtoReflect.Descriptor instead.
func (*JWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{7}
}

func (x *JWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTTokenResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type CommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{8}
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{9}
}

func (x *CommonResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CommonResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxPage   uint32 `protobuf:"varint,3,opt,name=maxPage,proto3" json:"maxPage,omitempty"`
	TotalItem uint32 `protobuf:"varint,4,opt,name=totalItem,proto3" json:"totalItem,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{10}
}

func (x *Pagination) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetMaxPage() uint32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *Pagination) GetTotalItem() uint32 {
	if x != nil {
		return x.TotalItem
	}
	return 0
}

type ListUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool        `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Data       []*User     `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListUserResponse) Reset() {
	*x = ListUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse) ProtoMessage() {}

func (x *ListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{11}
}

func (x *ListUserResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListUserResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListUserResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListUserResponse) GetData() []*User {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         *User                `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	IsActiveOnly bool                 `protobuf:"varint,2,opt,name=isActiveOnly,proto3" json:"isActiveOnly,omitempty"`
	Limit        int32                `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32                `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort         string               `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir          ListUserReqDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=user.service.v1.ListUserReqDirection" json:"dir,omitempty"`
	Filter       string               `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query        string               `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	CustomOrder  string               `protobuf:"bytes,9,opt,name=customOrder,proto3" json:"customOrder,omitempty"`
	In           string               `protobuf:"bytes,10,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *ListUserReq) Reset() {
	*x = ListUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReq) ProtoMessage() {}

func (x *ListUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReq.ProtoReflect.Descriptor instead.
func (*ListUserReq) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ListUserReq) GetIsActiveOnly() bool {
	if x != nil {
		return x.IsActiveOnly
	}
	return false
}

func (x *ListUserReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUserReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListUserReq) GetDir() ListUserReqDirection {
	if x != nil {
		return x.Dir
	}
	return ListUserReq_DESC
}

func (x *ListUserReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListUserReq) GetCustomOrder() string {
	if x != nil {
		return x.CustomOrder
	}
	return ""
}

func (x *ListUserReq) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

type ListUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*User             `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListUserRes) Reset() {
	*x = ListUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRes) ProtoMessage() {}

func (x *ListUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRes.ProtoReflect.Descriptor instead.
func (*ListUserRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListUserRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListUserRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListUserRes) GetData() []*User {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListUserRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListUserReqLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         *UserLogin                `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	IsActiveOnly bool                      `protobuf:"varint,2,opt,name=isActiveOnly,proto3" json:"isActiveOnly,omitempty"`
	Limit        int32                     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32                     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort         string                    `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir          ListUserReqLoginDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=user.service.v1.ListUserReqLoginDirection" json:"dir,omitempty"`
	Filter       string                    `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query        string                    `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	CustomOrder  string                    `protobuf:"bytes,9,opt,name=customOrder,proto3" json:"customOrder,omitempty"`
	In           string                    `protobuf:"bytes,10,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *ListUserReqLogin) Reset() {
	*x = ListUserReqLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReqLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReqLogin) ProtoMessage() {}

func (x *ListUserReqLogin) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReqLogin.ProtoReflect.Descriptor instead.
func (*ListUserReqLogin) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{14}
}

func (x *ListUserReqLogin) GetUser() *UserLogin {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ListUserReqLogin) GetIsActiveOnly() bool {
	if x != nil {
		return x.IsActiveOnly
	}
	return false
}

func (x *ListUserReqLogin) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUserReqLogin) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserReqLogin) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListUserReqLogin) GetDir() ListUserReqLoginDirection {
	if x != nil {
		return x.Dir
	}
	return ListUserReqLogin_DESC
}

func (x *ListUserReqLogin) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserReqLogin) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListUserReqLogin) GetCustomOrder() string {
	if x != nil {
		return x.CustomOrder
	}
	return ""
}

func (x *ListUserReqLogin) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

type ListUserResLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*UserLogin        `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListUserResLogin) Reset() {
	*x = ListUserResLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserResLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResLogin) ProtoMessage() {}

func (x *ListUserResLogin) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResLogin.ProtoReflect.Descriptor instead.
func (*ListUserResLogin) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{15}
}

func (x *ListUserResLogin) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListUserResLogin) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListUserResLogin) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListUserResLogin) GetData() []*UserLogin {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListUserResLogin) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UserTaskData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64        `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{16}
}

func (x *CreateUserRequest) GetData() *UserTaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateUserRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *User  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{17}
}

func (x *CreateUserResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateUserResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateUserResponse) GetData() *User {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateUserTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *UserTaskData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64        `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool          `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateUserTaskRequest) Reset() {
	*x = CreateUserTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTaskRequest) ProtoMessage() {}

func (x *CreateUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{18}
}

func (x *CreateUserTaskRequest) GetData() *UserTaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateUserTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateUserTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type UserRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID   uint64 `protobuf:"varint,1,opt,name=roleID,proto3" json:"roleID,omitempty"`
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
}

func (x *UserRoles) Reset() {
	*x = UserRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoles) ProtoMessage() {}

func (x *UserRoles) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoles.ProtoReflect.Descriptor instead.
func (*UserRoles) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{19}
}

func (x *UserRoles) GetRoleID() uint64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *UserRoles) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type UserTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *User        `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Roles []*UserRoles `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserTaskData) Reset() {
	*x = UserTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTaskData) ProtoMessage() {}

func (x *UserTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTaskData.ProtoReflect.Descriptor instead.
func (*UserTaskData) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{20}
}

func (x *UserTaskData) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserTaskData) GetRoles() []*UserRoles {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,11,opt,name=reasons,proto3" json:"reasons,omitempty"`
	Comment            string                 `protobuf:"bytes,12,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *UserTaskResponse) Reset() {
	*x = UserTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTaskResponse) ProtoMessage() {}

func (x *UserTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTaskResponse.ProtoReflect.Descriptor instead.
func (*UserTaskResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{21}
}

func (x *UserTaskResponse) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *UserTaskResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserTaskResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserTaskResponse) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *UserTaskResponse) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *UserTaskResponse) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *UserTaskResponse) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *UserTaskResponse) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *UserTaskResponse) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *UserTaskResponse) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *UserTaskResponse) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *UserTaskResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UserTaskResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserTaskResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UserWithTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserTaskData     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Task *UserTaskResponse `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *UserWithTaskResponse) Reset() {
	*x = UserWithTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithTaskResponse) ProtoMessage() {}

func (x *UserWithTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithTaskResponse.ProtoReflect.Descriptor instead.
func (*UserWithTaskResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{22}
}

func (x *UserWithTaskResponse) GetUser() *UserTaskData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserWithTaskResponse) GetTask() *UserTaskResponse {
	if x != nil {
		return x.Task
	}
	return nil
}

type ListUserWithTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*UserWithTaskResponse `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse     `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListUserWithTaskResponse) Reset() {
	*x = ListUserWithTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserWithTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserWithTaskResponse) ProtoMessage() {}

func (x *ListUserWithTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserWithTaskResponse.ProtoReflect.Descriptor instead.
func (*ListUserWithTaskResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{23}
}

func (x *ListUserWithTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListUserWithTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListUserWithTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListUserWithTaskResponse) GetData() []*UserWithTaskResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListUserWithTaskResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetUserWithTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *UserWithTaskResponse `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserWithTaskRes) Reset() {
	*x = GetUserWithTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserWithTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserWithTaskRes) ProtoMessage() {}

func (x *GetUserWithTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserWithTaskRes.ProtoReflect.Descriptor instead.
func (*GetUserWithTaskRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserWithTaskRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetUserWithTaskRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserWithTaskRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserWithTaskRes) GetData() *UserWithTaskResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{25}
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type GetTaskByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID string `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetTaskByIDReq) Reset() {
	*x = GetTaskByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDReq) ProtoMessage() {}

func (x *GetTaskByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDReq.ProtoReflect.Descriptor instead.
func (*GetTaskByIDReq) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{26}
}

func (x *GetTaskByIDReq) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteUserReq) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type DeleteUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteUserRes) Reset() {
	*x = DeleteUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRes) ProtoMessage() {}

func (x *DeleteUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRes.ProtoReflect.Descriptor instead.
func (*DeleteUserRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteUserRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListUserWithTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   ListUserWithTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=user.service.v1.ListUserWithTaskRequestStatuses" json:"status,omitempty"`
	Step     ListUserWithTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=user.service.v1.ListUserWithTaskRequestSteps" json:"step,omitempty"`
	Limit    int32                            `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                            `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string                           `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir      ListUserWithTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=user.service.v1.ListUserWithTaskRequestDirection" json:"dir,omitempty"`
	Filter   string                           `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                           `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	FilterOr string                           `protobuf:"bytes,9,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
}

func (x *ListUserWithTaskRequest) Reset() {
	*x = ListUserWithTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserWithTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserWithTaskRequest) ProtoMessage() {}

func (x *ListUserWithTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserWithTaskRequest.ProtoReflect.Descriptor instead.
func (*ListUserWithTaskRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{29}
}

func (x *ListUserWithTaskRequest) GetStatus() ListUserWithTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListUserWithTaskRequest_AllStatus
}

func (x *ListUserWithTaskRequest) GetStep() ListUserWithTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListUserWithTaskRequest_AllStep
}

func (x *ListUserWithTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUserWithTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUserWithTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListUserWithTaskRequest) GetDir() ListUserWithTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListUserWithTaskRequest_DESC
}

func (x *ListUserWithTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserWithTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListUserWithTaskRequest) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

type DownloadListUserWithTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     DownloadListUserWithTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=user.service.v1.DownloadListUserWithTaskRequestStatuses" json:"status,omitempty"`
	Step       DownloadListUserWithTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=user.service.v1.DownloadListUserWithTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                                    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                    `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        DownloadListUserWithTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=user.service.v1.DownloadListUserWithTaskRequestDirection" json:"dir,omitempty"`
	Filter     string                                   `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query      string                                   `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	FileFormat DownloadListUserWithTaskRequest_Formats  `protobuf:"varint,15,opt,name=fileFormat,proto3,enum=user.service.v1.DownloadListUserWithTaskRequest_Formats" json:"fileFormat,omitempty"`
}

func (x *DownloadListUserWithTaskRequest) Reset() {
	*x = DownloadListUserWithTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadListUserWithTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadListUserWithTaskRequest) ProtoMessage() {}

func (x *DownloadListUserWithTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadListUserWithTaskRequest.ProtoReflect.Descriptor instead.
func (*DownloadListUserWithTaskRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{30}
}

func (x *DownloadListUserWithTaskRequest) GetStatus() DownloadListUserWithTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return DownloadListUserWithTaskRequest_AllStatus
}

func (x *DownloadListUserWithTaskRequest) GetStep() DownloadListUserWithTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return DownloadListUserWithTaskRequest_AllStep
}

func (x *DownloadListUserWithTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DownloadListUserWithTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DownloadListUserWithTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *DownloadListUserWithTaskRequest) GetDir() DownloadListUserWithTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return DownloadListUserWithTaskRequest_DESC
}

func (x *DownloadListUserWithTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DownloadListUserWithTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DownloadListUserWithTaskRequest) GetFileFormat() DownloadListUserWithTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return DownloadListUserWithTaskRequest_null
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{31}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type BricamsGetAddonsUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	CustomerId []int64 `protobuf:"varint,3,rep,packed,name=customerId,proto3" json:"customerId,omitempty"`
}

func (x *BricamsGetAddonsUserReq) Reset() {
	*x = BricamsGetAddonsUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BricamsGetAddonsUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BricamsGetAddonsUserReq) ProtoMessage() {}

func (x *BricamsGetAddonsUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BricamsGetAddonsUserReq.ProtoReflect.Descriptor instead.
func (*BricamsGetAddonsUserReq) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{32}
}

func (x *BricamsGetAddonsUserReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BricamsGetAddonsUserReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BricamsGetAddonsUserReq) GetCustomerId() []int64 {
	if x != nil {
		return x.CustomerId
	}
	return nil
}

type BricamsGetAddonsUserByUsernameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *BricamsGetAddonsUserByUsernameReq) Reset() {
	*x = BricamsGetAddonsUserByUsernameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BricamsGetAddonsUserByUsernameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BricamsGetAddonsUserByUsernameReq) ProtoMessage() {}

func (x *BricamsGetAddonsUserByUsernameReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BricamsGetAddonsUserByUsernameReq.ProtoReflect.Descriptor instead.
func (*BricamsGetAddonsUserByUsernameReq) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{33}
}

func (x *BricamsGetAddonsUserByUsernameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type BricamsGetAddonsUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalData       uint32                      `protobuf:"varint,1,opt,name=totalData,proto3" json:"totalData,omitempty"`
	ResponseCode    string                      `protobuf:"bytes,2,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                      `protobuf:"bytes,3,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            []*BricamsGetAddonsUserData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BricamsGetAddonsUserRes) Reset() {
	*x = BricamsGetAddonsUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BricamsGetAddonsUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BricamsGetAddonsUserRes) ProtoMessage() {}

func (x *BricamsGetAddonsUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BricamsGetAddonsUserRes.ProtoReflect.Descriptor instead.
func (*BricamsGetAddonsUserRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{34}
}

func (x *BricamsGetAddonsUserRes) GetTotalData() uint32 {
	if x != nil {
		return x.TotalData
	}
	return 0
}

func (x *BricamsGetAddonsUserRes) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *BricamsGetAddonsUserRes) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *BricamsGetAddonsUserRes) GetData() []*BricamsGetAddonsUserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BricamsGetAddonsUserByUsernameRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string                    `protobuf:"bytes,2,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                    `protobuf:"bytes,3,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *BricamsGetAddonsUserData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BricamsGetAddonsUserByUsernameRes) Reset() {
	*x = BricamsGetAddonsUserByUsernameRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BricamsGetAddonsUserByUsernameRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BricamsGetAddonsUserByUsernameRes) ProtoMessage() {}

func (x *BricamsGetAddonsUserByUsernameRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BricamsGetAddonsUserByUsernameRes.ProtoReflect.Descriptor instead.
func (*BricamsGetAddonsUserByUsernameRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{35}
}

func (x *BricamsGetAddonsUserByUsernameRes) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *BricamsGetAddonsUserByUsernameRes) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *BricamsGetAddonsUserByUsernameRes) GetData() *BricamsGetAddonsUserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserParams) Reset() {
	*x = UserParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserParams) ProtoMessage() {}

func (x *UserParams) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserParams.ProtoReflect.Descriptor instead.
func (*UserParams) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{36}
}

func (x *UserParams) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type DetailUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserType  string `protobuf:"bytes,3,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Authority string `protobuf:"bytes,4,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (x *DetailUserRes) Reset() {
	*x = DetailUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailUserRes) ProtoMessage() {}

func (x *DetailUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailUserRes.ProtoReflect.Descriptor instead.
func (*DetailUserRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{37}
}

func (x *DetailUserRes) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DetailUserRes) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DetailUserRes) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *DetailUserRes) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

type BRICaMSSvcUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string              `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string              `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            *BRICaMSSvcUserData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BRICaMSSvcUserRes) Reset() {
	*x = BRICaMSSvcUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BRICaMSSvcUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BRICaMSSvcUserRes) ProtoMessage() {}

func (x *BRICaMSSvcUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BRICaMSSvcUserRes.ProtoReflect.Descriptor instead.
func (*BRICaMSSvcUserRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{38}
}

func (x *BRICaMSSvcUserRes) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *BRICaMSSvcUserRes) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *BRICaMSSvcUserRes) GetData() *BRICaMSSvcUserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BRICaMSSvcUserListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination      *BRICaMSSvcPagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	ResponseCode    string                `protobuf:"bytes,2,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string                `protobuf:"bytes,3,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	Data            []*BRICaMSSvcUserData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BRICaMSSvcUserListRes) Reset() {
	*x = BRICaMSSvcUserListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BRICaMSSvcUserListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BRICaMSSvcUserListRes) ProtoMessage() {}

func (x *BRICaMSSvcUserListRes) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BRICaMSSvcUserListRes.ProtoReflect.Descriptor instead.
func (*BRICaMSSvcUserListRes) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{39}
}

func (x *BRICaMSSvcUserListRes) GetPagination() *BRICaMSSvcPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *BRICaMSSvcUserListRes) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *BRICaMSSvcUserListRes) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *BRICaMSSvcUserListRes) GetData() []*BRICaMSSvcUserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BRICaMSSvcUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdUser      uint64 `protobuf:"varint,1,opt,name=idUser,proto3" json:"idUser,omitempty"`
	Username    string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	IdCompany   uint64 `protobuf:"varint,3,opt,name=idCompany,proto3" json:"idCompany,omitempty"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Email       string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	FullName    string `protobuf:"bytes,6,opt,name=fullName,proto3" json:"fullName,omitempty"`
	FirstName   string `protobuf:"bytes,7,opt,name=firstName,proto3" json:"firstName,omitempty"`
	MiddleName  string `protobuf:"bytes,8,opt,name=middleName,proto3" json:"middleName,omitempty"`
	LastName    string `protobuf:"bytes,9,opt,name=lastName,proto3" json:"lastName,omitempty"`
	IdToken     string `protobuf:"bytes,10,opt,name=idToken,proto3" json:"idToken,omitempty"`
	CreatedDate string `protobuf:"bytes,11,opt,name=createdDate,proto3" json:"createdDate,omitempty"`
}

func (x *BRICaMSSvcUserData) Reset() {
	*x = BRICaMSSvcUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BRICaMSSvcUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BRICaMSSvcUserData) ProtoMessage() {}

func (x *BRICaMSSvcUserData) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BRICaMSSvcUserData.ProtoReflect.Descriptor instead.
func (*BRICaMSSvcUserData) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{40}
}

func (x *BRICaMSSvcUserData) GetIdUser() uint64 {
	if x != nil {
		return x.IdUser
	}
	return 0
}

func (x *BRICaMSSvcUserData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetIdCompany() uint64 {
	if x != nil {
		return x.IdCompany
	}
	return 0
}

func (x *BRICaMSSvcUserData) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *BRICaMSSvcUserData) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

type BRICaMSSvcPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalRow  int64 `protobuf:"varint,3,opt,name=totalRow,proto3" json:"totalRow,omitempty"`
	TotalPage int32 `protobuf:"varint,4,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
}

func (x *BRICaMSSvcPagination) Reset() {
	*x = BRICaMSSvcPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BRICaMSSvcPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BRICaMSSvcPagination) ProtoMessage() {}

func (x *BRICaMSSvcPagination) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BRICaMSSvcPagination.ProtoReflect.Descriptor instead.
func (*BRICaMSSvcPagination) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{41}
}

func (x *BRICaMSSvcPagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BRICaMSSvcPagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BRICaMSSvcPagination) GetTotalRow() int64 {
	if x != nil {
		return x.TotalRow
	}
	return 0
}

func (x *BRICaMSSvcPagination) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type BricamsGetAddonsUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AuthorizationBusinessDate string `protobuf:"bytes,3,opt,name=authorizationBusinessDate,proto3" json:"authorizationBusinessDate,omitempty"`
	CreatedByUri              string `protobuf:"bytes,4,opt,name=createdByUri,proto3" json:"createdByUri,omitempty"`
	CreationTimeStamp         string `protobuf:"bytes,5,opt,name=creationTimeStamp,proto3" json:"creationTimeStamp,omitempty"`
	LastUpdatedByUri          string `protobuf:"bytes,6,opt,name=lastUpdatedByUri,proto3" json:"lastUpdatedByUri,omitempty"`
	LastUpdatedTimeStamp      string `protobuf:"bytes,7,opt,name=lastUpdatedTimeStamp,proto3" json:"lastUpdatedTimeStamp,omitempty"`
	PersistenceStatus         int32  `protobuf:"varint,8,opt,name=persistenceStatus,proto3" json:"persistenceStatus,omitempty"`
	SnapshotRecord            int64  `protobuf:"varint,9,opt,name=snapshotRecord,proto3" json:"snapshotRecord,omitempty"`
	SystemModifiableOnly      string `protobuf:"bytes,10,opt,name=systemModifiableOnly,proto3" json:"systemModifiableOnly,omitempty"`
	Uuid                      string `protobuf:"bytes,11,opt,name=uuid,proto3" json:"uuid,omitempty"`
	MakeBusinessDate          string `protobuf:"bytes,12,opt,name=makeBusinessDate,proto3" json:"makeBusinessDate,omitempty"`
	TenantId                  int64  `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	ActiveFlag                int32  `protobuf:"varint,14,opt,name=activeFlag,proto3" json:"activeFlag,omitempty"`
	ApprovalStatus            int32  `protobuf:"varint,15,opt,name=approvalStatus,proto3" json:"approvalStatus,omitempty"`
	ReviewedByUri             string `protobuf:"bytes,16,opt,name=reviewedByUri,proto3" json:"reviewedByUri,omitempty"`
	ReviewedTimeStamp         string `protobuf:"bytes,17,opt,name=reviewedTimeStamp,proto3" json:"reviewedTimeStamp,omitempty"`
	AccessToAllBranches       string `protobuf:"bytes,18,opt,name=accessToAllBranches,proto3" json:"accessToAllBranches,omitempty"`
	AccessToAllProducts       string `protobuf:"bytes,19,opt,name=accessToAllProducts,proto3" json:"accessToAllProducts,omitempty"`
	DaysToBlock               int32  `protobuf:"varint,64,opt,name=daysToBlock,proto3" json:"daysToBlock,omitempty"`
	ForcePasswordResetOnLogin int32  `protobuf:"varint,20,opt,name=forcePasswordResetOnLogin,proto3" json:"forcePasswordResetOnLogin,omitempty"`
	HashKey                   string `protobuf:"bytes,21,opt,name=hashKey,proto3" json:"hashKey,omitempty"`
	IsBusinessPartner         int32  `protobuf:"varint,22,opt,name=isBusinessPartner,proto3" json:"isBusinessPartner,omitempty"`
	IsRelationshipOfficer     int32  `protobuf:"varint,23,opt,name=isRelationshipOfficer,proto3" json:"isRelationshipOfficer,omitempty"`
	IsSuperAdmin              int32  `protobuf:"varint,24,opt,name=isSuperAdmin,proto3" json:"isSuperAdmin,omitempty"`
	IsSupervisor              int32  `protobuf:"varint,25,opt,name=isSupervisor,proto3" json:"isSupervisor,omitempty"`
	LastLockedDate            string `protobuf:"bytes,26,opt,name=lastLockedDate,proto3" json:"lastLockedDate,omitempty"`
	LastPasswordResetDate     string `protobuf:"bytes,27,opt,name=lastPasswordResetDate,proto3" json:"lastPasswordResetDate,omitempty"`
	MailId                    string `protobuf:"bytes,28,opt,name=mailId,proto3" json:"mailId,omitempty"`
	NumberOfFailedLoginAtt    int32  `protobuf:"varint,29,opt,name=numberOfFailedLoginAtt,proto3" json:"numberOfFailedLoginAtt,omitempty"`
	NumbOfFailedPassResetAtt  int32  `protobuf:"varint,30,opt,name=numbOfFailedPassResetAtt,proto3" json:"numbOfFailedPassResetAtt,omitempty"`
	AssignedTo                string `protobuf:"bytes,31,opt,name=assignedTo,proto3" json:"assignedTo,omitempty"`
	DelegatedToUserId         string `protobuf:"bytes,32,opt,name=delegatedToUserId,proto3" json:"delegatedToUserId,omitempty"`
	FromDate                  string `protobuf:"bytes,33,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	OutOfOffice               int32  `protobuf:"varint,34,opt,name=outOfOffice,proto3" json:"outOfOffice,omitempty"`
	ToDate                    string `protobuf:"bytes,35,opt,name=toDate,proto3" json:"toDate,omitempty"`
	Password                  string `protobuf:"bytes,36,opt,name=password,proto3" json:"password,omitempty"`
	PasswordExpirationDate    string `protobuf:"bytes,37,opt,name=passwordExpirationDate,proto3" json:"passwordExpirationDate,omitempty"`
	PasswordExpiresInDays     string `protobuf:"bytes,38,opt,name=passwordExpiresInDays,proto3" json:"passwordExpiresInDays,omitempty"`
	PasswordHintAnswer        string `protobuf:"bytes,39,opt,name=passwordHintAnswer,proto3" json:"passwordHintAnswer,omitempty"`
	PasswordHintQuestion      string `protobuf:"bytes,40,opt,name=passwordHintQuestion,proto3" json:"passwordHintQuestion,omitempty"`
	SourceSystem              string `protobuf:"bytes,41,opt,name=sourceSystem,proto3" json:"sourceSystem,omitempty"`
	TeamLead                  int32  `protobuf:"varint,42,opt,name=teamLead,proto3" json:"teamLead,omitempty"`
	UserStatus                int32  `protobuf:"varint,43,opt,name=userStatus,proto3" json:"userStatus,omitempty"`
	Username                  string `protobuf:"bytes,44,opt,name=username,proto3" json:"username,omitempty"`
	PersistentFormData        string `protobuf:"bytes,45,opt,name=persistentFormData,proto3" json:"persistentFormData,omitempty"`
	DeviationLevel            string `protobuf:"bytes,46,opt,name=deviationLevel,proto3" json:"deviationLevel,omitempty"`
	Employee                  string `protobuf:"bytes,47,opt,name=employee,proto3" json:"employee,omitempty"`
	PasswordResetToken        int32  `protobuf:"varint,48,opt,name=passwordResetToken,proto3" json:"passwordResetToken,omitempty"`
	SanctionedLimit           string `protobuf:"bytes,49,opt,name=sanctionedLimit,proto3" json:"sanctionedLimit,omitempty"`
	SysName                   string `protobuf:"bytes,50,opt,name=sysName,proto3" json:"sysName,omitempty"`
	UserMobileInfo            string `protobuf:"bytes,56,opt,name=userMobileInfo,proto3" json:"userMobileInfo,omitempty"`
	IsLoginEnabled            int32  `protobuf:"varint,57,opt,name=isLoginEnabled,proto3" json:"isLoginEnabled,omitempty"`
	OfflineFlag               string `protobuf:"bytes,58,opt,name=offlineFlag,proto3" json:"offlineFlag,omitempty"`
	LicenseAccepted           string `protobuf:"bytes,59,opt,name=licenseAccepted,proto3" json:"licenseAccepted,omitempty"`
	SlmtCLBaseCurrCode        string `protobuf:"bytes,60,opt,name=slmtCLBaseCurrCode,proto3" json:"slmtCLBaseCurrCode,omitempty"`
	SlmtCLBaseValue           string `protobuf:"bytes,61,opt,name=slmtCLBaseValue,proto3" json:"slmtCLBaseValue,omitempty"`
	SlmtCLNonBaseValue        string `protobuf:"bytes,62,opt,name=slmtCLNonBaseValue,proto3" json:"slmtCLNonBaseValue,omitempty"`
	SlmtCLNonBaseCurrCode     string `protobuf:"bytes,63,opt,name=slmtCLNonBaseCurrCode,proto3" json:"slmtCLNonBaseCurrCode,omitempty"`
}

func (x *BricamsGetAddonsUserData) Reset() {
	*x = BricamsGetAddonsUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BricamsGetAddonsUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BricamsGetAddonsUserData) ProtoMessage() {}

func (x *BricamsGetAddonsUserData) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BricamsGetAddonsUserData.ProtoReflect.Descriptor instead.
func (*BricamsGetAddonsUserData) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{42}
}

func (x *BricamsGetAddonsUserData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetAuthorizationBusinessDate() string {
	if x != nil {
		return x.AuthorizationBusinessDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetCreatedByUri() string {
	if x != nil {
		return x.CreatedByUri
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetCreationTimeStamp() string {
	if x != nil {
		return x.CreationTimeStamp
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetLastUpdatedByUri() string {
	if x != nil {
		return x.LastUpdatedByUri
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetLastUpdatedTimeStamp() string {
	if x != nil {
		return x.LastUpdatedTimeStamp
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPersistenceStatus() int32 {
	if x != nil {
		return x.PersistenceStatus
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetSnapshotRecord() int64 {
	if x != nil {
		return x.SnapshotRecord
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetSystemModifiableOnly() string {
	if x != nil {
		return x.SystemModifiableOnly
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetMakeBusinessDate() string {
	if x != nil {
		return x.MakeBusinessDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetActiveFlag() int32 {
	if x != nil {
		return x.ActiveFlag
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetApprovalStatus() int32 {
	if x != nil {
		return x.ApprovalStatus
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetReviewedByUri() string {
	if x != nil {
		return x.ReviewedByUri
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetReviewedTimeStamp() string {
	if x != nil {
		return x.ReviewedTimeStamp
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetAccessToAllBranches() string {
	if x != nil {
		return x.AccessToAllBranches
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetAccessToAllProducts() string {
	if x != nil {
		return x.AccessToAllProducts
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetDaysToBlock() int32 {
	if x != nil {
		return x.DaysToBlock
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetForcePasswordResetOnLogin() int32 {
	if x != nil {
		return x.ForcePasswordResetOnLogin
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetHashKey() string {
	if x != nil {
		return x.HashKey
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetIsBusinessPartner() int32 {
	if x != nil {
		return x.IsBusinessPartner
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetIsRelationshipOfficer() int32 {
	if x != nil {
		return x.IsRelationshipOfficer
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetIsSuperAdmin() int32 {
	if x != nil {
		return x.IsSuperAdmin
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetIsSupervisor() int32 {
	if x != nil {
		return x.IsSupervisor
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetLastLockedDate() string {
	if x != nil {
		return x.LastLockedDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetLastPasswordResetDate() string {
	if x != nil {
		return x.LastPasswordResetDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetMailId() string {
	if x != nil {
		return x.MailId
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetNumberOfFailedLoginAtt() int32 {
	if x != nil {
		return x.NumberOfFailedLoginAtt
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetNumbOfFailedPassResetAtt() int32 {
	if x != nil {
		return x.NumbOfFailedPassResetAtt
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetDelegatedToUserId() string {
	if x != nil {
		return x.DelegatedToUserId
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetOutOfOffice() int32 {
	if x != nil {
		return x.OutOfOffice
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPasswordExpirationDate() string {
	if x != nil {
		return x.PasswordExpirationDate
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPasswordExpiresInDays() string {
	if x != nil {
		return x.PasswordExpiresInDays
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPasswordHintAnswer() string {
	if x != nil {
		return x.PasswordHintAnswer
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPasswordHintQuestion() string {
	if x != nil {
		return x.PasswordHintQuestion
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetSourceSystem() string {
	if x != nil {
		return x.SourceSystem
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetTeamLead() int32 {
	if x != nil {
		return x.TeamLead
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPersistentFormData() string {
	if x != nil {
		return x.PersistentFormData
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetDeviationLevel() string {
	if x != nil {
		return x.DeviationLevel
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetEmployee() string {
	if x != nil {
		return x.Employee
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetPasswordResetToken() int32 {
	if x != nil {
		return x.PasswordResetToken
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetSanctionedLimit() string {
	if x != nil {
		return x.SanctionedLimit
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetSysName() string {
	if x != nil {
		return x.SysName
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetUserMobileInfo() string {
	if x != nil {
		return x.UserMobileInfo
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetIsLoginEnabled() int32 {
	if x != nil {
		return x.IsLoginEnabled
	}
	return 0
}

func (x *BricamsGetAddonsUserData) GetOfflineFlag() string {
	if x != nil {
		return x.OfflineFlag
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetLicenseAccepted() string {
	if x != nil {
		return x.LicenseAccepted
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetSlmtCLBaseCurrCode() string {
	if x != nil {
		return x.SlmtCLBaseCurrCode
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetSlmtCLBaseValue() string {
	if x != nil {
		return x.SlmtCLBaseValue
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetSlmtCLNonBaseValue() string {
	if x != nil {
		return x.SlmtCLNonBaseValue
	}
	return ""
}

func (x *BricamsGetAddonsUserData) GetSlmtCLNonBaseCurrCode() string {
	if x != nil {
		return x.SlmtCLNonBaseCurrCode
	}
	return ""
}

type GetUserIDArrayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID []uint64 `protobuf:"varint,3,rep,packed,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserIDArrayRequest) Reset() {
	*x = GetUserIDArrayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDArrayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDArrayRequest) ProtoMessage() {}

func (x *GetUserIDArrayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDArrayRequest.ProtoReflect.Descriptor instead.
func (*GetUserIDArrayRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{43}
}

func (x *GetUserIDArrayRequest) GetUserID() []uint64 {
	if x != nil {
		return x.UserID
	}
	return nil
}

type GetUserIDArrayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code  uint32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data  []*User `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserIDArrayResponse) Reset() {
	*x = GetUserIDArrayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDArrayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDArrayResponse) ProtoMessage() {}

func (x *GetUserIDArrayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDArrayResponse.ProtoReflect.Descriptor instead.
func (*GetUserIDArrayResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{44}
}

func (x *GetUserIDArrayResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetUserIDArrayResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserIDArrayResponse) GetData() []*User {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateUsersTokenFCMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TokenFCM string `protobuf:"bytes,2,opt,name=tokenFCM,proto3" json:"tokenFCM,omitempty"`
}

func (x *UpdateUsersTokenFCMRequest) Reset() {
	*x = UpdateUsersTokenFCMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsersTokenFCMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsersTokenFCMRequest) ProtoMessage() {}

func (x *UpdateUsersTokenFCMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsersTokenFCMRequest.ProtoReflect.Descriptor instead.
func (*UpdateUsersTokenFCMRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateUsersTokenFCMRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUsersTokenFCMRequest) GetTokenFCM() string {
	if x != nil {
		return x.TokenFCM
	}
	return ""
}

type UpdateUsersTokenFCMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateUsersTokenFCMResponse) Reset() {
	*x = UpdateUsersTokenFCMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsersTokenFCMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsersTokenFCMResponse) ProtoMessage() {}

func (x *UpdateUsersTokenFCMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsersTokenFCMResponse.ProtoReflect.Descriptor instead.
func (*UpdateUsersTokenFCMResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateUsersTokenFCMResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *UpdateUsersTokenFCMResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateUsersTokenFCMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUserByCompanyIDAndAuthorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID uint64 `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (x *GetUserByCompanyIDAndAuthorityRequest) Reset() {
	*x = GetUserByCompanyIDAndAuthorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByCompanyIDAndAuthorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByCompanyIDAndAuthorityRequest) ProtoMessage() {}

func (x *GetUserByCompanyIDAndAuthorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByCompanyIDAndAuthorityRequest.ProtoReflect.Descriptor instead.
func (*GetUserByCompanyIDAndAuthorityRequest) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{47}
}

func (x *GetUserByCompanyIDAndAuthorityRequest) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *GetUserByCompanyIDAndAuthorityRequest) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

type GetUserByCompanyIDAndAuthorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*User `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserByCompanyIDAndAuthorityResponse) Reset() {
	*x = GetUserByCompanyIDAndAuthorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_payload_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByCompanyIDAndAuthorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByCompanyIDAndAuthorityResponse) ProtoMessage() {}

func (x *GetUserByCompanyIDAndAuthorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_payload_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByCompanyIDAndAuthorityResponse.ProtoReflect.Descriptor instead.
func (*GetUserByCompanyIDAndAuthorityResponse) Descriptor() ([]byte, []int) {
	return file_user_payload_proto_rawDescGZIP(), []int{48}
}

func (x *GetUserByCompanyIDAndAuthorityResponse) GetData() []*User {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_user_payload_proto protoreflect.FileDescriptor

var file_user_payload_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x72, 0x6d,
	0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b,
	0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32,
	0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x65, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a,
	0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4b, 0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x10,
	0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x54,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92,
	0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70,
	0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xbe, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf7, 0x03,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b,
	0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d,
	0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x38, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x04, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31,
	0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70,
	0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65,
	0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x6e, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x53, 0x43, 0x10, 0x01, 0x22, 0xcb, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x3a, 0xc1, 0x01, 0x92, 0x41, 0xbd, 0x01, 0x32, 0xba,
	0x01, 0x7b, 0x22, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65,
	0x2c, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x7b, 0x22, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3a,
	0x7b, 0x22, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x4b,
	0x54, 0x50, 0x22, 0x2c, 0x22, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3a, 0x22,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x22, 0x3a, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x2c, 0x22, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x2c, 0x22,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x3a, 0x5b, 0x7b, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x22, 0x3a, 0x30, 0x2c, 0x22, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x5d, 0x7d, 0x7d, 0x22, 0x48, 0x0a, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x98, 0x04, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0xde, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92,
	0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70,
	0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0xfe, 0x05, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e,
	0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20,
	0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32,
	0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x44, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x22, 0x7b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x11, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07, 0x22, 0x46, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65,
	0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x8c, 0x07, 0x0a, 0x1f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4a, 0x0a, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41,
	0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74,
	0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4c, 0x0a, 0x03, 0x64, 0x69, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0x7b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x06, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x07, 0x22, 0x46, 0x0a, 0x05,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x53, 0x43, 0x10, 0x01, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12,
	0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63,
	0x73, 0x76, 0x10, 0x03, 0x22, 0x3c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xe9, 0x01, 0x0a, 0x17, 0x42, 0x72, 0x69, 0x63, 0x61, 0x6d, 0x73, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x41,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x2d, 0x92, 0x41,
	0x2a, 0x32, 0x28, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74,
	0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x31, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x3f, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x29, 0x92, 0x41, 0x26, 0x32, 0x24, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x31, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x42, 0x2a, 0x92, 0x41, 0x27, 0x32, 0x25, 0x66, 0x6f, 0x72,
	0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f,
	0x0a, 0x21, 0x42, 0x72, 0x69, 0x63, 0x61, 0x6d, 0x73, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f,
	0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xc4, 0x01, 0x0a, 0x17, 0x42, 0x72, 0x69, 0x63, 0x61, 0x6d, 0x73, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x69, 0x63, 0x61, 0x6d, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x21, 0x42, 0x72, 0x69, 0x63, 0x61,
	0x6d, 0x73, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x69, 0x63, 0x61,
	0x6d, 0x73, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x7e, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22,
	0x9a, 0x01, 0x0a, 0x11, 0x42, 0x52, 0x49, 0x43, 0x61, 0x4d, 0x53, 0x53, 0x76, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x52, 0x49, 0x43, 0x61, 0x4d, 0x53, 0x53, 0x76, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe5, 0x01, 0x0a,
	0x15, 0x42, 0x52, 0x49, 0x43, 0x61, 0x4d, 0x53, 0x53, 0x76, 0x63, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x52, 0x49,
	0x43, 0x61, 0x4d, 0x53, 0x53, 0x76, 0x63, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x52, 0x49, 0x43,
	0x61, 0x4d, 0x53, 0x53, 0x76, 0x63, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xd0, 0x02, 0x0a, 0x12, 0x42, 0x52, 0x49, 0x43, 0x61, 0x4d, 0x53,
	0x53, 0x76, 0x63, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x7a, 0x0a, 0x14, 0x42, 0x52, 0x49, 0x43, 0x61,
	0x4d, 0x53, 0x53, 0x76, 0x63, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x22, 0xe2, 0x12, 0x0a, 0x18, 0x42, 0x72, 0x69, 0x63, 0x61, 0x6d, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x19, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55,
	0x72, 0x69, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x55, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x72, 0x69, 0x12, 0x32, 0x0a, 0x14,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6d, 0x61, 0x6b, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x6b, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x79, 0x55, 0x72, 0x69, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42,
	0x79, 0x55, 0x72, 0x69, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x41, 0x6c,
	0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x73, 0x54, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x40, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61, 0x79,
	0x73, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x19, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4f,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x4b, 0x65,
	0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x4b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x73, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x15, 0x69, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x69,
	0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x16, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x75,
	0x6d, 0x62, 0x4f, 0x66, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x41, 0x74, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x75,
	0x6d, 0x62, 0x4f, 0x66, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x41, 0x74, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x15, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x48, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x69, 0x6e, 0x74, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x48, 0x69, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x69, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x30,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x61, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x39, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x6c, 0x6d, 0x74,
	0x43, 0x4c, 0x42, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x6c, 0x6d, 0x74, 0x43, 0x4c, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6c, 0x6d, 0x74,
	0x43, 0x4c, 0x42, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x6c, 0x6d, 0x74, 0x43, 0x4c, 0x42, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x6c, 0x6d, 0x74, 0x43, 0x4c, 0x4e, 0x6f, 0x6e, 0x42,
	0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x6c, 0x6d, 0x74, 0x43, 0x4c, 0x4e, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x6c, 0x6d, 0x74, 0x43, 0x4c, 0x4e, 0x6f, 0x6e, 0x42,
	0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x73, 0x6c, 0x6d, 0x74, 0x43, 0x4c, 0x4e, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x43, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x43, 0x4d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x43, 0x4d, 0x22, 0x61, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x43,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a,
	0x25, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x53, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_payload_proto_rawDescOnce sync.Once
	file_user_payload_proto_rawDescData = file_user_payload_proto_rawDesc
)

func file_user_payload_proto_rawDescGZIP() []byte {
	file_user_payload_proto_rawDescOnce.Do(func() {
		file_user_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_payload_proto_rawDescData)
	})
	return file_user_payload_proto_rawDescData
}

var file_user_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_user_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_user_payload_proto_goTypes = []interface{}{
	(ListUserReqDirection)(0),                      // 0: user.service.v1.ListUserReq.direction
	(ListUserReqLoginDirection)(0),                 // 1: user.service.v1.ListUserReqLogin.direction
	(ListUserWithTaskRequestStatuses)(0),           // 2: user.service.v1.ListUserWithTaskRequest.statuses
	(ListUserWithTaskRequestSteps)(0),              // 3: user.service.v1.ListUserWithTaskRequest.steps
	(ListUserWithTaskRequestDirection)(0),          // 4: user.service.v1.ListUserWithTaskRequest.direction
	(DownloadListUserWithTaskRequestStatuses)(0),   // 5: user.service.v1.DownloadListUserWithTaskRequest.statuses
	(DownloadListUserWithTaskRequestSteps)(0),      // 6: user.service.v1.DownloadListUserWithTaskRequest.steps
	(DownloadListUserWithTaskRequestDirection)(0),  // 7: user.service.v1.DownloadListUserWithTaskRequest.direction
	(DownloadListUserWithTaskRequest_Formats)(0),   // 8: user.service.v1.DownloadListUserWithTaskRequest.Formats
	(*LoginRequest)(nil),                           // 9: user.service.v1.LoginRequest
	(*LoginResponse)(nil),                          // 10: user.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                    // 11: user.service.v1.HealthCheckResponse
	(*ErrorBodyResponse)(nil),                      // 12: user.service.v1.errorBodyResponse
	(*Empty)(nil),                                  // 13: user.service.v1.Empty
	(*ArrayString)(nil),                            // 14: user.service.v1.ArrayString
	(*InvalidKeyError)(nil),                        // 15: user.service.v1.InvalidKeyError
	(*JWTTokenResponse)(nil),                       // 16: user.service.v1.JWTTokenResponse
	(*CommonRequest)(nil),                          // 17: user.service.v1.CommonRequest
	(*CommonResponse)(nil),                         // 18: user.service.v1.CommonResponse
	(*Pagination)(nil),                             // 19: user.service.v1.Pagination
	(*ListUserResponse)(nil),                       // 20: user.service.v1.ListUserResponse
	(*ListUserReq)(nil),                            // 21: user.service.v1.ListUserReq
	(*ListUserRes)(nil),                            // 22: user.service.v1.ListUserRes
	(*ListUserReqLogin)(nil),                       // 23: user.service.v1.ListUserReqLogin
	(*ListUserResLogin)(nil),                       // 24: user.service.v1.ListUserResLogin
	(*CreateUserRequest)(nil),                      // 25: user.service.v1.CreateUserRequest
	(*CreateUserResponse)(nil),                     // 26: user.service.v1.CreateUserResponse
	(*CreateUserTaskRequest)(nil),                  // 27: user.service.v1.CreateUserTaskRequest
	(*UserRoles)(nil),                              // 28: user.service.v1.UserRoles
	(*UserTaskData)(nil),                           // 29: user.service.v1.UserTaskData
	(*UserTaskResponse)(nil),                       // 30: user.service.v1.UserTaskResponse
	(*UserWithTaskResponse)(nil),                   // 31: user.service.v1.UserWithTaskResponse
	(*ListUserWithTaskResponse)(nil),               // 32: user.service.v1.ListUserWithTaskResponse
	(*GetUserWithTaskRes)(nil),                     // 33: user.service.v1.GetUserWithTaskRes
	(*PaginationResponse)(nil),                     // 34: user.service.v1.PaginationResponse
	(*GetTaskByIDReq)(nil),                         // 35: user.service.v1.GetTaskByIDReq
	(*DeleteUserReq)(nil),                          // 36: user.service.v1.DeleteUserReq
	(*DeleteUserRes)(nil),                          // 37: user.service.v1.DeleteUserRes
	(*ListUserWithTaskRequest)(nil),                // 38: user.service.v1.ListUserWithTaskRequest
	(*DownloadListUserWithTaskRequest)(nil),        // 39: user.service.v1.DownloadListUserWithTaskRequest
	(*Sort)(nil),                                   // 40: user.service.v1.Sort
	(*BricamsGetAddonsUserReq)(nil),                // 41: user.service.v1.BricamsGetAddonsUserReq
	(*BricamsGetAddonsUserByUsernameReq)(nil),      // 42: user.service.v1.BricamsGetAddonsUserByUsernameReq
	(*BricamsGetAddonsUserRes)(nil),                // 43: user.service.v1.BricamsGetAddonsUserRes
	(*BricamsGetAddonsUserByUsernameRes)(nil),      // 44: user.service.v1.BricamsGetAddonsUserByUsernameRes
	(*UserParams)(nil),                             // 45: user.service.v1.UserParams
	(*DetailUserRes)(nil),                          // 46: user.service.v1.DetailUserRes
	(*BRICaMSSvcUserRes)(nil),                      // 47: user.service.v1.BRICaMSSvcUserRes
	(*BRICaMSSvcUserListRes)(nil),                  // 48: user.service.v1.BRICaMSSvcUserListRes
	(*BRICaMSSvcUserData)(nil),                     // 49: user.service.v1.BRICaMSSvcUserData
	(*BRICaMSSvcPagination)(nil),                   // 50: user.service.v1.BRICaMSSvcPagination
	(*BricamsGetAddonsUserData)(nil),               // 51: user.service.v1.BricamsGetAddonsUserData
	(*GetUserIDArrayRequest)(nil),                  // 52: user.service.v1.GetUserIDArrayRequest
	(*GetUserIDArrayResponse)(nil),                 // 53: user.service.v1.GetUserIDArrayResponse
	(*UpdateUsersTokenFCMRequest)(nil),             // 54: user.service.v1.UpdateUsersTokenFCMRequest
	(*UpdateUsersTokenFCMResponse)(nil),            // 55: user.service.v1.UpdateUsersTokenFCMResponse
	(*GetUserByCompanyIDAndAuthorityRequest)(nil),  // 56: user.service.v1.GetUserByCompanyIDAndAuthorityRequest
	(*GetUserByCompanyIDAndAuthorityResponse)(nil), // 57: user.service.v1.GetUserByCompanyIDAndAuthorityResponse
	(_struct.NullValue)(0),                         // 58: google.protobuf.NullValue
	(*User)(nil),                                   // 59: user.service.v1.User
	(*UserLogin)(nil),                              // 60: user.service.v1.UserLogin
	(*timestamppb.Timestamp)(nil),                  // 61: google.protobuf.Timestamp
}
var file_user_payload_proto_depIdxs = []int32{
	58, // 0: user.service.v1.errorBodyResponse.data:type_name -> google.protobuf.NullValue
	19, // 1: user.service.v1.ListUserResponse.pagination:type_name -> user.service.v1.Pagination
	59, // 2: user.service.v1.ListUserResponse.data:type_name -> user.service.v1.User
	59, // 3: user.service.v1.ListUserReq.user:type_name -> user.service.v1.User
	0,  // 4: user.service.v1.ListUserReq.dir:type_name -> user.service.v1.ListUserReq.direction
	59, // 5: user.service.v1.ListUserRes.data:type_name -> user.service.v1.User
	34, // 6: user.service.v1.ListUserRes.pagination:type_name -> user.service.v1.PaginationResponse
	60, // 7: user.service.v1.ListUserReqLogin.user:type_name -> user.service.v1.UserLogin
	1,  // 8: user.service.v1.ListUserReqLogin.dir:type_name -> user.service.v1.ListUserReqLogin.direction
	60, // 9: user.service.v1.ListUserResLogin.data:type_name -> user.service.v1.UserLogin
	34, // 10: user.service.v1.ListUserResLogin.pagination:type_name -> user.service.v1.PaginationResponse
	29, // 11: user.service.v1.CreateUserRequest.data:type_name -> user.service.v1.UserTaskData
	59, // 12: user.service.v1.CreateUserResponse.data:type_name -> user.service.v1.User
	29, // 13: user.service.v1.CreateUserTaskRequest.data:type_name -> user.service.v1.UserTaskData
	59, // 14: user.service.v1.UserTaskData.user:type_name -> user.service.v1.User
	28, // 15: user.service.v1.UserTaskData.roles:type_name -> user.service.v1.UserRoles
	61, // 16: user.service.v1.UserTaskResponse.createdAt:type_name -> google.protobuf.Timestamp
	61, // 17: user.service.v1.UserTaskResponse.updatedAt:type_name -> google.protobuf.Timestamp
	29, // 18: user.service.v1.UserWithTaskResponse.user:type_name -> user.service.v1.UserTaskData
	30, // 19: user.service.v1.UserWithTaskResponse.task:type_name -> user.service.v1.UserTaskResponse
	31, // 20: user.service.v1.ListUserWithTaskResponse.data:type_name -> user.service.v1.UserWithTaskResponse
	34, // 21: user.service.v1.ListUserWithTaskResponse.pagination:type_name -> user.service.v1.PaginationResponse
	31, // 22: user.service.v1.GetUserWithTaskRes.data:type_name -> user.service.v1.UserWithTaskResponse
	2,  // 23: user.service.v1.ListUserWithTaskRequest.status:type_name -> user.service.v1.ListUserWithTaskRequest.statuses
	3,  // 24: user.service.v1.ListUserWithTaskRequest.step:type_name -> user.service.v1.ListUserWithTaskRequest.steps
	4,  // 25: user.service.v1.ListUserWithTaskRequest.dir:type_name -> user.service.v1.ListUserWithTaskRequest.direction
	5,  // 26: user.service.v1.DownloadListUserWithTaskRequest.status:type_name -> user.service.v1.DownloadListUserWithTaskRequest.statuses
	6,  // 27: user.service.v1.DownloadListUserWithTaskRequest.step:type_name -> user.service.v1.DownloadListUserWithTaskRequest.steps
	7,  // 28: user.service.v1.DownloadListUserWithTaskRequest.dir:type_name -> user.service.v1.DownloadListUserWithTaskRequest.direction
	8,  // 29: user.service.v1.DownloadListUserWithTaskRequest.fileFormat:type_name -> user.service.v1.DownloadListUserWithTaskRequest.Formats
	51, // 30: user.service.v1.BricamsGetAddonsUserRes.data:type_name -> user.service.v1.BricamsGetAddonsUserData
	51, // 31: user.service.v1.BricamsGetAddonsUserByUsernameRes.data:type_name -> user.service.v1.BricamsGetAddonsUserData
	49, // 32: user.service.v1.BRICaMSSvcUserRes.data:type_name -> user.service.v1.BRICaMSSvcUserData
	50, // 33: user.service.v1.BRICaMSSvcUserListRes.pagination:type_name -> user.service.v1.BRICaMSSvcPagination
	49, // 34: user.service.v1.BRICaMSSvcUserListRes.data:type_name -> user.service.v1.BRICaMSSvcUserData
	59, // 35: user.service.v1.GetUserIDArrayResponse.data:type_name -> user.service.v1.User
	59, // 36: user.service.v1.GetUserByCompanyIDAndAuthorityResponse.data:type_name -> user.service.v1.User
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_user_payload_proto_init() }
func file_user_payload_proto_init() {
	if File_user_payload_proto != nil {
		return
	}
	file_user_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReqLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserResLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserWithTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserWithTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserWithTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadListUserWithTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BricamsGetAddonsUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BricamsGetAddonsUserByUsernameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BricamsGetAddonsUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BricamsGetAddonsUserByUsernameRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BRICaMSSvcUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BRICaMSSvcUserListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BRICaMSSvcUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BRICaMSSvcPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BricamsGetAddonsUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDArrayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDArrayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsersTokenFCMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsersTokenFCMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByCompanyIDAndAuthorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_payload_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByCompanyIDAndAuthorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_payload_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_payload_proto_goTypes,
		DependencyIndexes: file_user_payload_proto_depIdxs,
		EnumInfos:         file_user_payload_proto_enumTypes,
		MessageInfos:      file_user_payload_proto_msgTypes,
	}.Build()
	File_user_payload_proto = out.File
	file_user_payload_proto_rawDesc = nil
	file_user_payload_proto_goTypes = nil
	file_user_payload_proto_depIdxs = nil
}
