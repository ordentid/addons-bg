// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.16.1
// source: menu.payload.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListMenuDataRequestDirection int32

const (
	ListMenuDataRequest_DESC ListMenuDataRequestDirection = 0
	ListMenuDataRequest_ASC  ListMenuDataRequestDirection = 1
)

// Enum value maps for ListMenuDataRequestDirection.
var (
	ListMenuDataRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListMenuDataRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListMenuDataRequestDirection) Enum() *ListMenuDataRequestDirection {
	p := new(ListMenuDataRequestDirection)
	*p = x
	return p
}

func (x ListMenuDataRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMenuDataRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[0].Descriptor()
}

func (ListMenuDataRequestDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[0]
}

func (x ListMenuDataRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMenuDataRequestDirection.Descriptor instead.
func (ListMenuDataRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{10, 0}
}

type ListMenuTaskRequestStatuses int32

const (
	ListMenuTaskRequest_AllStatus ListMenuTaskRequestStatuses = 0
	ListMenuTaskRequest_Pending   ListMenuTaskRequestStatuses = 1
	ListMenuTaskRequest_Draft     ListMenuTaskRequestStatuses = 2
	ListMenuTaskRequest_Returned  ListMenuTaskRequestStatuses = 3
	ListMenuTaskRequest_Approved  ListMenuTaskRequestStatuses = 4
	ListMenuTaskRequest_Rejected  ListMenuTaskRequestStatuses = 5
)

// Enum value maps for ListMenuTaskRequestStatuses.
var (
	ListMenuTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	ListMenuTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x ListMenuTaskRequestStatuses) Enum() *ListMenuTaskRequestStatuses {
	p := new(ListMenuTaskRequestStatuses)
	*p = x
	return p
}

func (x ListMenuTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMenuTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[1].Descriptor()
}

func (ListMenuTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[1]
}

func (x ListMenuTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMenuTaskRequestStatuses.Descriptor instead.
func (ListMenuTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{18, 0}
}

type ListMenuTaskRequestSteps int32

const (
	ListMenuTaskRequest_AllStep  ListMenuTaskRequestSteps = 0
	ListMenuTaskRequest_Maker    ListMenuTaskRequestSteps = 1
	ListMenuTaskRequest_Checker  ListMenuTaskRequestSteps = 2
	ListMenuTaskRequest_Signer   ListMenuTaskRequestSteps = 3
	ListMenuTaskRequest_Releaser ListMenuTaskRequestSteps = 4
)

// Enum value maps for ListMenuTaskRequestSteps.
var (
	ListMenuTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	ListMenuTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x ListMenuTaskRequestSteps) Enum() *ListMenuTaskRequestSteps {
	p := new(ListMenuTaskRequestSteps)
	*p = x
	return p
}

func (x ListMenuTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMenuTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[2].Descriptor()
}

func (ListMenuTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[2]
}

func (x ListMenuTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMenuTaskRequestSteps.Descriptor instead.
func (ListMenuTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{18, 1}
}

type ListMenuTaskRequestDirection int32

const (
	ListMenuTaskRequest_DESC ListMenuTaskRequestDirection = 0
	ListMenuTaskRequest_ASC  ListMenuTaskRequestDirection = 1
)

// Enum value maps for ListMenuTaskRequestDirection.
var (
	ListMenuTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListMenuTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListMenuTaskRequestDirection) Enum() *ListMenuTaskRequestDirection {
	p := new(ListMenuTaskRequestDirection)
	*p = x
	return p
}

func (x ListMenuTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListMenuTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[3].Descriptor()
}

func (ListMenuTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[3]
}

func (x ListMenuTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListMenuTaskRequestDirection.Descriptor instead.
func (ListMenuTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{18, 2}
}

type GetListTaskMenuAppearanceReqStatuses int32

const (
	GetListTaskMenuAppearanceReq_AllStatus GetListTaskMenuAppearanceReqStatuses = 0
	GetListTaskMenuAppearanceReq_Pending   GetListTaskMenuAppearanceReqStatuses = 1
	GetListTaskMenuAppearanceReq_Draft     GetListTaskMenuAppearanceReqStatuses = 2
	GetListTaskMenuAppearanceReq_Returned  GetListTaskMenuAppearanceReqStatuses = 3
	GetListTaskMenuAppearanceReq_Approved  GetListTaskMenuAppearanceReqStatuses = 4
	GetListTaskMenuAppearanceReq_Rejected  GetListTaskMenuAppearanceReqStatuses = 5
)

// Enum value maps for GetListTaskMenuAppearanceReqStatuses.
var (
	GetListTaskMenuAppearanceReqStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	GetListTaskMenuAppearanceReqStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x GetListTaskMenuAppearanceReqStatuses) Enum() *GetListTaskMenuAppearanceReqStatuses {
	p := new(GetListTaskMenuAppearanceReqStatuses)
	*p = x
	return p
}

func (x GetListTaskMenuAppearanceReqStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListTaskMenuAppearanceReqStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[4].Descriptor()
}

func (GetListTaskMenuAppearanceReqStatuses) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[4]
}

func (x GetListTaskMenuAppearanceReqStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListTaskMenuAppearanceReqStatuses.Descriptor instead.
func (GetListTaskMenuAppearanceReqStatuses) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{31, 0}
}

type GetListTaskMenuAppearanceReqSteps int32

const (
	GetListTaskMenuAppearanceReq_AllStep  GetListTaskMenuAppearanceReqSteps = 0
	GetListTaskMenuAppearanceReq_Maker    GetListTaskMenuAppearanceReqSteps = 1
	GetListTaskMenuAppearanceReq_Checker  GetListTaskMenuAppearanceReqSteps = 2
	GetListTaskMenuAppearanceReq_Signer   GetListTaskMenuAppearanceReqSteps = 3
	GetListTaskMenuAppearanceReq_Releaser GetListTaskMenuAppearanceReqSteps = 4
)

// Enum value maps for GetListTaskMenuAppearanceReqSteps.
var (
	GetListTaskMenuAppearanceReqSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	GetListTaskMenuAppearanceReqSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x GetListTaskMenuAppearanceReqSteps) Enum() *GetListTaskMenuAppearanceReqSteps {
	p := new(GetListTaskMenuAppearanceReqSteps)
	*p = x
	return p
}

func (x GetListTaskMenuAppearanceReqSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListTaskMenuAppearanceReqSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[5].Descriptor()
}

func (GetListTaskMenuAppearanceReqSteps) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[5]
}

func (x GetListTaskMenuAppearanceReqSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListTaskMenuAppearanceReqSteps.Descriptor instead.
func (GetListTaskMenuAppearanceReqSteps) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{31, 1}
}

type GetListTaskMenuAppearanceReqDirection int32

const (
	GetListTaskMenuAppearanceReq_DESC GetListTaskMenuAppearanceReqDirection = 0
	GetListTaskMenuAppearanceReq_ASC  GetListTaskMenuAppearanceReqDirection = 1
)

// Enum value maps for GetListTaskMenuAppearanceReqDirection.
var (
	GetListTaskMenuAppearanceReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetListTaskMenuAppearanceReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetListTaskMenuAppearanceReqDirection) Enum() *GetListTaskMenuAppearanceReqDirection {
	p := new(GetListTaskMenuAppearanceReqDirection)
	*p = x
	return p
}

func (x GetListTaskMenuAppearanceReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListTaskMenuAppearanceReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[6].Descriptor()
}

func (GetListTaskMenuAppearanceReqDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[6]
}

func (x GetListTaskMenuAppearanceReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListTaskMenuAppearanceReqDirection.Descriptor instead.
func (GetListTaskMenuAppearanceReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{31, 2}
}

type GetMenuAppearanceReqDirection int32

const (
	GetMenuAppearanceReq_DESC GetMenuAppearanceReqDirection = 0
	GetMenuAppearanceReq_ASC  GetMenuAppearanceReqDirection = 1
)

// Enum value maps for GetMenuAppearanceReqDirection.
var (
	GetMenuAppearanceReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetMenuAppearanceReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetMenuAppearanceReqDirection) Enum() *GetMenuAppearanceReqDirection {
	p := new(GetMenuAppearanceReqDirection)
	*p = x
	return p
}

func (x GetMenuAppearanceReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMenuAppearanceReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[7].Descriptor()
}

func (GetMenuAppearanceReqDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[7]
}

func (x GetMenuAppearanceReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMenuAppearanceReqDirection.Descriptor instead.
func (GetMenuAppearanceReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{43, 0}
}

type GetMenuLicenseReqDirection int32

const (
	GetMenuLicenseReq_DESC GetMenuLicenseReqDirection = 0
	GetMenuLicenseReq_ASC  GetMenuLicenseReqDirection = 1
)

// Enum value maps for GetMenuLicenseReqDirection.
var (
	GetMenuLicenseReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetMenuLicenseReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetMenuLicenseReqDirection) Enum() *GetMenuLicenseReqDirection {
	p := new(GetMenuLicenseReqDirection)
	*p = x
	return p
}

func (x GetMenuLicenseReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMenuLicenseReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[8].Descriptor()
}

func (GetMenuLicenseReqDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[8]
}

func (x GetMenuLicenseReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMenuLicenseReqDirection.Descriptor instead.
func (GetMenuLicenseReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{44, 0}
}

type GetListTaskMenuLicenseReqStatuses int32

const (
	GetListTaskMenuLicenseReq_AllStatus GetListTaskMenuLicenseReqStatuses = 0
	GetListTaskMenuLicenseReq_Pending   GetListTaskMenuLicenseReqStatuses = 1
	GetListTaskMenuLicenseReq_Draft     GetListTaskMenuLicenseReqStatuses = 2
	GetListTaskMenuLicenseReq_Returned  GetListTaskMenuLicenseReqStatuses = 3
	GetListTaskMenuLicenseReq_Approved  GetListTaskMenuLicenseReqStatuses = 4
	GetListTaskMenuLicenseReq_Rejected  GetListTaskMenuLicenseReqStatuses = 5
)

// Enum value maps for GetListTaskMenuLicenseReqStatuses.
var (
	GetListTaskMenuLicenseReqStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	GetListTaskMenuLicenseReqStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x GetListTaskMenuLicenseReqStatuses) Enum() *GetListTaskMenuLicenseReqStatuses {
	p := new(GetListTaskMenuLicenseReqStatuses)
	*p = x
	return p
}

func (x GetListTaskMenuLicenseReqStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListTaskMenuLicenseReqStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[9].Descriptor()
}

func (GetListTaskMenuLicenseReqStatuses) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[9]
}

func (x GetListTaskMenuLicenseReqStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListTaskMenuLicenseReqStatuses.Descriptor instead.
func (GetListTaskMenuLicenseReqStatuses) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{57, 0}
}

type GetListTaskMenuLicenseReqSteps int32

const (
	GetListTaskMenuLicenseReq_AllStep  GetListTaskMenuLicenseReqSteps = 0
	GetListTaskMenuLicenseReq_Maker    GetListTaskMenuLicenseReqSteps = 1
	GetListTaskMenuLicenseReq_Checker  GetListTaskMenuLicenseReqSteps = 2
	GetListTaskMenuLicenseReq_Signer   GetListTaskMenuLicenseReqSteps = 3
	GetListTaskMenuLicenseReq_Releaser GetListTaskMenuLicenseReqSteps = 4
)

// Enum value maps for GetListTaskMenuLicenseReqSteps.
var (
	GetListTaskMenuLicenseReqSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	GetListTaskMenuLicenseReqSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x GetListTaskMenuLicenseReqSteps) Enum() *GetListTaskMenuLicenseReqSteps {
	p := new(GetListTaskMenuLicenseReqSteps)
	*p = x
	return p
}

func (x GetListTaskMenuLicenseReqSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListTaskMenuLicenseReqSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[10].Descriptor()
}

func (GetListTaskMenuLicenseReqSteps) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[10]
}

func (x GetListTaskMenuLicenseReqSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListTaskMenuLicenseReqSteps.Descriptor instead.
func (GetListTaskMenuLicenseReqSteps) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{57, 1}
}

type GetListTaskMenuLicenseReqDirection int32

const (
	GetListTaskMenuLicenseReq_DESC GetListTaskMenuLicenseReqDirection = 0
	GetListTaskMenuLicenseReq_ASC  GetListTaskMenuLicenseReqDirection = 1
)

// Enum value maps for GetListTaskMenuLicenseReqDirection.
var (
	GetListTaskMenuLicenseReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetListTaskMenuLicenseReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetListTaskMenuLicenseReqDirection) Enum() *GetListTaskMenuLicenseReqDirection {
	p := new(GetListTaskMenuLicenseReqDirection)
	*p = x
	return p
}

func (x GetListTaskMenuLicenseReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetListTaskMenuLicenseReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[11].Descriptor()
}

func (GetListTaskMenuLicenseReqDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[11]
}

func (x GetListTaskMenuLicenseReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetListTaskMenuLicenseReqDirection.Descriptor instead.
func (GetListTaskMenuLicenseReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{57, 2}
}

type GetMenuAppearanceDisableReqDirection int32

const (
	GetMenuAppearanceDisableReq_DESC GetMenuAppearanceDisableReqDirection = 0
	GetMenuAppearanceDisableReq_ASC  GetMenuAppearanceDisableReqDirection = 1
)

// Enum value maps for GetMenuAppearanceDisableReqDirection.
var (
	GetMenuAppearanceDisableReqDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	GetMenuAppearanceDisableReqDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x GetMenuAppearanceDisableReqDirection) Enum() *GetMenuAppearanceDisableReqDirection {
	p := new(GetMenuAppearanceDisableReqDirection)
	*p = x
	return p
}

func (x GetMenuAppearanceDisableReqDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMenuAppearanceDisableReqDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[12].Descriptor()
}

func (GetMenuAppearanceDisableReqDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[12]
}

func (x GetMenuAppearanceDisableReqDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMenuAppearanceDisableReqDirection.Descriptor instead.
func (GetMenuAppearanceDisableReqDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{62, 0}
}

type FileMenuLicenseTaskRequest_Formats int32

const (
	FileMenuLicenseTaskRequest_null FileMenuLicenseTaskRequest_Formats = 0
	FileMenuLicenseTaskRequest_pdf  FileMenuLicenseTaskRequest_Formats = 1
	FileMenuLicenseTaskRequest_xls  FileMenuLicenseTaskRequest_Formats = 2
	FileMenuLicenseTaskRequest_csv  FileMenuLicenseTaskRequest_Formats = 3
)

// Enum value maps for FileMenuLicenseTaskRequest_Formats.
var (
	FileMenuLicenseTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileMenuLicenseTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileMenuLicenseTaskRequest_Formats) Enum() *FileMenuLicenseTaskRequest_Formats {
	p := new(FileMenuLicenseTaskRequest_Formats)
	*p = x
	return p
}

func (x FileMenuLicenseTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuLicenseTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[13].Descriptor()
}

func (FileMenuLicenseTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[13]
}

func (x FileMenuLicenseTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuLicenseTaskRequest_Formats.Descriptor instead.
func (FileMenuLicenseTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{64, 0}
}

type FileMenuLicenseTaskRequestStatuses int32

const (
	FileMenuLicenseTaskRequest_AllStatus FileMenuLicenseTaskRequestStatuses = 0
	FileMenuLicenseTaskRequest_Pending   FileMenuLicenseTaskRequestStatuses = 1
	FileMenuLicenseTaskRequest_Draft     FileMenuLicenseTaskRequestStatuses = 2
	FileMenuLicenseTaskRequest_Returned  FileMenuLicenseTaskRequestStatuses = 3
	FileMenuLicenseTaskRequest_Approved  FileMenuLicenseTaskRequestStatuses = 4
	FileMenuLicenseTaskRequest_Rejected  FileMenuLicenseTaskRequestStatuses = 5
)

// Enum value maps for FileMenuLicenseTaskRequestStatuses.
var (
	FileMenuLicenseTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	FileMenuLicenseTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x FileMenuLicenseTaskRequestStatuses) Enum() *FileMenuLicenseTaskRequestStatuses {
	p := new(FileMenuLicenseTaskRequestStatuses)
	*p = x
	return p
}

func (x FileMenuLicenseTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuLicenseTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[14].Descriptor()
}

func (FileMenuLicenseTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[14]
}

func (x FileMenuLicenseTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuLicenseTaskRequestStatuses.Descriptor instead.
func (FileMenuLicenseTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{64, 1}
}

type FileMenuLicenseTaskRequestSteps int32

const (
	FileMenuLicenseTaskRequest_AllStep  FileMenuLicenseTaskRequestSteps = 0
	FileMenuLicenseTaskRequest_Maker    FileMenuLicenseTaskRequestSteps = 1
	FileMenuLicenseTaskRequest_Checker  FileMenuLicenseTaskRequestSteps = 2
	FileMenuLicenseTaskRequest_Signer   FileMenuLicenseTaskRequestSteps = 3
	FileMenuLicenseTaskRequest_Releaser FileMenuLicenseTaskRequestSteps = 4
)

// Enum value maps for FileMenuLicenseTaskRequestSteps.
var (
	FileMenuLicenseTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	FileMenuLicenseTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x FileMenuLicenseTaskRequestSteps) Enum() *FileMenuLicenseTaskRequestSteps {
	p := new(FileMenuLicenseTaskRequestSteps)
	*p = x
	return p
}

func (x FileMenuLicenseTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuLicenseTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[15].Descriptor()
}

func (FileMenuLicenseTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[15]
}

func (x FileMenuLicenseTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuLicenseTaskRequestSteps.Descriptor instead.
func (FileMenuLicenseTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{64, 2}
}

type FileMenuLicenseTaskRequestDirection int32

const (
	FileMenuLicenseTaskRequest_DESC FileMenuLicenseTaskRequestDirection = 0
	FileMenuLicenseTaskRequest_ASC  FileMenuLicenseTaskRequestDirection = 1
)

// Enum value maps for FileMenuLicenseTaskRequestDirection.
var (
	FileMenuLicenseTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	FileMenuLicenseTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x FileMenuLicenseTaskRequestDirection) Enum() *FileMenuLicenseTaskRequestDirection {
	p := new(FileMenuLicenseTaskRequestDirection)
	*p = x
	return p
}

func (x FileMenuLicenseTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuLicenseTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[16].Descriptor()
}

func (FileMenuLicenseTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[16]
}

func (x FileMenuLicenseTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuLicenseTaskRequestDirection.Descriptor instead.
func (FileMenuLicenseTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{64, 3}
}

type FileMenuAppearanceTaskRequest_Formats int32

const (
	FileMenuAppearanceTaskRequest_null FileMenuAppearanceTaskRequest_Formats = 0
	FileMenuAppearanceTaskRequest_pdf  FileMenuAppearanceTaskRequest_Formats = 1
	FileMenuAppearanceTaskRequest_xls  FileMenuAppearanceTaskRequest_Formats = 2
	FileMenuAppearanceTaskRequest_csv  FileMenuAppearanceTaskRequest_Formats = 3
)

// Enum value maps for FileMenuAppearanceTaskRequest_Formats.
var (
	FileMenuAppearanceTaskRequest_Formats_name = map[int32]string{
		0: "null",
		1: "pdf",
		2: "xls",
		3: "csv",
	}
	FileMenuAppearanceTaskRequest_Formats_value = map[string]int32{
		"null": 0,
		"pdf":  1,
		"xls":  2,
		"csv":  3,
	}
)

func (x FileMenuAppearanceTaskRequest_Formats) Enum() *FileMenuAppearanceTaskRequest_Formats {
	p := new(FileMenuAppearanceTaskRequest_Formats)
	*p = x
	return p
}

func (x FileMenuAppearanceTaskRequest_Formats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuAppearanceTaskRequest_Formats) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[17].Descriptor()
}

func (FileMenuAppearanceTaskRequest_Formats) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[17]
}

func (x FileMenuAppearanceTaskRequest_Formats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuAppearanceTaskRequest_Formats.Descriptor instead.
func (FileMenuAppearanceTaskRequest_Formats) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{65, 0}
}

type FileMenuAppearanceTaskRequestStatuses int32

const (
	FileMenuAppearanceTaskRequest_AllStatus FileMenuAppearanceTaskRequestStatuses = 0
	FileMenuAppearanceTaskRequest_Pending   FileMenuAppearanceTaskRequestStatuses = 1
	FileMenuAppearanceTaskRequest_Draft     FileMenuAppearanceTaskRequestStatuses = 2
	FileMenuAppearanceTaskRequest_Returned  FileMenuAppearanceTaskRequestStatuses = 3
	FileMenuAppearanceTaskRequest_Approved  FileMenuAppearanceTaskRequestStatuses = 4
	FileMenuAppearanceTaskRequest_Rejected  FileMenuAppearanceTaskRequestStatuses = 5
)

// Enum value maps for FileMenuAppearanceTaskRequestStatuses.
var (
	FileMenuAppearanceTaskRequestStatuses_name = map[int32]string{
		0: "AllStatus",
		1: "Pending",
		2: "Draft",
		3: "Returned",
		4: "Approved",
		5: "Rejected",
	}
	FileMenuAppearanceTaskRequestStatuses_value = map[string]int32{
		"AllStatus": 0,
		"Pending":   1,
		"Draft":     2,
		"Returned":  3,
		"Approved":  4,
		"Rejected":  5,
	}
)

func (x FileMenuAppearanceTaskRequestStatuses) Enum() *FileMenuAppearanceTaskRequestStatuses {
	p := new(FileMenuAppearanceTaskRequestStatuses)
	*p = x
	return p
}

func (x FileMenuAppearanceTaskRequestStatuses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuAppearanceTaskRequestStatuses) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[18].Descriptor()
}

func (FileMenuAppearanceTaskRequestStatuses) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[18]
}

func (x FileMenuAppearanceTaskRequestStatuses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuAppearanceTaskRequestStatuses.Descriptor instead.
func (FileMenuAppearanceTaskRequestStatuses) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{65, 1}
}

type FileMenuAppearanceTaskRequestSteps int32

const (
	FileMenuAppearanceTaskRequest_AllStep  FileMenuAppearanceTaskRequestSteps = 0
	FileMenuAppearanceTaskRequest_Maker    FileMenuAppearanceTaskRequestSteps = 1
	FileMenuAppearanceTaskRequest_Checker  FileMenuAppearanceTaskRequestSteps = 2
	FileMenuAppearanceTaskRequest_Signer   FileMenuAppearanceTaskRequestSteps = 3
	FileMenuAppearanceTaskRequest_Releaser FileMenuAppearanceTaskRequestSteps = 4
)

// Enum value maps for FileMenuAppearanceTaskRequestSteps.
var (
	FileMenuAppearanceTaskRequestSteps_name = map[int32]string{
		0: "AllStep",
		1: "Maker",
		2: "Checker",
		3: "Signer",
		4: "Releaser",
	}
	FileMenuAppearanceTaskRequestSteps_value = map[string]int32{
		"AllStep":  0,
		"Maker":    1,
		"Checker":  2,
		"Signer":   3,
		"Releaser": 4,
	}
)

func (x FileMenuAppearanceTaskRequestSteps) Enum() *FileMenuAppearanceTaskRequestSteps {
	p := new(FileMenuAppearanceTaskRequestSteps)
	*p = x
	return p
}

func (x FileMenuAppearanceTaskRequestSteps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuAppearanceTaskRequestSteps) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[19].Descriptor()
}

func (FileMenuAppearanceTaskRequestSteps) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[19]
}

func (x FileMenuAppearanceTaskRequestSteps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuAppearanceTaskRequestSteps.Descriptor instead.
func (FileMenuAppearanceTaskRequestSteps) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{65, 2}
}

type FileMenuAppearanceTaskRequestDirection int32

const (
	FileMenuAppearanceTaskRequest_DESC FileMenuAppearanceTaskRequestDirection = 0
	FileMenuAppearanceTaskRequest_ASC  FileMenuAppearanceTaskRequestDirection = 1
)

// Enum value maps for FileMenuAppearanceTaskRequestDirection.
var (
	FileMenuAppearanceTaskRequestDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	FileMenuAppearanceTaskRequestDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x FileMenuAppearanceTaskRequestDirection) Enum() *FileMenuAppearanceTaskRequestDirection {
	p := new(FileMenuAppearanceTaskRequestDirection)
	*p = x
	return p
}

func (x FileMenuAppearanceTaskRequestDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileMenuAppearanceTaskRequestDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_menu_payload_proto_enumTypes[20].Descriptor()
}

func (FileMenuAppearanceTaskRequestDirection) Type() protoreflect.EnumType {
	return &file_menu_payload_proto_enumTypes[20]
}

func (x FileMenuAppearanceTaskRequestDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileMenuAppearanceTaskRequestDirection.Descriptor instead.
func (FileMenuAppearanceTaskRequestDirection) EnumDescriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{65, 3}
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ArrayString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ArrayString) Reset() {
	*x = ArrayString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayString) ProtoMessage() {}

func (x *ArrayString) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayString.ProtoReflect.Descriptor instead.
func (*ArrayString) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{3}
}

func (x *ArrayString) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ArrayString) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ArrayString) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ArrayString) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{4}
}

type InvalidKeyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *InvalidKeyError) Reset() {
	*x = InvalidKeyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyError) ProtoMessage() {}

func (x *InvalidKeyError) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyError.ProtoReflect.Descriptor instead.
func (*InvalidKeyError) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{5}
}

func (x *InvalidKeyError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InvalidKeyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt int64  `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *JWTTokenResponse) Reset() {
	*x = JWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokenResponse) ProtoMessage() {}

func (x *JWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokenResponse.ProtoReflect.Descriptor instead.
func (*JWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{6}
}

func (x *JWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JWTTokenResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type ErrorBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool               `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    structpb.NullValue `protobuf:"varint,4,opt,name=data,proto3,enum=google.protobuf.NullValue" json:"data,omitempty"`
}

func (x *ErrorBodyResponse) Reset() {
	*x = ErrorBodyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorBodyResponse) ProtoMessage() {}

func (x *ErrorBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorBodyResponse.ProtoReflect.Descriptor instead.
func (*ErrorBodyResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorBodyResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ErrorBodyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorBodyResponse) GetData() structpb.NullValue {
	if x != nil {
		return x.Data
	}
	return structpb.NullValue(0)
}

type CommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{8}
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{9}
}

func (x *CommonResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CommonResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListMenuDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu         *Menu                        `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
	IsActiveOnly bool                         `protobuf:"varint,2,opt,name=isActiveOnly,proto3" json:"isActiveOnly,omitempty"`
	Limit        int32                        `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page         int32                        `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort         string                       `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir          ListMenuDataRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=menu.service.v1.ListMenuDataRequestDirection" json:"dir,omitempty"`
	Filter       string                       `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query        string                       `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListMenuDataRequest) Reset() {
	*x = ListMenuDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuDataRequest) ProtoMessage() {}

func (x *ListMenuDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuDataRequest.ProtoReflect.Descriptor instead.
func (*ListMenuDataRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{10}
}

func (x *ListMenuDataRequest) GetMenu() *Menu {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *ListMenuDataRequest) GetIsActiveOnly() bool {
	if x != nil {
		return x.IsActiveOnly
	}
	return false
}

func (x *ListMenuDataRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListMenuDataRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMenuDataRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListMenuDataRequest) GetDir() ListMenuDataRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListMenuDataRequest_DESC
}

func (x *ListMenuDataRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListMenuDataRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{11}
}

func (x *Sort) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Sort) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type CreateMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *Menu  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateMenuRequest) Reset() {
	*x = CreateMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuRequest) ProtoMessage() {}

func (x *CreateMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{12}
}

func (x *CreateMenuRequest) GetData() *Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateMenuRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type CreateMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Menu  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateMenuResponse) Reset() {
	*x = CreateMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuResponse) ProtoMessage() {}

func (x *CreateMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuResponse.ProtoReflect.Descriptor instead.
func (*CreateMenuResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMenuResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *CreateMenuResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateMenuResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateMenuResponse) GetData() *Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateMenuTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Menu  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID  uint64 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft bool   `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
}

func (x *CreateMenuTaskRequest) Reset() {
	*x = CreateMenuTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuTaskRequest) ProtoMessage() {}

func (x *CreateMenuTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuTaskRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{14}
}

func (x *CreateMenuTaskRequest) GetData() *Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateMenuTaskRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *CreateMenuTaskRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

type MenuTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	Comment            string                 `protobuf:"bytes,11,opt,name=comment,proto3" json:"comment,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,12,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *MenuTaskResponse) Reset() {
	*x = MenuTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuTaskResponse) ProtoMessage() {}

func (x *MenuTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuTaskResponse.ProtoReflect.Descriptor instead.
func (*MenuTaskResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{15}
}

func (x *MenuTaskResponse) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *MenuTaskResponse) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *MenuTaskResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MenuTaskResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MenuTaskResponse) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *MenuTaskResponse) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *MenuTaskResponse) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *MenuTaskResponse) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *MenuTaskResponse) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *MenuTaskResponse) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *MenuTaskResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MenuTaskResponse) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *MenuTaskResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MenuTaskResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MenuWithTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu *Menu             `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
	Task *MenuTaskResponse `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *MenuWithTask) Reset() {
	*x = MenuWithTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuWithTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuWithTask) ProtoMessage() {}

func (x *MenuWithTask) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuWithTask.ProtoReflect.Descriptor instead.
func (*MenuWithTask) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{16}
}

func (x *MenuWithTask) GetMenu() *Menu {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *MenuWithTask) GetTask() *MenuTaskResponse {
	if x != nil {
		return x.Task
	}
	return nil
}

type ListMenuTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool            `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*MenuWithTask `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMenuTaskResponse) Reset() {
	*x = ListMenuTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuTaskResponse) ProtoMessage() {}

func (x *ListMenuTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuTaskResponse.ProtoReflect.Descriptor instead.
func (*ListMenuTaskResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{17}
}

func (x *ListMenuTaskResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListMenuTaskResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMenuTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMenuTaskResponse) GetData() []*MenuWithTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListMenuTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ListMenuTaskRequestStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=menu.service.v1.ListMenuTaskRequestStatuses" json:"status,omitempty"`
	Step   ListMenuTaskRequestSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=menu.service.v1.ListMenuTaskRequestSteps" json:"step,omitempty"`
	Limit  int32                        `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                        `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                       `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    ListMenuTaskRequestDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=menu.service.v1.ListMenuTaskRequestDirection" json:"dir,omitempty"`
	Filter string                       `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query  string                       `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ListMenuTaskRequest) Reset() {
	*x = ListMenuTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuTaskRequest) ProtoMessage() {}

func (x *ListMenuTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuTaskRequest.ProtoReflect.Descriptor instead.
func (*ListMenuTaskRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{18}
}

func (x *ListMenuTaskRequest) GetStatus() ListMenuTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return ListMenuTaskRequest_AllStatus
}

func (x *ListMenuTaskRequest) GetStep() ListMenuTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return ListMenuTaskRequest_AllStep
}

func (x *ListMenuTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListMenuTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMenuTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListMenuTaskRequest) GetDir() ListMenuTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return ListMenuTaskRequest_DESC
}

func (x *ListMenuTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListMenuTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ListMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Column  string `protobuf:"bytes,4,opt,name=column,proto3" json:"column,omitempty"`
	Filter  string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListMenuRequest) Reset() {
	*x = ListMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuRequest) ProtoMessage() {}

func (x *ListMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuRequest.ProtoReflect.Descriptor instead.
func (*ListMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{19}
}

func (x *ListMenuRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMenuRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListMenuRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListMenuRequest) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *ListMenuRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Data       []*MenuWithTask     `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMenuResponse) Reset() {
	*x = ListMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuResponse) ProtoMessage() {}

func (x *ListMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuResponse.ProtoReflect.Descriptor instead.
func (*ListMenuResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{20}
}

func (x *ListMenuResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListMenuResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMenuResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMenuResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMenuResponse) GetData() []*MenuWithTask {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListMenuActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*Menu             `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMenuActiveResponse) Reset() {
	*x = ListMenuActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuActiveResponse) ProtoMessage() {}

func (x *ListMenuActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuActiveResponse.ProtoReflect.Descriptor instead.
func (*ListMenuActiveResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{21}
}

func (x *ListMenuActiveResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListMenuActiveResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMenuActiveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMenuActiveResponse) GetData() []*Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListMenuActiveResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalRows  int64 `protobuf:"varint,3,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{22}
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetTotalRows() int64 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type UpdateMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMenuRequest) Reset() {
	*x = UpdateMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRequest) ProtoMessage() {}

func (x *UpdateMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{23}
}

type GetByTaskID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetByTaskID) Reset() {
	*x = GetByTaskID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByTaskID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByTaskID) ProtoMessage() {}

func (x *GetByTaskID) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByTaskID.ProtoReflect.Descriptor instead.
func (*GetByTaskID) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{24}
}

func (x *GetByTaskID) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type ListModuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Module `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListModuleResponse) Reset() {
	*x = ListModuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModuleResponse) ProtoMessage() {}

func (x *ListModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModuleResponse.ProtoReflect.Descriptor instead.
func (*ListModuleResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{25}
}

func (x *ListModuleResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListModuleResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListModuleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListModuleResponse) GetData() []*Module {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListMenuDisableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*MenuDisable `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMenuDisableResponse) Reset() {
	*x = ListMenuDisableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuDisableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuDisableResponse) ProtoMessage() {}

func (x *ListMenuDisableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuDisableResponse.ProtoReflect.Descriptor instead.
func (*ListMenuDisableResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{26}
}

func (x *ListMenuDisableResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListMenuDisableResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMenuDisableResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMenuDisableResponse) GetData() []*MenuDisable {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListMenuLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool           `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32         `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*MenuLicense `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMenuLicenseResponse) Reset() {
	*x = ListMenuLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuLicenseResponse) ProtoMessage() {}

func (x *ListMenuLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuLicenseResponse.ProtoReflect.Descriptor instead.
func (*ListMenuLicenseResponse) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{27}
}

func (x *ListMenuLicenseResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *ListMenuLicenseResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMenuLicenseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMenuLicenseResponse) GetData() []*MenuLicense {
	if x != nil {
		return x.Data
	}
	return nil
}

type MenuAppearance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuID          uint64         `protobuf:"varint,1,opt,name=menuID,proto3" json:"menuID,omitempty"`
	ParentID        uint64         `protobuf:"varint,2,opt,name=parentID,proto3" json:"parentID,omitempty"`
	UserType        string         `protobuf:"bytes,3,opt,name=userType,proto3" json:"userType,omitempty"`
	Label           string         `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	IsModule        bool           `protobuf:"varint,5,opt,name=isModule,proto3" json:"isModule,omitempty"`
	RootPath        string         `protobuf:"bytes,6,opt,name=rootPath,proto3" json:"rootPath,omitempty"`
	ProductID       uint64         `protobuf:"varint,7,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductName     string         `protobuf:"bytes,8,opt,name=productName,proto3" json:"productName,omitempty"`
	OrderNumber     string         `protobuf:"bytes,9,opt,name=orderNumber,proto3" json:"orderNumber,omitempty"`
	IconURI         string         `protobuf:"bytes,10,opt,name=iconURI,proto3" json:"iconURI,omitempty"`
	Disables        []*MenuDisable `protobuf:"bytes,11,rep,name=disables,proto3" json:"disables,omitempty"`
	TaskID          uint64         `protobuf:"varint,12,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Name            string         `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	IsEnable        bool           `protobuf:"varint,14,opt,name=isEnable,proto3" json:"isEnable,omitempty"`
	IsTransactional bool           `protobuf:"varint,16,opt,name=isTransactional,proto3" json:"isTransactional,omitempty"`
	EnableScheduled bool           `protobuf:"varint,15,opt,name=enableScheduled,proto3" json:"enableScheduled,omitempty"`
}

func (x *MenuAppearance) Reset() {
	*x = MenuAppearance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuAppearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuAppearance) ProtoMessage() {}

func (x *MenuAppearance) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuAppearance.ProtoReflect.Descriptor instead.
func (*MenuAppearance) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{28}
}

func (x *MenuAppearance) GetMenuID() uint64 {
	if x != nil {
		return x.MenuID
	}
	return 0
}

func (x *MenuAppearance) GetParentID() uint64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *MenuAppearance) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *MenuAppearance) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MenuAppearance) GetIsModule() bool {
	if x != nil {
		return x.IsModule
	}
	return false
}

func (x *MenuAppearance) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *MenuAppearance) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *MenuAppearance) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MenuAppearance) GetOrderNumber() string {
	if x != nil {
		return x.OrderNumber
	}
	return ""
}

func (x *MenuAppearance) GetIconURI() string {
	if x != nil {
		return x.IconURI
	}
	return ""
}

func (x *MenuAppearance) GetDisables() []*MenuDisable {
	if x != nil {
		return x.Disables
	}
	return nil
}

func (x *MenuAppearance) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *MenuAppearance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuAppearance) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *MenuAppearance) GetIsTransactional() bool {
	if x != nil {
		return x.IsTransactional
	}
	return false
}

func (x *MenuAppearance) GetEnableScheduled() bool {
	if x != nil {
		return x.EnableScheduled
	}
	return false
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID             uint64                 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Step               string                 `protobuf:"bytes,4,opt,name=step,proto3" json:"step,omitempty"`
	FeatureID          uint64                 `protobuf:"varint,5,opt,name=featureID,proto3" json:"featureID,omitempty"`
	LastApprovedByID   uint64                 `protobuf:"varint,6,opt,name=lastApprovedByID,proto3" json:"lastApprovedByID,omitempty"`
	LastRejectedByID   uint64                 `protobuf:"varint,7,opt,name=lastRejectedByID,proto3" json:"lastRejectedByID,omitempty"`
	LastApprovedByName string                 `protobuf:"bytes,8,opt,name=lastApprovedByName,proto3" json:"lastApprovedByName,omitempty"`
	LastRejectedByName string                 `protobuf:"bytes,9,opt,name=lastRejectedByName,proto3" json:"lastRejectedByName,omitempty"`
	CreatedByName      string                 `protobuf:"bytes,10,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	Comment            string                 `protobuf:"bytes,11,opt,name=comment,proto3" json:"comment,omitempty"`
	UpdatedByName      string                 `protobuf:"bytes,12,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
	Reasons            string                 `protobuf:"bytes,13,opt,name=reasons,proto3" json:"reasons,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{29}
}

func (x *Task) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *Task) GetFeatureID() uint64 {
	if x != nil {
		return x.FeatureID
	}
	return 0
}

func (x *Task) GetLastApprovedByID() uint64 {
	if x != nil {
		return x.LastApprovedByID
	}
	return 0
}

func (x *Task) GetLastRejectedByID() uint64 {
	if x != nil {
		return x.LastRejectedByID
	}
	return 0
}

func (x *Task) GetLastApprovedByName() string {
	if x != nil {
		return x.LastApprovedByName
	}
	return ""
}

func (x *Task) GetLastRejectedByName() string {
	if x != nil {
		return x.LastRejectedByName
	}
	return ""
}

func (x *Task) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *Task) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Task) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

func (x *Task) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TaskDataMenuAppearance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus  []*MenuAppearance     `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	Task   *Task                 `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Detail *MenuParentAppearance `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *TaskDataMenuAppearance) Reset() {
	*x = TaskDataMenuAppearance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDataMenuAppearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDataMenuAppearance) ProtoMessage() {}

func (x *TaskDataMenuAppearance) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDataMenuAppearance.ProtoReflect.Descriptor instead.
func (*TaskDataMenuAppearance) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{30}
}

func (x *TaskDataMenuAppearance) GetMenus() []*MenuAppearance {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *TaskDataMenuAppearance) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskDataMenuAppearance) GetDetail() *MenuParentAppearance {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetListTaskMenuAppearanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   GetListTaskMenuAppearanceReqStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=menu.service.v1.GetListTaskMenuAppearanceReqStatuses" json:"status,omitempty"`
	Step     GetListTaskMenuAppearanceReqSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=menu.service.v1.GetListTaskMenuAppearanceReqSteps" json:"step,omitempty"`
	Limit    int32                                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string                                `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir      GetListTaskMenuAppearanceReqDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=menu.service.v1.GetListTaskMenuAppearanceReqDirection" json:"dir,omitempty"`
	Filter   string                                `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                                `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	In       string                                `protobuf:"bytes,9,opt,name=in,proto3" json:"in,omitempty"`
	FilterOr string                                `protobuf:"bytes,10,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
}

func (x *GetListTaskMenuAppearanceReq) Reset() {
	*x = GetListTaskMenuAppearanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTaskMenuAppearanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTaskMenuAppearanceReq) ProtoMessage() {}

func (x *GetListTaskMenuAppearanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTaskMenuAppearanceReq.ProtoReflect.Descriptor instead.
func (*GetListTaskMenuAppearanceReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{31}
}

func (x *GetListTaskMenuAppearanceReq) GetStatus() GetListTaskMenuAppearanceReqStatuses {
	if x != nil {
		return x.Status
	}
	return GetListTaskMenuAppearanceReq_AllStatus
}

func (x *GetListTaskMenuAppearanceReq) GetStep() GetListTaskMenuAppearanceReqSteps {
	if x != nil {
		return x.Step
	}
	return GetListTaskMenuAppearanceReq_AllStep
}

func (x *GetListTaskMenuAppearanceReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListTaskMenuAppearanceReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListTaskMenuAppearanceReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetListTaskMenuAppearanceReq) GetDir() GetListTaskMenuAppearanceReqDirection {
	if x != nil {
		return x.Dir
	}
	return GetListTaskMenuAppearanceReq_DESC
}

func (x *GetListTaskMenuAppearanceReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetListTaskMenuAppearanceReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetListTaskMenuAppearanceReq) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *GetListTaskMenuAppearanceReq) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

type GetListTaskMenuAppearanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                      `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*TaskDataMenuAppearance `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse       `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetListTaskMenuAppearanceRes) Reset() {
	*x = GetListTaskMenuAppearanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTaskMenuAppearanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTaskMenuAppearanceRes) ProtoMessage() {}

func (x *GetListTaskMenuAppearanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTaskMenuAppearanceRes.ProtoReflect.Descriptor instead.
func (*GetListTaskMenuAppearanceRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{32}
}

func (x *GetListTaskMenuAppearanceRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetListTaskMenuAppearanceRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetListTaskMenuAppearanceRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListTaskMenuAppearanceRes) GetData() []*TaskDataMenuAppearance {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetListTaskMenuAppearanceRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetTaskMenuAppearanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetTaskMenuAppearanceReq) Reset() {
	*x = GetTaskMenuAppearanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskMenuAppearanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskMenuAppearanceReq) ProtoMessage() {}

func (x *GetTaskMenuAppearanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskMenuAppearanceReq.ProtoReflect.Descriptor instead.
func (*GetTaskMenuAppearanceReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{33}
}

func (x *GetTaskMenuAppearanceReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetTaskMenuAppearanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskDataMenuAppearance `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskMenuAppearanceRes) Reset() {
	*x = GetTaskMenuAppearanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskMenuAppearanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskMenuAppearanceRes) ProtoMessage() {}

func (x *GetTaskMenuAppearanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskMenuAppearanceRes.ProtoReflect.Descriptor instead.
func (*GetTaskMenuAppearanceRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{34}
}

func (x *GetTaskMenuAppearanceRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskMenuAppearanceRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskMenuAppearanceRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskMenuAppearanceRes) GetData() *TaskDataMenuAppearance {
	if x != nil {
		return x.Data
	}
	return nil
}

type MenuParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsParent     bool   `protobuf:"varint,1,opt,name=isParent,proto3" json:"isParent,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Changelog    string `protobuf:"bytes,3,opt,name=changelog,proto3" json:"changelog,omitempty"`
	CompanyID    uint64 `protobuf:"varint,4,opt,name=companyID,proto3" json:"companyID,omitempty"`
	CompanyName  string `protobuf:"bytes,5,opt,name=companyName,proto3" json:"companyName,omitempty"`
	UserTypeName string `protobuf:"bytes,6,opt,name=userTypeName,proto3" json:"userTypeName,omitempty"`
}

func (x *MenuParent) Reset() {
	*x = MenuParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuParent) ProtoMessage() {}

func (x *MenuParent) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuParent.ProtoReflect.Descriptor instead.
func (*MenuParent) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{35}
}

func (x *MenuParent) GetIsParent() bool {
	if x != nil {
		return x.IsParent
	}
	return false
}

func (x *MenuParent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuParent) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

func (x *MenuParent) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *MenuParent) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *MenuParent) GetUserTypeName() string {
	if x != nil {
		return x.UserTypeName
	}
	return ""
}

type MenuParentAppearance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsParent  bool   `protobuf:"varint,1,opt,name=isParent,proto3" json:"isParent,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Changelog string `protobuf:"bytes,3,opt,name=changelog,proto3" json:"changelog,omitempty"`
	// string companyID = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
	// string companyName = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
	UserTypeName string `protobuf:"bytes,6,opt,name=userTypeName,proto3" json:"userTypeName,omitempty"`
}

func (x *MenuParentAppearance) Reset() {
	*x = MenuParentAppearance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuParentAppearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuParentAppearance) ProtoMessage() {}

func (x *MenuParentAppearance) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuParentAppearance.ProtoReflect.Descriptor instead.
func (*MenuParentAppearance) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{36}
}

func (x *MenuParentAppearance) GetIsParent() bool {
	if x != nil {
		return x.IsParent
	}
	return false
}

func (x *MenuParentAppearance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuParentAppearance) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

func (x *MenuParentAppearance) GetUserTypeName() string {
	if x != nil {
		return x.UserTypeName
	}
	return ""
}

type SetTaskMenuAppearanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*MenuAppearance `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	TaskID    uint64            `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft   bool              `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	ChangeLog string            `protobuf:"bytes,4,opt,name=changeLog,proto3" json:"changeLog,omitempty"`
	Name      string            `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetTaskMenuAppearanceReq) Reset() {
	*x = SetTaskMenuAppearanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskMenuAppearanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskMenuAppearanceReq) ProtoMessage() {}

func (x *SetTaskMenuAppearanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskMenuAppearanceReq.ProtoReflect.Descriptor instead.
func (*SetTaskMenuAppearanceReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{37}
}

func (x *SetTaskMenuAppearanceReq) GetData() []*MenuAppearance {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetTaskMenuAppearanceReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *SetTaskMenuAppearanceReq) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *SetTaskMenuAppearanceReq) GetChangeLog() string {
	if x != nil {
		return x.ChangeLog
	}
	return ""
}

func (x *SetTaskMenuAppearanceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetTaskMenuAppearanceResData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *SetTaskMenuAppearanceResData) Reset() {
	*x = SetTaskMenuAppearanceResData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskMenuAppearanceResData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskMenuAppearanceResData) ProtoMessage() {}

func (x *SetTaskMenuAppearanceResData) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskMenuAppearanceResData.ProtoReflect.Descriptor instead.
func (*SetTaskMenuAppearanceResData) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{38}
}

func (x *SetTaskMenuAppearanceResData) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type SetTaskMenuAppearanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                          `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SetTaskMenuAppearanceResData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetTaskMenuAppearanceRes) Reset() {
	*x = SetTaskMenuAppearanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskMenuAppearanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskMenuAppearanceRes) ProtoMessage() {}

func (x *SetTaskMenuAppearanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskMenuAppearanceRes.ProtoReflect.Descriptor instead.
func (*SetTaskMenuAppearanceRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{39}
}

func (x *SetTaskMenuAppearanceRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SetTaskMenuAppearanceRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetTaskMenuAppearanceRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SetTaskMenuAppearanceRes) GetData() *SetTaskMenuAppearanceResData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SaveMenuAppearanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *MenuAppearance `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64          `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *SaveMenuAppearanceReq) Reset() {
	*x = SaveMenuAppearanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMenuAppearanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMenuAppearanceReq) ProtoMessage() {}

func (x *SaveMenuAppearanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMenuAppearanceReq.ProtoReflect.Descriptor instead.
func (*SaveMenuAppearanceReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{40}
}

func (x *SaveMenuAppearanceReq) GetData() *MenuAppearance {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SaveMenuAppearanceReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type BeforeSaveMenuAppearanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserType string `protobuf:"bytes,1,opt,name=userType,proto3" json:"userType,omitempty"`
}

func (x *BeforeSaveMenuAppearanceReq) Reset() {
	*x = BeforeSaveMenuAppearanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeforeSaveMenuAppearanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeforeSaveMenuAppearanceReq) ProtoMessage() {}

func (x *BeforeSaveMenuAppearanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeforeSaveMenuAppearanceReq.ProtoReflect.Descriptor instead.
func (*BeforeSaveMenuAppearanceReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{41}
}

func (x *BeforeSaveMenuAppearanceReq) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

type SaveMenuAppearanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Menu  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveMenuAppearanceRes) Reset() {
	*x = SaveMenuAppearanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMenuAppearanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMenuAppearanceRes) ProtoMessage() {}

func (x *SaveMenuAppearanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMenuAppearanceRes.ProtoReflect.Descriptor instead.
func (*SaveMenuAppearanceRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{42}
}

func (x *SaveMenuAppearanceRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SaveMenuAppearanceRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveMenuAppearanceRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SaveMenuAppearanceRes) GetData() *Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMenuAppearanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuID uint64                        `protobuf:"varint,1,opt,name=menuID,proto3" json:"menuID,omitempty"`
	Limit  int32                         `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page   int32                         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort   string                        `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir    GetMenuAppearanceReqDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=menu.service.v1.GetMenuAppearanceReqDirection" json:"dir,omitempty"`
	Filter string                        `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query  string                        `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetMenuAppearanceReq) Reset() {
	*x = GetMenuAppearanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuAppearanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuAppearanceReq) ProtoMessage() {}

func (x *GetMenuAppearanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuAppearanceReq.ProtoReflect.Descriptor instead.
func (*GetMenuAppearanceReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{43}
}

func (x *GetMenuAppearanceReq) GetMenuID() uint64 {
	if x != nil {
		return x.MenuID
	}
	return 0
}

func (x *GetMenuAppearanceReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMenuAppearanceReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMenuAppearanceReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetMenuAppearanceReq) GetDir() GetMenuAppearanceReqDirection {
	if x != nil {
		return x.Dir
	}
	return GetMenuAppearanceReq_DESC
}

func (x *GetMenuAppearanceReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetMenuAppearanceReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetMenuLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuLicenseID uint64                     `protobuf:"varint,1,opt,name=menuLicenseID,proto3" json:"menuLicenseID,omitempty"`
	Limit         int32                      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          int32                      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Sort          string                     `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir           GetMenuLicenseReqDirection `protobuf:"varint,5,opt,name=dir,proto3,enum=menu.service.v1.GetMenuLicenseReqDirection" json:"dir,omitempty"`
	Filter        string                     `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Query         string                     `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	In            string                     `protobuf:"bytes,9,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *GetMenuLicenseReq) Reset() {
	*x = GetMenuLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuLicenseReq) ProtoMessage() {}

func (x *GetMenuLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuLicenseReq.ProtoReflect.Descriptor instead.
func (*GetMenuLicenseReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{44}
}

func (x *GetMenuLicenseReq) GetMenuLicenseID() uint64 {
	if x != nil {
		return x.MenuLicenseID
	}
	return 0
}

func (x *GetMenuLicenseReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMenuLicenseReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMenuLicenseReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetMenuLicenseReq) GetDir() GetMenuLicenseReqDirection {
	if x != nil {
		return x.Dir
	}
	return GetMenuLicenseReq_DESC
}

func (x *GetMenuLicenseReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetMenuLicenseReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetMenuLicenseReq) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

type GetMenuAppearanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*Menu             `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMenuAppearanceRes) Reset() {
	*x = GetMenuAppearanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuAppearanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuAppearanceRes) ProtoMessage() {}

func (x *GetMenuAppearanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuAppearanceRes.ProtoReflect.Descriptor instead.
func (*GetMenuAppearanceRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{45}
}

func (x *GetMenuAppearanceRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetMenuAppearanceRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMenuAppearanceRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMenuAppearanceRes) GetData() []*Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetMenuAppearanceRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetMyMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetMyMenuReq) Reset() {
	*x = GetMyMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyMenuReq) ProtoMessage() {}

func (x *GetMyMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyMenuReq.ProtoReflect.Descriptor instead.
func (*GetMyMenuReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{46}
}

func (x *GetMyMenuReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetMyMenuRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool    `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Menu `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMyMenuRes) Reset() {
	*x = GetMyMenuRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyMenuRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyMenuRes) ProtoMessage() {}

func (x *GetMyMenuRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyMenuRes.ProtoReflect.Descriptor instead.
func (*GetMyMenuRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{47}
}

func (x *GetMyMenuRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetMyMenuRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMyMenuRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMyMenuRes) GetData() []*Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

type MenuLicenseWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuLicenseID    uint64                   `protobuf:"varint,1,opt,name=menuLicenseID,proto3" json:"menuLicenseID,omitempty"`
	MenuID           uint64                   `protobuf:"varint,21,opt,name=menuID,proto3" json:"menuID,omitempty"`
	ParentID         uint64                   `protobuf:"varint,22,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Label            string                   `protobuf:"bytes,23,opt,name=label,proto3" json:"label,omitempty"`
	IsModule         bool                     `protobuf:"varint,24,opt,name=isModule,proto3" json:"isModule,omitempty"`
	CompanyID        uint64                   `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	IsAllowed        bool                     `protobuf:"varint,4,opt,name=isAllowed,proto3" json:"isAllowed,omitempty"`
	Fee              uint64                   `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeCurrency      string                   `protobuf:"bytes,2,opt,name=feeCurrency,proto3" json:"feeCurrency,omitempty"`
	FeeType          string                   `protobuf:"bytes,6,opt,name=feeType,proto3" json:"feeType,omitempty"`
	TransactionLimit []*TempLimit             `protobuf:"bytes,7,rep,name=transactionLimit,proto3" json:"transactionLimit,omitempty"`
	ProductID        uint64                   `protobuf:"varint,15,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductName      string                   `protobuf:"bytes,16,opt,name=productName,proto3" json:"productName,omitempty"`
	OrderNumber      string                   `protobuf:"bytes,25,opt,name=orderNumber,proto3" json:"orderNumber,omitempty"`
	Company          *TempCompany             `protobuf:"bytes,17,opt,name=Company,proto3" json:"Company,omitempty"`
	ChargeDate       []*timestamppb.Timestamp `protobuf:"bytes,8,rep,name=chargeDate,proto3" json:"chargeDate,omitempty"`
	CreatedAt        *timestamppb.Timestamp   `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedByID      uint64                   `protobuf:"varint,10,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedAt        *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedByID      uint64                   `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	Name             string                   `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	IsEnable         bool                     `protobuf:"varint,14,opt,name=isEnable,proto3" json:"isEnable,omitempty"`
	AccountID        uint64                   `protobuf:"varint,18,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountNumber    string                   `protobuf:"bytes,19,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName      string                   `protobuf:"bytes,20,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias     string                   `protobuf:"bytes,26,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	TaskID           uint64                   `protobuf:"varint,27,opt,name=taskID,proto3" json:"taskID,omitempty"`
	// bool isEnabled = 28;
	IsTransactional bool   `protobuf:"varint,29,opt,name=isTransactional,proto3" json:"isTransactional,omitempty"`
	IconURI         string `protobuf:"bytes,30,opt,name=iconURI,proto3" json:"iconURI,omitempty"`
	CreatedByName   string `protobuf:"bytes,31,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	UpdatedByName   string `protobuf:"bytes,32,opt,name=updatedByName,proto3" json:"updatedByName,omitempty"`
}

func (x *MenuLicenseWrite) Reset() {
	*x = MenuLicenseWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuLicenseWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuLicenseWrite) ProtoMessage() {}

func (x *MenuLicenseWrite) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuLicenseWrite.ProtoReflect.Descriptor instead.
func (*MenuLicenseWrite) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{48}
}

func (x *MenuLicenseWrite) GetMenuLicenseID() uint64 {
	if x != nil {
		return x.MenuLicenseID
	}
	return 0
}

func (x *MenuLicenseWrite) GetMenuID() uint64 {
	if x != nil {
		return x.MenuID
	}
	return 0
}

func (x *MenuLicenseWrite) GetParentID() uint64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *MenuLicenseWrite) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MenuLicenseWrite) GetIsModule() bool {
	if x != nil {
		return x.IsModule
	}
	return false
}

func (x *MenuLicenseWrite) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *MenuLicenseWrite) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

func (x *MenuLicenseWrite) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *MenuLicenseWrite) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

func (x *MenuLicenseWrite) GetFeeType() string {
	if x != nil {
		return x.FeeType
	}
	return ""
}

func (x *MenuLicenseWrite) GetTransactionLimit() []*TempLimit {
	if x != nil {
		return x.TransactionLimit
	}
	return nil
}

func (x *MenuLicenseWrite) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *MenuLicenseWrite) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MenuLicenseWrite) GetOrderNumber() string {
	if x != nil {
		return x.OrderNumber
	}
	return ""
}

func (x *MenuLicenseWrite) GetCompany() *TempCompany {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *MenuLicenseWrite) GetChargeDate() []*timestamppb.Timestamp {
	if x != nil {
		return x.ChargeDate
	}
	return nil
}

func (x *MenuLicenseWrite) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MenuLicenseWrite) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *MenuLicenseWrite) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MenuLicenseWrite) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *MenuLicenseWrite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuLicenseWrite) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *MenuLicenseWrite) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *MenuLicenseWrite) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *MenuLicenseWrite) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *MenuLicenseWrite) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *MenuLicenseWrite) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *MenuLicenseWrite) GetIsTransactional() bool {
	if x != nil {
		return x.IsTransactional
	}
	return false
}

func (x *MenuLicenseWrite) GetIconURI() string {
	if x != nil {
		return x.IconURI
	}
	return ""
}

func (x *MenuLicenseWrite) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *MenuLicenseWrite) GetUpdatedByName() string {
	if x != nil {
		return x.UpdatedByName
	}
	return ""
}

type GetMenuLicenseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*MenuLicenseWrite `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMenuLicenseRes) Reset() {
	*x = GetMenuLicenseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuLicenseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuLicenseRes) ProtoMessage() {}

func (x *GetMenuLicenseRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuLicenseRes.ProtoReflect.Descriptor instead.
func (*GetMenuLicenseRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{49}
}

func (x *GetMenuLicenseRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetMenuLicenseRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMenuLicenseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMenuLicenseRes) GetData() []*MenuLicenseWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetMenuLicenseRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SetTaskMenuLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*MenuLicenseWrite `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	TaskID    uint64              `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
	IsDraft   bool                `protobuf:"varint,3,opt,name=isDraft,proto3" json:"isDraft,omitempty"`
	Name      string              `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Changelog string              `protobuf:"bytes,5,opt,name=changelog,proto3" json:"changelog,omitempty"`
}

func (x *SetTaskMenuLicenseReq) Reset() {
	*x = SetTaskMenuLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskMenuLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskMenuLicenseReq) ProtoMessage() {}

func (x *SetTaskMenuLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskMenuLicenseReq.ProtoReflect.Descriptor instead.
func (*SetTaskMenuLicenseReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{50}
}

func (x *SetTaskMenuLicenseReq) GetData() []*MenuLicenseWrite {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetTaskMenuLicenseReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *SetTaskMenuLicenseReq) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *SetTaskMenuLicenseReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetTaskMenuLicenseReq) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

type SetTaskMenuLicenseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                       `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32                     `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SetTaskMenuLicenseResData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetTaskMenuLicenseRes) Reset() {
	*x = SetTaskMenuLicenseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskMenuLicenseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskMenuLicenseRes) ProtoMessage() {}

func (x *SetTaskMenuLicenseRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskMenuLicenseRes.ProtoReflect.Descriptor instead.
func (*SetTaskMenuLicenseRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{51}
}

func (x *SetTaskMenuLicenseRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SetTaskMenuLicenseRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetTaskMenuLicenseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SetTaskMenuLicenseRes) GetData() *SetTaskMenuLicenseResData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetTaskMenuLicenseResData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *SetTaskMenuLicenseResData) Reset() {
	*x = SetTaskMenuLicenseResData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaskMenuLicenseResData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaskMenuLicenseResData) ProtoMessage() {}

func (x *SetTaskMenuLicenseResData) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaskMenuLicenseResData.ProtoReflect.Descriptor instead.
func (*SetTaskMenuLicenseResData) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{52}
}

func (x *SetTaskMenuLicenseResData) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type SaveMenuLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *MenuLicenseSave `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TaskID uint64           `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *SaveMenuLicenseReq) Reset() {
	*x = SaveMenuLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMenuLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMenuLicenseReq) ProtoMessage() {}

func (x *SaveMenuLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMenuLicenseReq.ProtoReflect.Descriptor instead.
func (*SaveMenuLicenseReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{53}
}

func (x *SaveMenuLicenseReq) GetData() *MenuLicenseSave {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SaveMenuLicenseReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type MenuLicenseSave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuLicenseID    uint64                   `protobuf:"varint,1,opt,name=menuLicenseID,proto3" json:"menuLicenseID,omitempty"`
	MenuID           uint64                   `protobuf:"varint,21,opt,name=menuID,proto3" json:"menuID,omitempty"`
	ParentID         uint64                   `protobuf:"varint,22,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Label            string                   `protobuf:"bytes,23,opt,name=label,proto3" json:"label,omitempty"`
	IsModule         bool                     `protobuf:"varint,24,opt,name=isModule,proto3" json:"isModule,omitempty"`
	CompanyID        uint64                   `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	IsAllowed        bool                     `protobuf:"varint,4,opt,name=isAllowed,proto3" json:"isAllowed,omitempty"`
	Fee              uint64                   `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeCurrency      string                   `protobuf:"bytes,2,opt,name=feeCurrency,proto3" json:"feeCurrency,omitempty"`
	FeeType          string                   `protobuf:"bytes,6,opt,name=feeType,proto3" json:"feeType,omitempty"`
	TransactionLimit []*TempLimit             `protobuf:"bytes,7,rep,name=transactionLimit,proto3" json:"transactionLimit,omitempty"`
	ProductID        uint64                   `protobuf:"varint,15,opt,name=productID,proto3" json:"productID,omitempty"`
	ProductName      string                   `protobuf:"bytes,16,opt,name=productName,proto3" json:"productName,omitempty"`
	OrderNumber      string                   `protobuf:"bytes,25,opt,name=orderNumber,proto3" json:"orderNumber,omitempty"`
	Company          *TempCompany             `protobuf:"bytes,17,opt,name=Company,proto3" json:"Company,omitempty"`
	ChargeDate       []*timestamppb.Timestamp `protobuf:"bytes,8,rep,name=chargeDate,proto3" json:"chargeDate,omitempty"`
	CreatedAt        *timestamppb.Timestamp   `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedByID      uint64                   `protobuf:"varint,10,opt,name=createdByID,proto3" json:"createdByID,omitempty"`
	UpdatedAt        *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedByID      uint64                   `protobuf:"varint,12,opt,name=updatedByID,proto3" json:"updatedByID,omitempty"`
	Name             string                   `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	IsEnable         bool                     `protobuf:"varint,14,opt,name=isEnable,proto3" json:"isEnable,omitempty"`
	AccountID        uint64                   `protobuf:"varint,18,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccountNumber    string                   `protobuf:"bytes,19,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	AccountName      string                   `protobuf:"bytes,20,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountAlias     string                   `protobuf:"bytes,26,opt,name=accountAlias,proto3" json:"accountAlias,omitempty"`
	TaskID           uint64                   `protobuf:"varint,27,opt,name=taskID,proto3" json:"taskID,omitempty"`
	// bool isEnabled = 28;
	IsTransactional bool `protobuf:"varint,29,opt,name=isTransactional,proto3" json:"isTransactional,omitempty"`
}

func (x *MenuLicenseSave) Reset() {
	*x = MenuLicenseSave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuLicenseSave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuLicenseSave) ProtoMessage() {}

func (x *MenuLicenseSave) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuLicenseSave.ProtoReflect.Descriptor instead.
func (*MenuLicenseSave) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{54}
}

func (x *MenuLicenseSave) GetMenuLicenseID() uint64 {
	if x != nil {
		return x.MenuLicenseID
	}
	return 0
}

func (x *MenuLicenseSave) GetMenuID() uint64 {
	if x != nil {
		return x.MenuID
	}
	return 0
}

func (x *MenuLicenseSave) GetParentID() uint64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *MenuLicenseSave) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MenuLicenseSave) GetIsModule() bool {
	if x != nil {
		return x.IsModule
	}
	return false
}

func (x *MenuLicenseSave) GetCompanyID() uint64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *MenuLicenseSave) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

func (x *MenuLicenseSave) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *MenuLicenseSave) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

func (x *MenuLicenseSave) GetFeeType() string {
	if x != nil {
		return x.FeeType
	}
	return ""
}

func (x *MenuLicenseSave) GetTransactionLimit() []*TempLimit {
	if x != nil {
		return x.TransactionLimit
	}
	return nil
}

func (x *MenuLicenseSave) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *MenuLicenseSave) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MenuLicenseSave) GetOrderNumber() string {
	if x != nil {
		return x.OrderNumber
	}
	return ""
}

func (x *MenuLicenseSave) GetCompany() *TempCompany {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *MenuLicenseSave) GetChargeDate() []*timestamppb.Timestamp {
	if x != nil {
		return x.ChargeDate
	}
	return nil
}

func (x *MenuLicenseSave) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MenuLicenseSave) GetCreatedByID() uint64 {
	if x != nil {
		return x.CreatedByID
	}
	return 0
}

func (x *MenuLicenseSave) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MenuLicenseSave) GetUpdatedByID() uint64 {
	if x != nil {
		return x.UpdatedByID
	}
	return 0
}

func (x *MenuLicenseSave) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuLicenseSave) GetIsEnable() bool {
	if x != nil {
		return x.IsEnable
	}
	return false
}

func (x *MenuLicenseSave) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *MenuLicenseSave) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *MenuLicenseSave) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *MenuLicenseSave) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

func (x *MenuLicenseSave) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *MenuLicenseSave) GetIsTransactional() bool {
	if x != nil {
		return x.IsTransactional
	}
	return false
}

type TempLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	CurrencyID uint64 `protobuf:"varint,2,opt,name=currencyID,proto3" json:"currencyID,omitempty"`
	Currency   string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *TempLimit) Reset() {
	*x = TempLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempLimit) ProtoMessage() {}

func (x *TempLimit) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempLimit.ProtoReflect.Descriptor instead.
func (*TempLimit) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{55}
}

func (x *TempLimit) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TempLimit) GetCurrencyID() uint64 {
	if x != nil {
		return x.CurrencyID
	}
	return 0
}

func (x *TempLimit) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type SaveMenuLicenseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool         `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32       `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *MenuLicense `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveMenuLicenseRes) Reset() {
	*x = SaveMenuLicenseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMenuLicenseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMenuLicenseRes) ProtoMessage() {}

func (x *SaveMenuLicenseRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMenuLicenseRes.ProtoReflect.Descriptor instead.
func (*SaveMenuLicenseRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{56}
}

func (x *SaveMenuLicenseRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *SaveMenuLicenseRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveMenuLicenseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SaveMenuLicenseRes) GetData() *MenuLicense {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetListTaskMenuLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   GetListTaskMenuLicenseReqStatuses  `protobuf:"varint,1,opt,name=status,proto3,enum=menu.service.v1.GetListTaskMenuLicenseReqStatuses" json:"status,omitempty"`
	Step     GetListTaskMenuLicenseReqSteps     `protobuf:"varint,2,opt,name=step,proto3,enum=menu.service.v1.GetListTaskMenuLicenseReqSteps" json:"step,omitempty"`
	Limit    int32                              `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32                              `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string                             `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir      GetListTaskMenuLicenseReqDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=menu.service.v1.GetListTaskMenuLicenseReqDirection" json:"dir,omitempty"`
	Filter   string                             `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query    string                             `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	In       string                             `protobuf:"bytes,9,opt,name=in,proto3" json:"in,omitempty"`
	FilterOr string                             `protobuf:"bytes,10,opt,name=filterOr,proto3" json:"filterOr,omitempty"`
}

func (x *GetListTaskMenuLicenseReq) Reset() {
	*x = GetListTaskMenuLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTaskMenuLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTaskMenuLicenseReq) ProtoMessage() {}

func (x *GetListTaskMenuLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTaskMenuLicenseReq.ProtoReflect.Descriptor instead.
func (*GetListTaskMenuLicenseReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{57}
}

func (x *GetListTaskMenuLicenseReq) GetStatus() GetListTaskMenuLicenseReqStatuses {
	if x != nil {
		return x.Status
	}
	return GetListTaskMenuLicenseReq_AllStatus
}

func (x *GetListTaskMenuLicenseReq) GetStep() GetListTaskMenuLicenseReqSteps {
	if x != nil {
		return x.Step
	}
	return GetListTaskMenuLicenseReq_AllStep
}

func (x *GetListTaskMenuLicenseReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListTaskMenuLicenseReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListTaskMenuLicenseReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetListTaskMenuLicenseReq) GetDir() GetListTaskMenuLicenseReqDirection {
	if x != nil {
		return x.Dir
	}
	return GetListTaskMenuLicenseReq_DESC
}

func (x *GetListTaskMenuLicenseReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetListTaskMenuLicenseReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetListTaskMenuLicenseReq) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *GetListTaskMenuLicenseReq) GetFilterOr() string {
	if x != nil {
		return x.FilterOr
	}
	return ""
}

type GetListTaskMenuLicenseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*TaskDataMenuLicense `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse    `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetListTaskMenuLicenseRes) Reset() {
	*x = GetListTaskMenuLicenseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTaskMenuLicenseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTaskMenuLicenseRes) ProtoMessage() {}

func (x *GetListTaskMenuLicenseRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTaskMenuLicenseRes.ProtoReflect.Descriptor instead.
func (*GetListTaskMenuLicenseRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{58}
}

func (x *GetListTaskMenuLicenseRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetListTaskMenuLicenseRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetListTaskMenuLicenseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListTaskMenuLicenseRes) GetData() []*TaskDataMenuLicense {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetListTaskMenuLicenseRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type TaskDataMenuLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus      []*MenuLicenseWrite `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	Task       *Task               `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Detail     *MenuParent         `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	HidedMenus []*MenuLicenseWrite `protobuf:"bytes,4,rep,name=hidedMenus,proto3" json:"hidedMenus,omitempty"`
}

func (x *TaskDataMenuLicense) Reset() {
	*x = TaskDataMenuLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDataMenuLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDataMenuLicense) ProtoMessage() {}

func (x *TaskDataMenuLicense) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDataMenuLicense.ProtoReflect.Descriptor instead.
func (*TaskDataMenuLicense) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{59}
}

func (x *TaskDataMenuLicense) GetMenus() []*MenuLicenseWrite {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *TaskDataMenuLicense) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskDataMenuLicense) GetDetail() *MenuParent {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *TaskDataMenuLicense) GetHidedMenus() []*MenuLicenseWrite {
	if x != nil {
		return x.HidedMenus
	}
	return nil
}

type GetTaskMenuLicenseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID uint64 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *GetTaskMenuLicenseReq) Reset() {
	*x = GetTaskMenuLicenseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskMenuLicenseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskMenuLicenseReq) ProtoMessage() {}

func (x *GetTaskMenuLicenseReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskMenuLicenseReq.ProtoReflect.Descriptor instead.
func (*GetTaskMenuLicenseReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{60}
}

func (x *GetTaskMenuLicenseReq) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetTaskMenuLicenseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool                 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code    uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *TaskDataMenuLicense `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskMenuLicenseRes) Reset() {
	*x = GetTaskMenuLicenseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskMenuLicenseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskMenuLicenseRes) ProtoMessage() {}

func (x *GetTaskMenuLicenseRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskMenuLicenseRes.ProtoReflect.Descriptor instead.
func (*GetTaskMenuLicenseRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{61}
}

func (x *GetTaskMenuLicenseRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetTaskMenuLicenseRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTaskMenuLicenseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTaskMenuLicenseRes) GetData() *TaskDataMenuLicense {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMenuAppearanceDisableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuID        uint64                               `protobuf:"varint,1,opt,name=menuID,proto3" json:"menuID,omitempty"`
	MenuDisableID uint64                               `protobuf:"varint,2,opt,name=menuDisableID,proto3" json:"menuDisableID,omitempty"`
	Limit         int32                                `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          int32                                `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort          string                               `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir           GetMenuAppearanceDisableReqDirection `protobuf:"varint,6,opt,name=dir,proto3,enum=menu.service.v1.GetMenuAppearanceDisableReqDirection" json:"dir,omitempty"`
	Filter        string                               `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	Query         string                               `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetMenuAppearanceDisableReq) Reset() {
	*x = GetMenuAppearanceDisableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuAppearanceDisableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuAppearanceDisableReq) ProtoMessage() {}

func (x *GetMenuAppearanceDisableReq) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuAppearanceDisableReq.ProtoReflect.Descriptor instead.
func (*GetMenuAppearanceDisableReq) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{62}
}

func (x *GetMenuAppearanceDisableReq) GetMenuID() uint64 {
	if x != nil {
		return x.MenuID
	}
	return 0
}

func (x *GetMenuAppearanceDisableReq) GetMenuDisableID() uint64 {
	if x != nil {
		return x.MenuDisableID
	}
	return 0
}

func (x *GetMenuAppearanceDisableReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMenuAppearanceDisableReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMenuAppearanceDisableReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetMenuAppearanceDisableReq) GetDir() GetMenuAppearanceDisableReqDirection {
	if x != nil {
		return x.Dir
	}
	return GetMenuAppearanceDisableReq_DESC
}

func (x *GetMenuAppearanceDisableReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetMenuAppearanceDisableReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetMenuAppearanceDisableRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error      bool                `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Code       uint32              `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data       []*MenuDisable      `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMenuAppearanceDisableRes) Reset() {
	*x = GetMenuAppearanceDisableRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuAppearanceDisableRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuAppearanceDisableRes) ProtoMessage() {}

func (x *GetMenuAppearanceDisableRes) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuAppearanceDisableRes.ProtoReflect.Descriptor instead.
func (*GetMenuAppearanceDisableRes) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{63}
}

func (x *GetMenuAppearanceDisableRes) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *GetMenuAppearanceDisableRes) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMenuAppearanceDisableRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMenuAppearanceDisableRes) GetData() []*MenuDisable {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetMenuAppearanceDisableRes) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type FileMenuLicenseTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileMenuLicenseTaskRequest_Formats  `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=menu.service.v1.FileMenuLicenseTaskRequest_Formats" json:"fileFormat,omitempty"`
	Status     FileMenuLicenseTaskRequestStatuses  `protobuf:"varint,2,opt,name=status,proto3,enum=menu.service.v1.FileMenuLicenseTaskRequestStatuses" json:"status,omitempty"`
	Step       FileMenuLicenseTaskRequestSteps     `protobuf:"varint,3,opt,name=step,proto3,enum=menu.service.v1.FileMenuLicenseTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                               `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                               `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                              `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        FileMenuLicenseTaskRequestDirection `protobuf:"varint,7,opt,name=dir,proto3,enum=menu.service.v1.FileMenuLicenseTaskRequestDirection" json:"dir,omitempty"`
	Filter     string                              `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
	// filterGetListTaskMenuLicense filter = 8;
	Query string `protobuf:"bytes,9,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FileMenuLicenseTaskRequest) Reset() {
	*x = FileMenuLicenseTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMenuLicenseTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMenuLicenseTaskRequest) ProtoMessage() {}

func (x *FileMenuLicenseTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMenuLicenseTaskRequest.ProtoReflect.Descriptor instead.
func (*FileMenuLicenseTaskRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{64}
}

func (x *FileMenuLicenseTaskRequest) GetFileFormat() FileMenuLicenseTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileMenuLicenseTaskRequest_null
}

func (x *FileMenuLicenseTaskRequest) GetStatus() FileMenuLicenseTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return FileMenuLicenseTaskRequest_AllStatus
}

func (x *FileMenuLicenseTaskRequest) GetStep() FileMenuLicenseTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return FileMenuLicenseTaskRequest_AllStep
}

func (x *FileMenuLicenseTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileMenuLicenseTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileMenuLicenseTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *FileMenuLicenseTaskRequest) GetDir() FileMenuLicenseTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return FileMenuLicenseTaskRequest_DESC
}

func (x *FileMenuLicenseTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FileMenuLicenseTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type FileMenuAppearanceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFormat FileMenuAppearanceTaskRequest_Formats  `protobuf:"varint,1,opt,name=fileFormat,proto3,enum=menu.service.v1.FileMenuAppearanceTaskRequest_Formats" json:"fileFormat,omitempty"`
	Status     FileMenuAppearanceTaskRequestStatuses  `protobuf:"varint,2,opt,name=status,proto3,enum=menu.service.v1.FileMenuAppearanceTaskRequestStatuses" json:"status,omitempty"`
	Step       FileMenuAppearanceTaskRequestSteps     `protobuf:"varint,3,opt,name=step,proto3,enum=menu.service.v1.FileMenuAppearanceTaskRequestSteps" json:"step,omitempty"`
	Limit      int32                                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32                                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Sort       string                                 `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Dir        FileMenuAppearanceTaskRequestDirection `protobuf:"varint,7,opt,name=dir,proto3,enum=menu.service.v1.FileMenuAppearanceTaskRequestDirection" json:"dir,omitempty"`
	Filter     string                                 `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
	Query      string                                 `protobuf:"bytes,9,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FileMenuAppearanceTaskRequest) Reset() {
	*x = FileMenuAppearanceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_payload_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMenuAppearanceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMenuAppearanceTaskRequest) ProtoMessage() {}

func (x *FileMenuAppearanceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_payload_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMenuAppearanceTaskRequest.ProtoReflect.Descriptor instead.
func (*FileMenuAppearanceTaskRequest) Descriptor() ([]byte, []int) {
	return file_menu_payload_proto_rawDescGZIP(), []int{65}
}

func (x *FileMenuAppearanceTaskRequest) GetFileFormat() FileMenuAppearanceTaskRequest_Formats {
	if x != nil {
		return x.FileFormat
	}
	return FileMenuAppearanceTaskRequest_null
}

func (x *FileMenuAppearanceTaskRequest) GetStatus() FileMenuAppearanceTaskRequestStatuses {
	if x != nil {
		return x.Status
	}
	return FileMenuAppearanceTaskRequest_AllStatus
}

func (x *FileMenuAppearanceTaskRequest) GetStep() FileMenuAppearanceTaskRequestSteps {
	if x != nil {
		return x.Step
	}
	return FileMenuAppearanceTaskRequest_AllStep
}

func (x *FileMenuAppearanceTaskRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FileMenuAppearanceTaskRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileMenuAppearanceTaskRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *FileMenuAppearanceTaskRequest) GetDir() FileMenuAppearanceTaskRequestDirection {
	if x != nil {
		return x.Dir
	}
	return FileMenuAppearanceTaskRequest_DESC
}

func (x *FileMenuAppearanceTaskRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FileMenuAppearanceTaskRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

var File_menu_payload_proto protoreflect.FileDescriptor

var file_menu_payload_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x67, 0x6f, 0x72, 0x6d,
	0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b,
	0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x20, 0x01,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x20, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32,
	0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x41, 0x72, 0x72, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4b, 0x65,
	0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd5, 0x03, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92,
	0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62,
	0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x22, 0x3c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x56, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x88, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x91, 0x01, 0x92, 0x41, 0x8d, 0x01, 0x32, 0x8a, 0x01,
	0x7b, 0x22, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c,
	0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x7b, 0x22, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2c,
	0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22,
	0x2c, 0x22, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65,
	0x2c, 0x22, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x3a, 0x22, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x2c, 0x22, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a,
	0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x7d, 0x7d, 0x22, 0xa4, 0x04, 0x0a, 0x10, 0x4d,
	0x65, 0x6e, 0x75, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x70, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x35, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x6e,
	0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xb2, 0x05, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3e, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67,
	0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92,
	0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62,
	0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05,
	0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xce, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xcc, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x13,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x04, 0x0a, 0x0e, 0x4d, 0x65, 0x6e, 0x75, 0x41,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x52, 0x49, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x52, 0x49, 0x12, 0x3d, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x22, 0xb2, 0x04, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12,
	0x3d, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb9, 0x01,
	0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x12,
	0x29, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x3d, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x65, 0x6e,
	0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xdf, 0x04, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6d, 0x65, 0x6e,
	0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65,
	0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x49, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75,
	0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xe4, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e,
	0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x9b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f,
	0x67, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x12, 0x27, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x03, 0x92, 0x41, 0x00, 0x22,
	0x36, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x15, 0x53,
	0x61, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x22, 0x39, 0x0a, 0x1b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x76, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x86, 0x01, 0x0a,
	0x15, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf4, 0x09, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27,
	0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32,
	0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20,
	0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61,
	0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x41, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41,
	0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44,
	0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b,
	0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65,
	0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44,
	0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e,
	0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e,
	0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41,
	0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27,
	0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65,
	0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27,
	0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b,
	0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d,
	0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x1e, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53,
	0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x8c, 0x0a, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41,
	0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74,
	0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x03, 0x64, 0x69, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1,
	0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27,
	0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65,
	0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20,
	0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20,
	0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3,
	0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79,
	0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74,
	0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d,
	0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20,
	0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45,
	0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e,
	0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x22, 0x1e, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xca, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe0, 0x08,
	0x0a, 0x10, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x44, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63,
	0x6f, 0x6e, 0x55, 0x52, 0x49, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x52, 0x49, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xd3, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x3a, 0x03, 0x92, 0x41, 0x00,
	0x22, 0x9b, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x33,
	0x0a, 0x19, 0x53, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0xf9, 0x07, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x46, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x22, 0x5d, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xd3, 0x04, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x46,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65,
	0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xde, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x64,
	0x4d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x0a,
	0x68, 0x69, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x95, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xd4, 0x03, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x65, 0x6e, 0x75, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x6d, 0x65, 0x6e, 0x75, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74,
	0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65,
	0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41,
	0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79,
	0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x48, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0xd8, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x0d, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6d, 0x65, 0x6e, 0x75,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x54,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x3e, 0x92,
	0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x70,
	0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20,
	0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x62, 0x79, 0x20, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x47, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03,
	0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20, 0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74,
	0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c,
	0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d,
	0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e,
	0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31,
	0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45,
	0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02,
	0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a,
	0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79, 0x33,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x79,
	0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20,
	0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20,
	0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x4f,
	0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d,
	0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e,
	0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x10, 0x03, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22,
	0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04,
	0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22,
	0xb6, 0x0d, 0x0a, 0x1d, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65,
	0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x56, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6d, 0x65, 0x6e, 0x75,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x73, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x54, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x3e, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20,
	0x64, 0x61, 0x74, 0x61, 0x20, 0x70, 0x65, 0x72, 0x20, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x20, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31,
	0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x32, 0x3c, 0x70,
	0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65,
	0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x20, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x27, 0x2d, 0x31, 0x27, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1e, 0x92, 0x41, 0x1b, 0x32, 0x19, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61,
	0x20, 0x62, 0x79, 0x20, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x4a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69,
	0x72, 0x12, 0x8e, 0x04, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0xf5, 0x03, 0x92, 0x41, 0xf1, 0x03, 0x32, 0xee, 0x03, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x27, 0x41, 0x4e, 0x44, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x20, 0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d,
	0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x3d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x3a, 0x31, 0x2c, 0x74, 0x79, 0x70,
	0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d,
	0x3e, 0x20, 0x57, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x20,
	0x3d, 0x20, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x27,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x0a, 0x20,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20, 0x0a, 0x20, 0x2d,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20,
	0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20,
	0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25,
	0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20,
	0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a,
	0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x3c, 0x3d, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3c, 0x3d, 0x20,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31,
	0x3a, 0x3e, 0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x2c, 0x6b, 0x65, 0x79, 0x32, 0x3a, 0x3c,
	0x3d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79,
	0x31, 0x20, 0x3e, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x20, 0x41, 0x4e, 0x44, 0x20,
	0x6b, 0x65, 0x79, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x27, 0x20,
	0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x20, 0x45, 0x58, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27,
	0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0xee, 0x02, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x42, 0xd7, 0x02, 0x92, 0x41, 0xd3, 0x02, 0x32, 0xd0, 0x02, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x27, 0x4f, 0x52, 0x27, 0x20, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20,
	0x0a, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x20, 0x5b, 0x6b, 0x65, 0x79, 0x31, 0x2c,
	0x6b, 0x65, 0x79, 0x32, 0x2c, 0x6b, 0x65, 0x79, 0x33, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d,
	0x20, 0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x20, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x3d, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x3e, 0x20, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27, 0x20, 0x4f, 0x52, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20,
	0x3d, 0x20, 0x27, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x27,
	0x20, 0x0a, 0x20, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x20,
	0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20,
	0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27,
	0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x3a, 0x25, 0x25, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x20, 0x4c, 0x49, 0x4b, 0x45, 0x20,
	0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25, 0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65,
	0x79, 0x3a, 0x25, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e, 0x20, 0x27, 0x6b,
	0x65, 0x79, 0x20, 0x49, 0x4c, 0x49, 0x4b, 0x45, 0x20, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x25,
	0x27, 0x20, 0x0a, 0x20, 0x2d, 0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2e, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x31, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x20, 0x3d, 0x3e,
	0x20, 0x27, 0x6b, 0x65, 0x79, 0x31, 0x2d, 0x3e, 0x3e, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x27, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x2e, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08,
	0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x64, 0x66, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6c, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x63, 0x73,
	0x76, 0x10, 0x03, 0x22, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05,
	0x22, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x65, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x72, 0x10, 0x04, 0x22, 0x1e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_menu_payload_proto_rawDescOnce sync.Once
	file_menu_payload_proto_rawDescData = file_menu_payload_proto_rawDesc
)

func file_menu_payload_proto_rawDescGZIP() []byte {
	file_menu_payload_proto_rawDescOnce.Do(func() {
		file_menu_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_menu_payload_proto_rawDescData)
	})
	return file_menu_payload_proto_rawDescData
}

var file_menu_payload_proto_enumTypes = make([]protoimpl.EnumInfo, 21)
var file_menu_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_menu_payload_proto_goTypes = []interface{}{
	(ListMenuDataRequestDirection)(0),           // 0: menu.service.v1.ListMenuDataRequest.direction
	(ListMenuTaskRequestStatuses)(0),            // 1: menu.service.v1.ListMenuTaskRequest.statuses
	(ListMenuTaskRequestSteps)(0),               // 2: menu.service.v1.ListMenuTaskRequest.steps
	(ListMenuTaskRequestDirection)(0),           // 3: menu.service.v1.ListMenuTaskRequest.direction
	(GetListTaskMenuAppearanceReqStatuses)(0),   // 4: menu.service.v1.GetListTaskMenuAppearanceReq.statuses
	(GetListTaskMenuAppearanceReqSteps)(0),      // 5: menu.service.v1.GetListTaskMenuAppearanceReq.steps
	(GetListTaskMenuAppearanceReqDirection)(0),  // 6: menu.service.v1.GetListTaskMenuAppearanceReq.direction
	(GetMenuAppearanceReqDirection)(0),          // 7: menu.service.v1.GetMenuAppearanceReq.direction
	(GetMenuLicenseReqDirection)(0),             // 8: menu.service.v1.GetMenuLicenseReq.direction
	(GetListTaskMenuLicenseReqStatuses)(0),      // 9: menu.service.v1.GetListTaskMenuLicenseReq.statuses
	(GetListTaskMenuLicenseReqSteps)(0),         // 10: menu.service.v1.GetListTaskMenuLicenseReq.steps
	(GetListTaskMenuLicenseReqDirection)(0),     // 11: menu.service.v1.GetListTaskMenuLicenseReq.direction
	(GetMenuAppearanceDisableReqDirection)(0),   // 12: menu.service.v1.GetMenuAppearanceDisableReq.direction
	(FileMenuLicenseTaskRequest_Formats)(0),     // 13: menu.service.v1.FileMenuLicenseTaskRequest.Formats
	(FileMenuLicenseTaskRequestStatuses)(0),     // 14: menu.service.v1.FileMenuLicenseTaskRequest.statuses
	(FileMenuLicenseTaskRequestSteps)(0),        // 15: menu.service.v1.FileMenuLicenseTaskRequest.steps
	(FileMenuLicenseTaskRequestDirection)(0),    // 16: menu.service.v1.FileMenuLicenseTaskRequest.direction
	(FileMenuAppearanceTaskRequest_Formats)(0),  // 17: menu.service.v1.FileMenuAppearanceTaskRequest.Formats
	(FileMenuAppearanceTaskRequestStatuses)(0),  // 18: menu.service.v1.FileMenuAppearanceTaskRequest.statuses
	(FileMenuAppearanceTaskRequestSteps)(0),     // 19: menu.service.v1.FileMenuAppearanceTaskRequest.steps
	(FileMenuAppearanceTaskRequestDirection)(0), // 20: menu.service.v1.FileMenuAppearanceTaskRequest.direction
	(*LoginRequest)(nil),                        // 21: menu.service.v1.LoginRequest
	(*LoginResponse)(nil),                       // 22: menu.service.v1.LoginResponse
	(*HealthCheckResponse)(nil),                 // 23: menu.service.v1.HealthCheckResponse
	(*ArrayString)(nil),                         // 24: menu.service.v1.ArrayString
	(*Empty)(nil),                               // 25: menu.service.v1.Empty
	(*InvalidKeyError)(nil),                     // 26: menu.service.v1.InvalidKeyError
	(*JWTTokenResponse)(nil),                    // 27: menu.service.v1.JWTTokenResponse
	(*ErrorBodyResponse)(nil),                   // 28: menu.service.v1.errorBodyResponse
	(*CommonRequest)(nil),                       // 29: menu.service.v1.CommonRequest
	(*CommonResponse)(nil),                      // 30: menu.service.v1.CommonResponse
	(*ListMenuDataRequest)(nil),                 // 31: menu.service.v1.ListMenuDataRequest
	(*Sort)(nil),                                // 32: menu.service.v1.Sort
	(*CreateMenuRequest)(nil),                   // 33: menu.service.v1.CreateMenuRequest
	(*CreateMenuResponse)(nil),                  // 34: menu.service.v1.CreateMenuResponse
	(*CreateMenuTaskRequest)(nil),               // 35: menu.service.v1.CreateMenuTaskRequest
	(*MenuTaskResponse)(nil),                    // 36: menu.service.v1.MenuTaskResponse
	(*MenuWithTask)(nil),                        // 37: menu.service.v1.MenuWithTask
	(*ListMenuTaskResponse)(nil),                // 38: menu.service.v1.ListMenuTaskResponse
	(*ListMenuTaskRequest)(nil),                 // 39: menu.service.v1.ListMenuTaskRequest
	(*ListMenuRequest)(nil),                     // 40: menu.service.v1.ListMenuRequest
	(*ListMenuResponse)(nil),                    // 41: menu.service.v1.ListMenuResponse
	(*ListMenuActiveResponse)(nil),              // 42: menu.service.v1.ListMenuActiveResponse
	(*PaginationResponse)(nil),                  // 43: menu.service.v1.PaginationResponse
	(*UpdateMenuRequest)(nil),                   // 44: menu.service.v1.UpdateMenuRequest
	(*GetByTaskID)(nil),                         // 45: menu.service.v1.GetByTaskID
	(*ListModuleResponse)(nil),                  // 46: menu.service.v1.ListModuleResponse
	(*ListMenuDisableResponse)(nil),             // 47: menu.service.v1.ListMenuDisableResponse
	(*ListMenuLicenseResponse)(nil),             // 48: menu.service.v1.ListMenuLicenseResponse
	(*MenuAppearance)(nil),                      // 49: menu.service.v1.MenuAppearance
	(*Task)(nil),                                // 50: menu.service.v1.Task
	(*TaskDataMenuAppearance)(nil),              // 51: menu.service.v1.TaskDataMenuAppearance
	(*GetListTaskMenuAppearanceReq)(nil),        // 52: menu.service.v1.GetListTaskMenuAppearanceReq
	(*GetListTaskMenuAppearanceRes)(nil),        // 53: menu.service.v1.GetListTaskMenuAppearanceRes
	(*GetTaskMenuAppearanceReq)(nil),            // 54: menu.service.v1.GetTaskMenuAppearanceReq
	(*GetTaskMenuAppearanceRes)(nil),            // 55: menu.service.v1.GetTaskMenuAppearanceRes
	(*MenuParent)(nil),                          // 56: menu.service.v1.MenuParent
	(*MenuParentAppearance)(nil),                // 57: menu.service.v1.MenuParentAppearance
	(*SetTaskMenuAppearanceReq)(nil),            // 58: menu.service.v1.SetTaskMenuAppearanceReq
	(*SetTaskMenuAppearanceResData)(nil),        // 59: menu.service.v1.SetTaskMenuAppearanceResData
	(*SetTaskMenuAppearanceRes)(nil),            // 60: menu.service.v1.SetTaskMenuAppearanceRes
	(*SaveMenuAppearanceReq)(nil),               // 61: menu.service.v1.SaveMenuAppearanceReq
	(*BeforeSaveMenuAppearanceReq)(nil),         // 62: menu.service.v1.BeforeSaveMenuAppearanceReq
	(*SaveMenuAppearanceRes)(nil),               // 63: menu.service.v1.SaveMenuAppearanceRes
	(*GetMenuAppearanceReq)(nil),                // 64: menu.service.v1.GetMenuAppearanceReq
	(*GetMenuLicenseReq)(nil),                   // 65: menu.service.v1.GetMenuLicenseReq
	(*GetMenuAppearanceRes)(nil),                // 66: menu.service.v1.GetMenuAppearanceRes
	(*GetMyMenuReq)(nil),                        // 67: menu.service.v1.GetMyMenuReq
	(*GetMyMenuRes)(nil),                        // 68: menu.service.v1.GetMyMenuRes
	(*MenuLicenseWrite)(nil),                    // 69: menu.service.v1.MenuLicenseWrite
	(*GetMenuLicenseRes)(nil),                   // 70: menu.service.v1.GetMenuLicenseRes
	(*SetTaskMenuLicenseReq)(nil),               // 71: menu.service.v1.SetTaskMenuLicenseReq
	(*SetTaskMenuLicenseRes)(nil),               // 72: menu.service.v1.SetTaskMenuLicenseRes
	(*SetTaskMenuLicenseResData)(nil),           // 73: menu.service.v1.SetTaskMenuLicenseResData
	(*SaveMenuLicenseReq)(nil),                  // 74: menu.service.v1.SaveMenuLicenseReq
	(*MenuLicenseSave)(nil),                     // 75: menu.service.v1.MenuLicenseSave
	(*TempLimit)(nil),                           // 76: menu.service.v1.TempLimit
	(*SaveMenuLicenseRes)(nil),                  // 77: menu.service.v1.SaveMenuLicenseRes
	(*GetListTaskMenuLicenseReq)(nil),           // 78: menu.service.v1.GetListTaskMenuLicenseReq
	(*GetListTaskMenuLicenseRes)(nil),           // 79: menu.service.v1.GetListTaskMenuLicenseRes
	(*TaskDataMenuLicense)(nil),                 // 80: menu.service.v1.TaskDataMenuLicense
	(*GetTaskMenuLicenseReq)(nil),               // 81: menu.service.v1.GetTaskMenuLicenseReq
	(*GetTaskMenuLicenseRes)(nil),               // 82: menu.service.v1.GetTaskMenuLicenseRes
	(*GetMenuAppearanceDisableReq)(nil),         // 83: menu.service.v1.GetMenuAppearanceDisableReq
	(*GetMenuAppearanceDisableRes)(nil),         // 84: menu.service.v1.GetMenuAppearanceDisableRes
	(*FileMenuLicenseTaskRequest)(nil),          // 85: menu.service.v1.FileMenuLicenseTaskRequest
	(*FileMenuAppearanceTaskRequest)(nil),       // 86: menu.service.v1.FileMenuAppearanceTaskRequest
	(structpb.NullValue)(0),                     // 87: google.protobuf.NullValue
	(*Menu)(nil),                                // 88: menu.service.v1.Menu
	(*timestamppb.Timestamp)(nil),               // 89: google.protobuf.Timestamp
	(*Module)(nil),                              // 90: menu.service.v1.Module
	(*MenuDisable)(nil),                         // 91: menu.service.v1.MenuDisable
	(*MenuLicense)(nil),                         // 92: menu.service.v1.MenuLicense
	(*TempCompany)(nil),                         // 93: menu.service.v1.TempCompany
}
var file_menu_payload_proto_depIdxs = []int32{
	87, // 0: menu.service.v1.errorBodyResponse.data:type_name -> google.protobuf.NullValue
	88, // 1: menu.service.v1.ListMenuDataRequest.menu:type_name -> menu.service.v1.Menu
	0,  // 2: menu.service.v1.ListMenuDataRequest.dir:type_name -> menu.service.v1.ListMenuDataRequest.direction
	88, // 3: menu.service.v1.CreateMenuRequest.data:type_name -> menu.service.v1.Menu
	88, // 4: menu.service.v1.CreateMenuResponse.data:type_name -> menu.service.v1.Menu
	88, // 5: menu.service.v1.CreateMenuTaskRequest.data:type_name -> menu.service.v1.Menu
	89, // 6: menu.service.v1.MenuTaskResponse.createdAt:type_name -> google.protobuf.Timestamp
	89, // 7: menu.service.v1.MenuTaskResponse.updatedAt:type_name -> google.protobuf.Timestamp
	88, // 8: menu.service.v1.MenuWithTask.menu:type_name -> menu.service.v1.Menu
	36, // 9: menu.service.v1.MenuWithTask.task:type_name -> menu.service.v1.MenuTaskResponse
	37, // 10: menu.service.v1.ListMenuTaskResponse.data:type_name -> menu.service.v1.MenuWithTask
	1,  // 11: menu.service.v1.ListMenuTaskRequest.status:type_name -> menu.service.v1.ListMenuTaskRequest.statuses
	2,  // 12: menu.service.v1.ListMenuTaskRequest.step:type_name -> menu.service.v1.ListMenuTaskRequest.steps
	3,  // 13: menu.service.v1.ListMenuTaskRequest.dir:type_name -> menu.service.v1.ListMenuTaskRequest.direction
	43, // 14: menu.service.v1.ListMenuResponse.pagination:type_name -> menu.service.v1.PaginationResponse
	37, // 15: menu.service.v1.ListMenuResponse.data:type_name -> menu.service.v1.MenuWithTask
	88, // 16: menu.service.v1.ListMenuActiveResponse.data:type_name -> menu.service.v1.Menu
	43, // 17: menu.service.v1.ListMenuActiveResponse.pagination:type_name -> menu.service.v1.PaginationResponse
	90, // 18: menu.service.v1.ListModuleResponse.data:type_name -> menu.service.v1.Module
	91, // 19: menu.service.v1.ListMenuDisableResponse.data:type_name -> menu.service.v1.MenuDisable
	92, // 20: menu.service.v1.ListMenuLicenseResponse.data:type_name -> menu.service.v1.MenuLicense
	91, // 21: menu.service.v1.MenuAppearance.disables:type_name -> menu.service.v1.MenuDisable
	89, // 22: menu.service.v1.Task.createdAt:type_name -> google.protobuf.Timestamp
	89, // 23: menu.service.v1.Task.updatedAt:type_name -> google.protobuf.Timestamp
	49, // 24: menu.service.v1.TaskDataMenuAppearance.menus:type_name -> menu.service.v1.MenuAppearance
	50, // 25: menu.service.v1.TaskDataMenuAppearance.task:type_name -> menu.service.v1.Task
	57, // 26: menu.service.v1.TaskDataMenuAppearance.detail:type_name -> menu.service.v1.MenuParentAppearance
	4,  // 27: menu.service.v1.GetListTaskMenuAppearanceReq.status:type_name -> menu.service.v1.GetListTaskMenuAppearanceReq.statuses
	5,  // 28: menu.service.v1.GetListTaskMenuAppearanceReq.step:type_name -> menu.service.v1.GetListTaskMenuAppearanceReq.steps
	6,  // 29: menu.service.v1.GetListTaskMenuAppearanceReq.dir:type_name -> menu.service.v1.GetListTaskMenuAppearanceReq.direction
	51, // 30: menu.service.v1.GetListTaskMenuAppearanceRes.data:type_name -> menu.service.v1.TaskDataMenuAppearance
	43, // 31: menu.service.v1.GetListTaskMenuAppearanceRes.pagination:type_name -> menu.service.v1.PaginationResponse
	51, // 32: menu.service.v1.GetTaskMenuAppearanceRes.data:type_name -> menu.service.v1.TaskDataMenuAppearance
	49, // 33: menu.service.v1.SetTaskMenuAppearanceReq.data:type_name -> menu.service.v1.MenuAppearance
	59, // 34: menu.service.v1.SetTaskMenuAppearanceRes.data:type_name -> menu.service.v1.SetTaskMenuAppearanceResData
	49, // 35: menu.service.v1.SaveMenuAppearanceReq.data:type_name -> menu.service.v1.MenuAppearance
	88, // 36: menu.service.v1.SaveMenuAppearanceRes.data:type_name -> menu.service.v1.Menu
	7,  // 37: menu.service.v1.GetMenuAppearanceReq.dir:type_name -> menu.service.v1.GetMenuAppearanceReq.direction
	8,  // 38: menu.service.v1.GetMenuLicenseReq.dir:type_name -> menu.service.v1.GetMenuLicenseReq.direction
	88, // 39: menu.service.v1.GetMenuAppearanceRes.data:type_name -> menu.service.v1.Menu
	43, // 40: menu.service.v1.GetMenuAppearanceRes.pagination:type_name -> menu.service.v1.PaginationResponse
	88, // 41: menu.service.v1.GetMyMenuRes.data:type_name -> menu.service.v1.Menu
	76, // 42: menu.service.v1.MenuLicenseWrite.transactionLimit:type_name -> menu.service.v1.TempLimit
	93, // 43: menu.service.v1.MenuLicenseWrite.Company:type_name -> menu.service.v1.TempCompany
	89, // 44: menu.service.v1.MenuLicenseWrite.chargeDate:type_name -> google.protobuf.Timestamp
	89, // 45: menu.service.v1.MenuLicenseWrite.createdAt:type_name -> google.protobuf.Timestamp
	89, // 46: menu.service.v1.MenuLicenseWrite.updatedAt:type_name -> google.protobuf.Timestamp
	69, // 47: menu.service.v1.GetMenuLicenseRes.data:type_name -> menu.service.v1.MenuLicenseWrite
	43, // 48: menu.service.v1.GetMenuLicenseRes.pagination:type_name -> menu.service.v1.PaginationResponse
	69, // 49: menu.service.v1.SetTaskMenuLicenseReq.data:type_name -> menu.service.v1.MenuLicenseWrite
	73, // 50: menu.service.v1.SetTaskMenuLicenseRes.data:type_name -> menu.service.v1.SetTaskMenuLicenseResData
	75, // 51: menu.service.v1.SaveMenuLicenseReq.data:type_name -> menu.service.v1.MenuLicenseSave
	76, // 52: menu.service.v1.MenuLicenseSave.transactionLimit:type_name -> menu.service.v1.TempLimit
	93, // 53: menu.service.v1.MenuLicenseSave.Company:type_name -> menu.service.v1.TempCompany
	89, // 54: menu.service.v1.MenuLicenseSave.chargeDate:type_name -> google.protobuf.Timestamp
	89, // 55: menu.service.v1.MenuLicenseSave.createdAt:type_name -> google.protobuf.Timestamp
	89, // 56: menu.service.v1.MenuLicenseSave.updatedAt:type_name -> google.protobuf.Timestamp
	92, // 57: menu.service.v1.SaveMenuLicenseRes.data:type_name -> menu.service.v1.MenuLicense
	9,  // 58: menu.service.v1.GetListTaskMenuLicenseReq.status:type_name -> menu.service.v1.GetListTaskMenuLicenseReq.statuses
	10, // 59: menu.service.v1.GetListTaskMenuLicenseReq.step:type_name -> menu.service.v1.GetListTaskMenuLicenseReq.steps
	11, // 60: menu.service.v1.GetListTaskMenuLicenseReq.dir:type_name -> menu.service.v1.GetListTaskMenuLicenseReq.direction
	80, // 61: menu.service.v1.GetListTaskMenuLicenseRes.data:type_name -> menu.service.v1.TaskDataMenuLicense
	43, // 62: menu.service.v1.GetListTaskMenuLicenseRes.pagination:type_name -> menu.service.v1.PaginationResponse
	69, // 63: menu.service.v1.TaskDataMenuLicense.menus:type_name -> menu.service.v1.MenuLicenseWrite
	50, // 64: menu.service.v1.TaskDataMenuLicense.task:type_name -> menu.service.v1.Task
	56, // 65: menu.service.v1.TaskDataMenuLicense.detail:type_name -> menu.service.v1.MenuParent
	69, // 66: menu.service.v1.TaskDataMenuLicense.hidedMenus:type_name -> menu.service.v1.MenuLicenseWrite
	80, // 67: menu.service.v1.GetTaskMenuLicenseRes.data:type_name -> menu.service.v1.TaskDataMenuLicense
	12, // 68: menu.service.v1.GetMenuAppearanceDisableReq.dir:type_name -> menu.service.v1.GetMenuAppearanceDisableReq.direction
	91, // 69: menu.service.v1.GetMenuAppearanceDisableRes.data:type_name -> menu.service.v1.MenuDisable
	43, // 70: menu.service.v1.GetMenuAppearanceDisableRes.pagination:type_name -> menu.service.v1.PaginationResponse
	13, // 71: menu.service.v1.FileMenuLicenseTaskRequest.fileFormat:type_name -> menu.service.v1.FileMenuLicenseTaskRequest.Formats
	14, // 72: menu.service.v1.FileMenuLicenseTaskRequest.status:type_name -> menu.service.v1.FileMenuLicenseTaskRequest.statuses
	15, // 73: menu.service.v1.FileMenuLicenseTaskRequest.step:type_name -> menu.service.v1.FileMenuLicenseTaskRequest.steps
	16, // 74: menu.service.v1.FileMenuLicenseTaskRequest.dir:type_name -> menu.service.v1.FileMenuLicenseTaskRequest.direction
	17, // 75: menu.service.v1.FileMenuAppearanceTaskRequest.fileFormat:type_name -> menu.service.v1.FileMenuAppearanceTaskRequest.Formats
	18, // 76: menu.service.v1.FileMenuAppearanceTaskRequest.status:type_name -> menu.service.v1.FileMenuAppearanceTaskRequest.statuses
	19, // 77: menu.service.v1.FileMenuAppearanceTaskRequest.step:type_name -> menu.service.v1.FileMenuAppearanceTaskRequest.steps
	20, // 78: menu.service.v1.FileMenuAppearanceTaskRequest.dir:type_name -> menu.service.v1.FileMenuAppearanceTaskRequest.direction
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_menu_payload_proto_init() }
func file_menu_payload_proto_init() {
	if File_menu_payload_proto != nil {
		return
	}
	file_menu_gorm_db_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_menu_payload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorBodyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuWithTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByTaskID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuDisableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuAppearance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDataMenuAppearance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTaskMenuAppearanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTaskMenuAppearanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskMenuAppearanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskMenuAppearanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuParentAppearance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskMenuAppearanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskMenuAppearanceResData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskMenuAppearanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMenuAppearanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeforeSaveMenuAppearanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMenuAppearanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuAppearanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuAppearanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyMenuRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuLicenseWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuLicenseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskMenuLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskMenuLicenseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaskMenuLicenseResData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMenuLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuLicenseSave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMenuLicenseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTaskMenuLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTaskMenuLicenseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDataMenuLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskMenuLicenseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskMenuLicenseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuAppearanceDisableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuAppearanceDisableRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMenuLicenseTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_payload_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMenuAppearanceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_menu_payload_proto_rawDesc,
			NumEnums:      21,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_menu_payload_proto_goTypes,
		DependencyIndexes: file_menu_payload_proto_depIdxs,
		EnumInfos:         file_menu_payload_proto_enumTypes,
		MessageInfos:      file_menu_payload_proto_msgTypes,
	}.Build()
	File_menu_payload_proto = out.File
	file_menu_payload_proto_rawDesc = nil
	file_menu_payload_proto_goTypes = nil
	file_menu_payload_proto_depIdxs = nil
}
