// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: payload.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *PaginationResponse) Validate() error {
	return nil
}
func (this *ListTransactionRequest) Validate() error {
	if this.Transaction != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Transaction); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Transaction", err)
		}
	}
	return nil
}
func (this *ListTransactionRequest_Filter) Validate() error {
	return nil
}
func (this *ListTransactionResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *ListTransactionSchedulerRes) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ExecSchedulerReq) Validate() error {
	return nil
}
func (this *ExecUnsettledSchedulerReq) Validate() error {
	return nil
}
func (this *CommonResponse) Validate() error {
	return nil
}
func (this *TransactionKeyMessage) Validate() error {
	return nil
}
func (this *DetailTransactionResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *Feature) Validate() error {
	return nil
}
func (this *ScheduleOption) Validate() error {
	return nil
}
func (this *RetryOption) Validate() error {
	return nil
}
func (this *Debit) Validate() error {
	return nil
}
func (this *Credit) Validate() error {
	return nil
}
func (this *TransactionMessage) Validate() error {
	if this.Feature != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Feature); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Feature", err)
		}
	}
	if this.Schedule != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Schedule); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Schedule", err)
		}
	}
	if this.Retry != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Retry); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Retry", err)
		}
	}
	if this.Debit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Debit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Debit", err)
		}
	}
	if this.Credit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Credit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Credit", err)
		}
	}
	return nil
}
func (this *EditTransactionReq) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *LimitSummaryMessage) Validate() error {
	return nil
}
func (this *LimitSummaryRequest) Validate() error {
	return nil
}
func (this *LimitSummaries) Validate() error {
	if this.DailyCompanyLimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DailyCompanyLimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DailyCompanyLimit", err)
		}
	}
	if this.DailyCompanyGrouplimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.DailyCompanyGrouplimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("DailyCompanyGrouplimit", err)
		}
	}
	if this.HoldingCompanyLimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.HoldingCompanyLimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("HoldingCompanyLimit", err)
		}
	}
	if this.WorkflowLimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WorkflowLimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WorkflowLimit", err)
		}
	}
	if this.TransactionLimit != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TransactionLimit); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TransactionLimit", err)
		}
	}
	return nil
}
func (this *LimitSummaryResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *ModuleLimitRequest) Validate() error {
	return nil
}
func (this *TransactionLimitRequest) Validate() error {
	return nil
}
func (this *TransactionLimit) Validate() error {
	for _, item := range this.Modules {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Modules", err)
			}
		}
	}
	return nil
}
func (this *TransactionLimitResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	if this.Pagination != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Pagination); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Pagination", err)
		}
	}
	return nil
}
func (this *ModuleLimitResponse) Validate() error {
	for _, item := range this.Data {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
			}
		}
	}
	return nil
}
func (this *ModuleLimit) Validate() error {
	for _, item := range this.Limit {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Limit", err)
			}
		}
	}
	return nil
}
func (this *TempLimit) Validate() error {
	return nil
}
func (this *CreateTransactionResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *HostToHostConfigMessage) Validate() error {
	return nil
}
func (this *DetailHostToHostConfigResp) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *HostToHostConfigKeyMessage) Validate() error {
	return nil
}
func (this *EditHostToHostConfigReq) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *BRIGateHardTokenValidationRequest) Validate() error {
	return nil
}
func (this *BRIGateHardTokenValidation) Validate() error {
	return nil
}
func (this *BRIGateHardTokenValidationResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *BRIGateGetPairRateRequest) Validate() error {
	return nil
}
func (this *BRIGateGetPairRateResponse) Validate() error {
	if this.Data != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Data); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Data", err)
		}
	}
	return nil
}
func (this *Rate) Validate() error {
	return nil
}
