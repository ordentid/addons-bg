// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.2
// source: master_data.proto

package pb

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MdBankKliring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	KodeInduk     string `protobuf:"bytes,3,opt,name=kodeInduk,proto3" json:"kodeInduk,omitempty"`
	EntityId      string `protobuf:"bytes,4,opt,name=entityId,proto3" json:"entityId,omitempty"`
	Nama          string `protobuf:"bytes,5,opt,name=nama,proto3" json:"nama,omitempty"`
	Address1      string `protobuf:"bytes,6,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2      string `protobuf:"bytes,7,opt,name=address2,proto3" json:"address2,omitempty"`
	Address3      string `protobuf:"bytes,8,opt,name=address3,proto3" json:"address3,omitempty"`
	BankCode      string `protobuf:"bytes,9,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	SandiKota     string `protobuf:"bytes,10,opt,name=sandiKota,proto3" json:"sandiKota,omitempty"`
	SandiPropinsi string `protobuf:"bytes,11,opt,name=sandiPropinsi,proto3" json:"sandiPropinsi,omitempty"`
	LastUpdate    string `protobuf:"bytes,12,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	JenisUsaha    string `protobuf:"bytes,13,opt,name=jenisUsaha,proto3" json:"jenisUsaha,omitempty"`
}

func (x *MdBankKliring) Reset() {
	*x = MdBankKliring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdBankKliring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdBankKliring) ProtoMessage() {}

func (x *MdBankKliring) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdBankKliring.ProtoReflect.Descriptor instead.
func (*MdBankKliring) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{0}
}

func (x *MdBankKliring) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MdBankKliring) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MdBankKliring) GetKodeInduk() string {
	if x != nil {
		return x.KodeInduk
	}
	return ""
}

func (x *MdBankKliring) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *MdBankKliring) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *MdBankKliring) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *MdBankKliring) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *MdBankKliring) GetAddress3() string {
	if x != nil {
		return x.Address3
	}
	return ""
}

func (x *MdBankKliring) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *MdBankKliring) GetSandiKota() string {
	if x != nil {
		return x.SandiKota
	}
	return ""
}

func (x *MdBankKliring) GetSandiPropinsi() string {
	if x != nil {
		return x.SandiPropinsi
	}
	return ""
}

func (x *MdBankKliring) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *MdBankKliring) GetJenisUsaha() string {
	if x != nil {
		return x.JenisUsaha
	}
	return ""
}

type MdBiccc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bic         string `protobuf:"bytes,1,opt,name=bic,proto3" json:"bic,omitempty"`
	Institution string `protobuf:"bytes,2,opt,name=institution,proto3" json:"institution,omitempty"`
	Country     string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	City        string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Location    string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Address1    string `protobuf:"bytes,7,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2    string `protobuf:"bytes,8,opt,name=address2,proto3" json:"address2,omitempty"`
	Address3    string `protobuf:"bytes,9,opt,name=address3,proto3" json:"address3,omitempty"`
	Countrycode string `protobuf:"bytes,10,opt,name=countrycode,proto3" json:"countrycode,omitempty"`
	GpiMember   int32  `protobuf:"varint,11,opt,name=gpiMember,proto3" json:"gpiMember,omitempty"`
}

func (x *MdBiccc) Reset() {
	*x = MdBiccc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdBiccc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdBiccc) ProtoMessage() {}

func (x *MdBiccc) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdBiccc.ProtoReflect.Descriptor instead.
func (*MdBiccc) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{1}
}

func (x *MdBiccc) GetBic() string {
	if x != nil {
		return x.Bic
	}
	return ""
}

func (x *MdBiccc) GetInstitution() string {
	if x != nil {
		return x.Institution
	}
	return ""
}

func (x *MdBiccc) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *MdBiccc) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *MdBiccc) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MdBiccc) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *MdBiccc) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *MdBiccc) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *MdBiccc) GetAddress3() string {
	if x != nil {
		return x.Address3
	}
	return ""
}

func (x *MdBiccc) GetCountrycode() string {
	if x != nil {
		return x.Countrycode
	}
	return ""
}

func (x *MdBiccc) GetGpiMember() int32 {
	if x != nil {
		return x.GpiMember
	}
	return 0
}

type MdBenefType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdBenefType) Reset() {
	*x = MdBenefType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdBenefType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdBenefType) ProtoMessage() {}

func (x *MdBenefType) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdBenefType.ProtoReflect.Descriptor instead.
func (*MdBenefType) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{2}
}

func (x *MdBenefType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdBenefType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdBenefType) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdCountry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdCountry    uint64 `protobuf:"varint,1,opt,name=idCountry,proto3" json:"idCountry,omitempty"`
	CountryCode  string `protobuf:"bytes,2,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	CountryCode3 string `protobuf:"bytes,3,opt,name=countryCode3,proto3" json:"countryCode3,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	PhoneCode    string `protobuf:"bytes,5,opt,name=phoneCode,proto3" json:"phoneCode,omitempty"`
	CurrencyCode string `protobuf:"bytes,6,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	CurrencyName string `protobuf:"bytes,7,opt,name=currencyName,proto3" json:"currencyName,omitempty"`
}

func (x *MdCountry) Reset() {
	*x = MdCountry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdCountry) ProtoMessage() {}

func (x *MdCountry) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdCountry.ProtoReflect.Descriptor instead.
func (*MdCountry) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{3}
}

func (x *MdCountry) GetIdCountry() uint64 {
	if x != nil {
		return x.IdCountry
	}
	return 0
}

func (x *MdCountry) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *MdCountry) GetCountryCode3() string {
	if x != nil {
		return x.CountryCode3
	}
	return ""
}

func (x *MdCountry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdCountry) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *MdCountry) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *MdCountry) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

type MdEmploymentIndustry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdEmploymentIndustry) Reset() {
	*x = MdEmploymentIndustry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdEmploymentIndustry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdEmploymentIndustry) ProtoMessage() {}

func (x *MdEmploymentIndustry) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdEmploymentIndustry.ProtoReflect.Descriptor instead.
func (*MdEmploymentIndustry) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{4}
}

func (x *MdEmploymentIndustry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdEmploymentIndustry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdEmploymentIndustry) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdEmploymentPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdEmploymentPosition) Reset() {
	*x = MdEmploymentPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdEmploymentPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdEmploymentPosition) ProtoMessage() {}

func (x *MdEmploymentPosition) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdEmploymentPosition.ProtoReflect.Descriptor instead.
func (*MdEmploymentPosition) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{5}
}

func (x *MdEmploymentPosition) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdEmploymentPosition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdEmploymentPosition) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdEmploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdEmploymentStatus) Reset() {
	*x = MdEmploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdEmploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdEmploymentStatus) ProtoMessage() {}

func (x *MdEmploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdEmploymentStatus.ProtoReflect.Descriptor instead.
func (*MdEmploymentStatus) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{6}
}

func (x *MdEmploymentStatus) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdEmploymentStatus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdEmploymentStatus) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdGender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdGender) Reset() {
	*x = MdGender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdGender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdGender) ProtoMessage() {}

func (x *MdGender) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdGender.ProtoReflect.Descriptor instead.
func (*MdGender) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{7}
}

func (x *MdGender) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdGender) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdGender) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdIdType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdIdType) Reset() {
	*x = MdIdType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdIdType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdIdType) ProtoMessage() {}

func (x *MdIdType) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdIdType.ProtoReflect.Descriptor instead.
func (*MdIdType) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{8}
}

func (x *MdIdType) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdIdType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdIdType) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdKota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProvinceCode uint64 `protobuf:"varint,3,opt,name=provinceCode,proto3" json:"provinceCode,omitempty"`
}

func (x *MdKota) Reset() {
	*x = MdKota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdKota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdKota) ProtoMessage() {}

func (x *MdKota) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdKota.ProtoReflect.Descriptor instead.
func (*MdKota) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{9}
}

func (x *MdKota) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdKota) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MdKota) GetProvinceCode() uint64 {
	if x != nil {
		return x.ProvinceCode
	}
	return 0
}

type MdProvince struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CountryCode uint64 `protobuf:"varint,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
}

func (x *MdProvince) Reset() {
	*x = MdProvince{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdProvince) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdProvince) ProtoMessage() {}

func (x *MdProvince) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdProvince.ProtoReflect.Descriptor instead.
func (*MdProvince) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{10}
}

func (x *MdProvince) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdProvince) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MdProvince) GetCountryCode() uint64 {
	if x != nil {
		return x.CountryCode
	}
	return 0
}

type MdPurpose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdPurpose) Reset() {
	*x = MdPurpose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdPurpose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdPurpose) ProtoMessage() {}

func (x *MdPurpose) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdPurpose.ProtoReflect.Descriptor instead.
func (*MdPurpose) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{11}
}

func (x *MdPurpose) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdPurpose) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdPurpose) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdPurposeIntended struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdPurposeIntended) Reset() {
	*x = MdPurposeIntended{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdPurposeIntended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdPurposeIntended) ProtoMessage() {}

func (x *MdPurposeIntended) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdPurposeIntended.ProtoReflect.Descriptor instead.
func (*MdPurposeIntended) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{12}
}

func (x *MdPurposeIntended) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdPurposeIntended) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdPurposeIntended) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdRelationToSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Translate   string `protobuf:"bytes,3,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *MdRelationToSender) Reset() {
	*x = MdRelationToSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdRelationToSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdRelationToSender) ProtoMessage() {}

func (x *MdRelationToSender) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdRelationToSender.ProtoReflect.Descriptor instead.
func (*MdRelationToSender) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{13}
}

func (x *MdRelationToSender) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdRelationToSender) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MdRelationToSender) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

type MdBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *MdBranch) Reset() {
	*x = MdBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdBranch) ProtoMessage() {}

func (x *MdBranch) ProtoReflect() protoreflect.Message {
	mi := &file_master_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdBranch.ProtoReflect.Descriptor instead.
func (*MdBranch) Descriptor() ([]byte, []int) {
	return file_master_data_proto_rawDescGZIP(), []int{14}
}

func (x *MdBranch) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdBranch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MdBranch) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

var File_master_data_proto protoreflect.FileDescriptor

var file_master_data_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x04, 0x0a, 0x0d,
	0x4d, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x4b, 0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a,
	0x08, 0x0a, 0x02, 0x49, 0x44, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xb9, 0x19,
	0x08, 0x0a, 0x06, 0x0a, 0x04, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x2f, 0x0a, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x4b, 0x4f, 0x44, 0x45,
	0x49, 0x4e, 0x44, 0x55, 0x4b, 0x52, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x75, 0x6b,
	0x12, 0x2c, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x49, 0x44, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xb9,
	0x19, 0x08, 0x0a, 0x06, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x41, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x12, 0x2c, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x52,
	0x45, 0x53, 0x53, 0x31, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x2c,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x32, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x2c, 0x0a, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x33,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0xb9,
	0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x42, 0x41, 0x4e, 0x4b, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x61, 0x6e, 0x64,
	0x69, 0x4b, 0x6f, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19,
	0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x53, 0x41, 0x4e, 0x44, 0x49, 0x4b, 0x4f, 0x54, 0x41, 0x52, 0x09,
	0x73, 0x61, 0x6e, 0x64, 0x69, 0x4b, 0x6f, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x61, 0x6e,
	0x64, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f, 0x0a, 0x0d, 0x53, 0x41, 0x4e, 0x44, 0x49, 0x50,
	0x52, 0x4f, 0x50, 0x49, 0x4e, 0x53, 0x49, 0x52, 0x0d, 0x73, 0x61, 0x6e, 0x64, 0x69, 0x50, 0x72,
	0x6f, 0x70, 0x69, 0x6e, 0x73, 0x69, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e,
	0x0a, 0x0c, 0x0a, 0x0a, 0x4c, 0x41, 0x53, 0x54, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x6a, 0x65,
	0x6e, 0x69, 0x73, 0x55, 0x73, 0x61, 0x68, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12,
	0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x4a, 0x45, 0x4e, 0x49, 0x53, 0x55, 0x53, 0x41,
	0x48, 0x41, 0x52, 0x0a, 0x6a, 0x65, 0x6e, 0x69, 0x73, 0x55, 0x73, 0x61, 0x68, 0x61, 0x3a, 0x16,
	0xba, 0xb9, 0x19, 0x12, 0x08, 0x01, 0x1a, 0x0e, 0x6d, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x6b,
	0x6c, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x8c, 0x04, 0x0a, 0x07, 0x4d, 0x64, 0x42, 0x69, 0x63,
	0x63, 0x63, 0x12, 0x1c, 0x0a, 0x03, 0x62, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28, 0x01, 0x40, 0x01, 0x52, 0x03, 0x62, 0x69, 0x63,
	0x12, 0x35, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xba, 0xb9, 0x19, 0x08, 0x0a, 0x06, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xba, 0xb9, 0x19, 0x0b, 0x0a, 0x09, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x0a, 0x08, 0x4c, 0x4f, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x31, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x2d, 0x0a, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x32, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x2d, 0x0a, 0x08, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba,
	0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x33,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x30, 0x0a, 0x09, 0x67, 0x70, 0x69, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x67, 0x70,
	0x69, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x09, 0x67, 0x70, 0x69, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x3a, 0x10, 0xba, 0xb9, 0x19, 0x0c, 0x08, 0x01, 0x1a, 0x08, 0x6d, 0x64, 0x5f,
	0x62, 0x69, 0x63, 0x63, 0x63, 0x22, 0xac, 0x01, 0x0a, 0x0b, 0x4d, 0x64, 0x42, 0x65, 0x6e, 0x65,
	0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f,
	0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41,
	0x54, 0x45, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x15, 0xba,
	0xb9, 0x19, 0x11, 0x08, 0x01, 0x1a, 0x0d, 0x6d, 0x64, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x09, 0x4d, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x16, 0xba, 0xb9, 0x19, 0x12, 0x0a, 0x10, 0x0a, 0x0a, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x28, 0x01, 0x40, 0x01, 0x52, 0x09, 0x69,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xba,
	0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x33,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f, 0x0a, 0x0d,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x33, 0x52, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x33, 0x12, 0x35, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x0a, 0x0c, 0x0a, 0x0a, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d,
	0x0a, 0x0b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x3a, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x08, 0x01, 0x1a, 0x0a, 0x6d, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x4d, 0x64, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19,
	0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a,
	0x0b, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x1e, 0xba, 0xb9, 0x19, 0x1a, 0x08, 0x01, 0x1a,
	0x16, 0x6d, 0x64, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x4d, 0x64, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9,
	0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d,
	0x0a, 0x0b, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x1e, 0xba, 0xb9, 0x19, 0x1a, 0x08, 0x01,
	0x1a, 0x16, 0x6d, 0x64, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x12, 0x4d, 0x64, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19,
	0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a,
	0x0b, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x1c, 0xba, 0xb9, 0x19, 0x18, 0x08, 0x01, 0x1a,
	0x14, 0x6d, 0x64, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x08, 0x4d, 0x64, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e,
	0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9,
	0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x11, 0xba, 0xb9, 0x19, 0x0d,
	0x08, 0x01, 0x1a, 0x09, 0x6d, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xa5, 0x01,
	0x0a, 0x08, 0x4d, 0x64, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02,
	0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x3a, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x08, 0x01, 0x1a, 0x09, 0x6d, 0x64, 0x5f, 0x69,
	0x64, 0x74, 0x79, 0x70, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x4d, 0x64, 0x4b, 0x6f, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9,
	0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xba, 0xb9, 0x19, 0x08, 0x0a, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x0f, 0xba,
	0xb9, 0x19, 0x0b, 0x08, 0x01, 0x1a, 0x07, 0x6d, 0x64, 0x5f, 0x6b, 0x6f, 0x74, 0x61, 0x22, 0x9b,
	0x01, 0x0a, 0x0a, 0x4d, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a,
	0x08, 0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xba, 0xb9, 0x19,
	0x08, 0x0a, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xba, 0xb9, 0x19, 0x10, 0x0a, 0x0e, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x08, 0x01, 0x1a,
	0x0b, 0x6d, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x09, 0x4d, 0x64, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02,
	0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x3a, 0x12, 0xba, 0xb9, 0x19, 0x0e, 0x08, 0x01, 0x1a, 0x0a, 0x6d, 0x64, 0x5f, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x11, 0x4d, 0x64, 0x50, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08,
	0x0a, 0x02, 0x69, 0x64, 0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x3a, 0x1b, 0xba, 0xb9, 0x19, 0x17, 0x08, 0x01, 0x1a, 0x13, 0x6d, 0x64,
	0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x4d, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08, 0x0a, 0x02, 0x69, 0x64,
	0x28, 0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xba,
	0xb9, 0x19, 0x0f, 0x0a, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0xba, 0xb9, 0x19, 0x0d, 0x0a, 0x0b, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65,
	0x3a, 0x1d, 0xba, 0xb9, 0x19, 0x19, 0x08, 0x01, 0x1a, 0x15, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22,
	0x79, 0x0a, 0x08, 0x4d, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xba, 0xb9, 0x19, 0x06, 0x0a, 0x04, 0x28,
	0x01, 0x40, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x40, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x40, 0x01, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x13, 0xba, 0xb9, 0x19, 0x0f, 0x08, 0x01, 0x1a, 0x0b, 0x6d,
	0x64, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_master_data_proto_rawDescOnce sync.Once
	file_master_data_proto_rawDescData = file_master_data_proto_rawDesc
)

func file_master_data_proto_rawDescGZIP() []byte {
	file_master_data_proto_rawDescOnce.Do(func() {
		file_master_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_master_data_proto_rawDescData)
	})
	return file_master_data_proto_rawDescData
}

var file_master_data_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_master_data_proto_goTypes = []interface{}{
	(*MdBankKliring)(nil),        // 0: system.service.v1.MdBankKliring
	(*MdBiccc)(nil),              // 1: system.service.v1.MdBiccc
	(*MdBenefType)(nil),          // 2: system.service.v1.MdBenefType
	(*MdCountry)(nil),            // 3: system.service.v1.MdCountry
	(*MdEmploymentIndustry)(nil), // 4: system.service.v1.MdEmploymentIndustry
	(*MdEmploymentPosition)(nil), // 5: system.service.v1.MdEmploymentPosition
	(*MdEmploymentStatus)(nil),   // 6: system.service.v1.MdEmploymentStatus
	(*MdGender)(nil),             // 7: system.service.v1.MdGender
	(*MdIdType)(nil),             // 8: system.service.v1.MdIdType
	(*MdKota)(nil),               // 9: system.service.v1.MdKota
	(*MdProvince)(nil),           // 10: system.service.v1.MdProvince
	(*MdPurpose)(nil),            // 11: system.service.v1.MdPurpose
	(*MdPurposeIntended)(nil),    // 12: system.service.v1.MdPurposeIntended
	(*MdRelationToSender)(nil),   // 13: system.service.v1.MdRelationToSender
	(*MdBranch)(nil),             // 14: system.service.v1.MdBranch
}
var file_master_data_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_master_data_proto_init() }
func file_master_data_proto_init() {
	if File_master_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_master_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdBankKliring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdBiccc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdBenefType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdCountry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdEmploymentIndustry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdEmploymentPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdEmploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdGender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdIdType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdKota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdProvince); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdPurpose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdPurposeIntended); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdRelationToSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_master_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_master_data_proto_goTypes,
		DependencyIndexes: file_master_data_proto_depIdxs,
		MessageInfos:      file_master_data_proto_msgTypes,
	}.Build()
	File_master_data_proto = out.File
	file_master_data_proto_rawDesc = nil
	file_master_data_proto_goTypes = nil
	file_master_data_proto_depIdxs = nil
}
