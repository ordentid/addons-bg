{
  "swagger": "2.0",
  "info": {
    "title": "bg_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ApiService"
    }
  ],
  "schemes": [
    "HTTP",
    "HTTPS",
    "WS",
    "WSS"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/bg/health": {
      "get": {
        "summary": "Health Check",
        "description": "This API for check health server",
        "operationId": "ApiService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ApiService"
        ],
        "security": []
      }
    },
    "/api/bg/transaction": {
      "get": {
        "summary": "Transaction List",
        "description": "This API for transaction list",
        "operationId": "ApiService_GetTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transaction.id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.transactionID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.thirdPartyID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.referenceNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.applicantName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.beneficiaryName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.issueDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transaction.effectiveDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transaction.expiryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transaction.claimPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.closingDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transaction.currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.amount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "transaction.remark",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.transactionStatus",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.channelID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.channelName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.transactionTypeID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.documentPath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.companyID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transaction.isAllowBeneficiary",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transaction.createdByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.updatedByID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "transaction.createdAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "transaction.updatedAt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "Limit data per page. Default value '-1' for disable limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "Page number to get data. Default value '-1' for disable page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Order data by column name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dir",
            "description": "Sort DirectionEnum should be ASC or DESC",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "default": "DESC"
          },
          {
            "name": "filter",
            "description": "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement =\u003e Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key:\u003e=value' =\u003e 'key \u003e= value' \n - 'key:\u003c=value' =\u003e 'key \u003c= value' \n - 'key1:\u003e=value1,key2:\u003c=value2' =\u003e 'key1 \u003e= value1 AND key2 \u003c= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement =\u003e Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' =\u003e 'key = value' \n - 'key:%%value' =\u003e 'key LIKE %value%' \n - 'key:%!value' =\u003e 'key ILIKE %value%' \n - 'key1.nestedKey1:value' =\u003e 'key1-\u003e\u003enestedKey1 = value'",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ],
        "security": []
      },
      "post": {
        "summary": "Create Transaction",
        "description": "This API for create transaction",
        "operationId": "ApiService_CreateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTransactionRequest"
            }
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/api/bg/transaction/{transactionID}": {
      "get": {
        "summary": "Transaction Detail",
        "description": "This API for transaction detail",
        "operationId": "ApiService_GetTransactionDetail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTransactionDetailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Transaction"
        ],
        "security": []
      },
      "post": {
        "summary": "Update Transaction",
        "description": "This API for update transaction",
        "operationId": "ApiService_UpdateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transactionID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/v1Transaction"
                }
              }
            }
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateTransactionRequest": {
      "type": "object",
      "properties": {
        "companyID": {
          "type": "string",
          "format": "uint64"
        },
        "thirdParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateTransactionThirdParty"
          }
        }
      }
    },
    "v1CreateTransactionResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Transaction"
          }
        }
      }
    },
    "v1CreateTransactionThirdParty": {
      "type": "object",
      "properties": {
        "thirdPartyID": {
          "type": "string",
          "format": "uint64"
        },
        "isAllowBeneficiary": {
          "type": "boolean"
        }
      }
    },
    "v1Direction": {
      "type": "string",
      "enum": [
        "DESC",
        "ASC"
      ],
      "default": "DESC"
    },
    "v1GetTransactionDetailResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1Transaction"
        }
      }
    },
    "v1GetTransactionResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Transaction"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1PaginationResponse"
        }
      }
    },
    "v1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1PaginationResponse": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "totalRows": {
          "type": "string",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "transactionID": {
          "type": "string",
          "format": "uint64"
        },
        "thirdPartyID": {
          "type": "string",
          "format": "uint64"
        },
        "referenceNo": {
          "type": "string"
        },
        "applicantName": {
          "type": "string"
        },
        "beneficiaryName": {
          "type": "string"
        },
        "issueDate": {
          "type": "string",
          "format": "date",
          "example": "2022-07-06",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date",
          "example": "2022-07-06",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "example": "2022-07-06",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "claimPeriod": {
          "type": "string",
          "format": "uint64"
        },
        "closingDate": {
          "type": "string",
          "format": "date",
          "example": "2022-07-06",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "remark": {
          "type": "string"
        },
        "transactionStatus": {
          "type": "string"
        },
        "channelID": {
          "type": "string",
          "format": "uint64"
        },
        "channelName": {
          "type": "string"
        },
        "transactionTypeID": {
          "type": "string",
          "format": "uint64"
        },
        "documentPath": {
          "type": "string"
        },
        "companyID": {
          "type": "string",
          "format": "uint64"
        },
        "status": {
          "type": "string"
        },
        "isAllowBeneficiary": {
          "type": "boolean"
        },
        "createdByID": {
          "type": "string",
          "format": "uint64",
          "readOnly": true
        },
        "updatedByID": {
          "type": "string",
          "format": "uint64",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "v1UpdateTransactionResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1Transaction"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
