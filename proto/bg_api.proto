syntax = "proto3";

import "google/api/annotations.proto";
// import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// import "bg_core.proto";
import "bg_payload.proto";

package bg.service.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
                key: "bearer"
                value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service ApiService {

    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/api/bg/health"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            summary: "Health Check"
            description: "This API for check health server"
        };
    };

    rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse) {
        option (google.api.http) = {
            get: "/api/bg/transaction"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Transaction"]
            summary: "Transaction List"
            description: "This API for transaction list"
        };
    };

    rpc GetTransactionDetail(GetTransactionDetailRequest) returns (GetTransactionDetailResponse) {
        option (google.api.http) = {
            get: "/api/bg/transaction/{transactionID}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {} // Disable security key
            tags: ["Transaction"]
            summary: "Transaction Detail"
            description: "This API for transaction detail"
        };
    };

    rpc CreateTransaction(CreateTransactionRequest) returns (CreateTransactionResponse) {
        option (google.api.http) = {
            post: "/api/bg/transaction"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Transaction"]
            summary: "Create Transaction"
            description: "This API for create transaction"
        };
    };

    rpc UpdateTransaction(UpdateTransactionRequest) returns (UpdateTransactionResponse) {
        option (google.api.http) = {
            post: "/api/bg/transaction/{transactionID}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["Transaction"]
            summary: "Update Transaction"
            description: "This API for update transaction"
        };
    };
    
}
