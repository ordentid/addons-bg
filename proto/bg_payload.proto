syntax = "proto3";

import "bg_gorm_db.proto";
import "bg_core.proto";

package bg.service.v1;
option go_package = "./pb";

import "mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/timestamp.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "google/protobuf/struct.proto";

enum ThirdPartyType {
    All = 0;
    NeedMapping = 1;
    IsMapped = 2;
    AllMapping = 3;
}

enum BeneficiaryType {
    AllBeneficiary = 0;
    IsMappedBeneficiary = 1;
}

enum TaskStatus {
    AllStatus = 0;
    Pending = 1;
    Draft = 2;
    Returned = 3;
    Approved = 4;
    Rejected = 5;
    DeleteRequest = 6;
    Deleted = 7;
}

enum TaskStep {
    AllStep = 0;
    Maker = 1;
    Checker = 2;
    Signer = 3;
    Releaser = 4;
}

enum ApplicantType {
    CompanyApplicant = 0;
    IndividualApplicant = 1;
}

enum PublishingType {
    SingleBranch = 0;
    InterBranch = 1;
}

enum Gender {
    Male = 0;
    Female = 1;
}

enum FormatTemplate {
    null = 0;
    csv = 1;
    xls = 2;
    xlsx = 3;
    pdf = 4; 
}

enum CompanyType {
    PT = 0;
    CV = 1;
}

enum ContractGuaranteeType {
    Insurance = 0;
    Cash = 1;
    NonCashLoan = 2;
    Combination = 3;
    CounterGuarantee = 4;
}

message Task {
    uint64 taskID = 1;
    string type = 2;
    string status = 3;
    string step = 4;
    uint64 featureID = 5;
    uint64 lastApprovedByID = 6;
    uint64 lastRejectedByID = 7;
    string lastApprovedByName = 8;
    string lastRejectedByName = 9;
    string createdByName = 10;
    string updatedByName = 11;
    string reasons = 12;
    string comment = 13;
    uint64 companyID = 22;
    uint64 holdingID = 23;
    google.protobuf.Timestamp createdAt = 101;
    google.protobuf.Timestamp updatedAt = 102;
}

message Company {
    uint64 companyID = 1;
    uint64 holdingID = 2;
    string groupName = 3;
    string companyName = 4;
    string holdingCompanyName = 5;
    google.protobuf.Timestamp createdAt = 101;
    google.protobuf.Timestamp updatedAt = 102;
}

message ThirdParty {
    uint64 id = 1;
    string name = 3;
}

message Transaction {
    uint64 transactionID = 1;
    uint64 thirdPartyID = 2;
    string thirdPartyName = 3;
    string referenceNo = 4;
    string registrationNo = 5;
    string applicantName = 6;
    uint64 beneficiaryID = 7;
    string beneficiaryName = 8;
    string issueDate = 9;
    string effectiveDate = 10;
    string expiryDate = 11;
    uint32 claimPeriod = 12;
    string closingDate = 13;
    string currency = 14;
    double amount = 15;
    string createdDate = 16;
    string modifiedDate = 17;
    string remark = 18;
    string status = 19;
    uint64 channelID = 20;
    string channelName = 21;
    BgType transactionTypeID = 22;
}

// Workflow

message Participant {
    uint64 userID = 1;
    string userName = 2;
    uint64 roleID = 3;
    bool isReject = 5;
    google.protobuf.Timestamp approvedAt = 6;
    string step = 7;
}

message Participants {
    int32 approvedCount = 1;
    int32 rejectedCount = 2;
    int32 Requirement = 3;
    repeated Participant participants = 4;
}

message Flow {
    uint64 workflowLogicID = 1;
    Participants verifier = 2;
    Participants approver = 3;
    Participants releaser = 4;
    bool isRejected = 5;
    google.protobuf.Timestamp completedAt = 7;
}

message WorkflowRecords {
    google.protobuf.Timestamp lastUpdatedAt = 1;
    uint64 topRange = 2;
    uint64 bottomRange = 3;
    repeated Flow flows = 4;
}

message UserData {
    uint64 userID = 1;
    string username = 2;
}

message WorkflowHeader {
    uint64 productID = 1;
    string productName = 2;
    uint64 currencyID = 3;
    string currencyName = 5;
    uint64 companyID = 6;
    string companyName = 7;
    uint64 transactionalNumber = 10;
    uint64 workflowID = 11;
    uint64 uaID = 12; // used account id
}

message WorkflowPayload {
    WorkflowHeader header = 1;
    WorkflowRecords records = 2;
    UserData createdBy = 3;
    google.protobuf.Timestamp createdAt = 4;
    bool isDefault = 5;
    bool isTransactional = 6;
    repeated uint64 currentRoleIDs = 7;
    string currentStep = 8;
    repeated uint64 participantUserIDs = 9;
}

message ValidateWorkflowData {
    WorkflowPayload workflow = 1;
    string nextStatus = 2;
    string nextStep = 3;
}

// END

message TransactionRequest {
    string startDate = 1;
    string endDate = 2;
    string branch = 3;
    string applicantName = 4;
    uint32 claimPeriod = 5;
    string status = 6;
    string referenceNo = 7;
    string eventPeriod = 8;
    uint64 beneficiaryID = 9;
    string beneficiaryName = 10;
    uint64 thirdPartyID = 11;
    string thirdPartyName = 12;
    uint64 channelID = 13;
    string channelName = 14;
}

message TaskMappingData {
    Task task = 1;
    Company company = 2;
    repeated MappingData data = 3;
}

message MappingData {
    uint64 thirdPartyID = 1;
    string thirdPartyName = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    uint64 companyID = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    string companyName = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    bool isAllowAllBeneficiary = 5;
}

message TaskMappingDigitalData {
    Task task = 1;
    Company company = 2;
    repeated MappingDigitalData data = 3;
}

message MappingDigitalData {
    uint64 thirdPartyID = 1;
    string thirdPartyName = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    uint64 companyID = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    string companyName = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    uint64 beneficiaryId = 5;
    string beneficiaryName = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message Beneficiary {
    uint64 beneficiaryId = 1;
    string beneficiaryName = 2;
}

message IssuingPortal {
    string registrationNo = 1;
    string referenceNo = 2;
	string warkatUrl = 3;
	string warkatUrlPublic = 4;
	string status = 5;
	string modifiedDate = 6;
}

message TaskIssuingData {
    Task task = 1;
    Company company = 2;
    IssuingData data = 3;
    ValidateWorkflowData workflow = 4;
}

message IssuingData {
    uint64 step = 1;
    string referenceNo = 2 [(google.api.field_behavior) = OUTPUT_ONLY];;
    string registrationNo = 3 [(google.api.field_behavior) = OUTPUT_ONLY];;
    PublishingData publishing = 4;
    AccountData account = 5;
    ApplicantData applicant = 6;
    ProjectData project = 7;
    DocumentData document = 8;
}

message PublishingData {
    ApplicantType applicantType = 1;
    PublishingType publishingType = 2;
    uint64 thirdPartyID = 3;
    string thirdPartyName = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    BgType bgType = 5;
    string effectiveDate = 6 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }, 
        (validator.field) = {regex: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"}
    ];
    string expiryDate = 7 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }, 
        (validator.field) = {regex: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"}
    ];
    string remark = 8;
    uint64 claimPeriod = 9;
    string lawArticle = 10;
    string openingBranchId = 11;
    string openingBranchName = 12 [(google.api.field_behavior) = OUTPUT_ONLY];
    string publishingBranchId = 13;
    string publishingBranchName = 14 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message AccountData {
    string cif = 1;
    string name = 2;
    string accountNumber = 3;
}

message ApplicantData {
    ApplicantType applicantType = 1;
    string name = 2;
    string birthDate = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }, 
        (validator.field) = {regex: "^$|^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"}
    ];
    string dateEstablished = 4 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }, 
        (validator.field) = {regex: "^$|^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"}
    ];
    CompanyType companyType = 5;
    Gender gender = 6;
    string address = 7;
    string contactPerson = 8;
    string beneficiaryName = 9;
    string beneficiaryAddress = 10;
    string npwpNo = 11 [(validator.field) = {regex: "^[0-9]{15,16}$"}];
    string phoneNumber = 12 [(validator.field) = {regex: "^[\\+]?[0-9]{10,15}$"}];
    string email = 13 [(validator.field) = {regex: "^[\\w\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"}];
    string nik = 14;
}

message ProjectData {
    string contractNumber = 1;
    string name = 2;
    string projectDate = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }, 
        (validator.field) = {regex: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"}
    ];
    string nrkNumber = 4;
    string projectCurrency = 5;
    double projectAmount = 6 [(validator.field) = {float_gte: 0}];
    string bgCurrency = 7;
    double bgAmount = 8 [(validator.field) = {float_gte: 0}];
    string cashAccountNo = 9;
    double cashAccountAmount = 10 [(validator.field) = {float_gte: 0}];
    string cashAccountAmountString = 11;
    string nonCashAccountNo = 12;
    double nonCashAccountAmount = 13 [(validator.field) = {float_gte: 0}];
    string nonCashAccountAmountString = 14;
    ContractGuaranteeType contractGuaranteeType = 15;
    double counterGuaranteeAmount = 16 [(validator.field) = {float_gte: 0}];
    string counterGuaranteeAmountString = 17;
    string insuranceLimitId = 18;
	string sp3No = 19;
}

message DocumentData {
    string businessLegal = 1;
    string fileBusinessLegal = 2;
    string tender = 3;
    string fileTender = 4;
    string sp = 5;
    string fileSp = 6;
    string bg = 7;
    string fileBg = 8;
    string other = 9;
    string fileOther = 10;
}

message FileUploadData {
    string fileName = 1;
	string documentPath = 2;
	string uploadDate = 3;
	string uploadedFileUrl = 4;
}


message ApiPaginationResponse {
    uint64 page = 1;
    uint64 limit = 2;
    uint64 totalRecord = 3;
    uint32 totalPage = 4;
}

message HealthCheckRequest {}
message HealthCheckResponse {
    string message = 1;
}

message GetCurrencyRequest {}
message GetCurrencyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Currency data = 4;
}

message BeneficiaryName {
    uint64 beneficiaryId = 1;
    uint64 thirdPartyId = 2;
    string cif = 3;
    string fullname = 4;
    string status = 5;

}
message GetBeneficiaryNameRequest {
    uint64 thirdPartyID = 1;
    BeneficiaryType type = 2;
}
message GetBeneficiaryNameResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated BeneficiaryName data = 4;
}

message CustomerLimit {
    uint64 customerLimitId = 1;
	string code = 2;
	string fullname = 3;
	string cif = 4;
	string ptkNo = 5;
	string currency = 6;
	double plafond = 7;
	int64 reservationAmount = 8;
	int64 outstandingAmount = 9;
	int64 availableAmount = 10;
	string expiryDate = 11;
	string pnRm = 12;
	string nameRm = 13;
	string createdDate = 14;
	string modifiedDate = 15;
	string status = 16;
}

message GetCustomerLimitRequest {
}

message GetCustomerLimitResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated CustomerLimit data = 4;
}

message ApplicantName {
    string name = 1;
}
message GetApplicantNameRequest {
    uint64 thirdPartyID = 1;
}
message GetApplicantNameResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated ApplicantName data = 4;
}

message ThirdPartyName {
    uint64 id = 1;
    string name = 2;
    uint64 total = 3;
}
message GetThirdPartyRequest {
    ThirdPartyType type = 1;
}
message GetThirdPartyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated ThirdParty data = 4;
}

message GetTaskMappingFilterCompanyRequest {}
message GetTaskMappingFilterCompanyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Company data = 4;
}

message GetTaskMappingFileRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}
message GetTaskMappingFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetTaskMappingRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTaskMappingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated TaskMappingData data = 4;
    PaginationResponse pagination = 5;
}

message GetTaskMappingDetailRequest {
    uint64 taskID = 1;
}
message GetTaskMappingDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    TaskMappingData data = 4;
}

message CreateTaskMappingRequest {
    uint64 taskID = 1;
    uint64 companyID = 2;
    repeated MappingData data = 3;
    bool isDraft = 4;
}
message CreateTaskMappingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}

message GetTaskMappingDigitalFileRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}
message GetTaskMappingDigitalFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetTaskMappingDigitalRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTaskMappingDigitalResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated TaskMappingDigitalData data = 4;
    PaginationResponse pagination = 5;
}

message GetTaskMappingDigitalDetailRequest {
    uint64 taskID = 1;
}
message GetTaskMappingDigitalDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    TaskMappingDigitalData data = 4;
}

message CreateTaskMappingDigitalRequest {
    uint64 taskID = 1;
    uint64 thirdPartyID = 2;
    repeated Beneficiary beneficiary = 3;
    bool isDraft = 4;
}
message CreateTaskMappingDigitalResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}

message GetTransactionAttachmentRequest {
    string referenceNo = 1;
}
message GetTransactionAttachmentResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated string data = 4;
}

message GetTransactionFileRequest {
    TransactionRequest transaction = 1;
    int32 limit = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}
message GetTransactionFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetTransactionRequest {
    TransactionRequest transaction = 1;
    int32 limit = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTransactionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Transaction data = 4;
    PaginationResponse pagination = 5;
}

message GetTransactionDetailRequest {
    string referenceNo = 1;
}
message GetTransactionDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Transaction data = 4;
}

message CreateTransactionRequest {
    string type = 1;
    repeated MappingData mappingData = 2;
    repeated MappingData mappingDataBackup = 3;
    repeated MappingDigitalData mappingDigitalData = 4;
    repeated MappingDigitalData mappingDigitalDataBackup = 5;
}
message CreateTransactionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Mapping data = 4;
}

message DeleteTransactionRequest {
    string type = 1;
    repeated MappingData mappingData = 2;
    repeated MappingData mappingDataBackup = 3;
    repeated MappingDigitalData mappingDigitalData = 4;
    repeated MappingDigitalData mappingDigitalDataBackup = 5;
}

message DeleteTransactionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Mapping data = 4;
}

message GetTaskIssuingRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string filterOr = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTaskIssuingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated TaskIssuingData data = 4;
    PaginationResponse pagination = 5;
}

message GetTaskIssuingDetailRequest {
    uint64 taskID = 1;
}

message GetTaskIssuingDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    TaskIssuingData data = 4;
}

message CreateTaskIssuingRequest {
    uint64 taskID = 1;
    IssuingData data = 2;
    bool isDraft = 3;
    string passCode = 4;
}

message CreateTaskIssuingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}

message GetTaskIssuingFileRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}

message GetTaskIssuingFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message CreateIssuingRequest {
    uint64 taskID = 1;
    IssuingData data = 2;
}

message CreateIssuingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    IssuingPortal data= 4;
}

message TaskIssuingActionRequest {
    uint64 taskID = 1;
    string action = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "Action: 'approve', 'rework', 'reject', 'delete'"
        }
    ];
    string comment = 3;
    string reasons = 4;
    string passCode = 5;
}
message TaskIssuingActionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}

message CheckIssuingRequest {
    uint64 taskID = 1;
}
message CheckIssuingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    IssuingPortal data = 4;
}

message FileUploadRequest {
    string data = 1;
}
message FileUploadResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    FileUploadData data = 4;
}

message CheckIndividualLimitRequest {
    string cif = 1;
}
message CheckIndividualLimitResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    bool hasLimit = 4;
}

message NotificationData {
    string USERNAME_MAKER = 1 [json_name='USERNAME_MAKER'];
    string USERNAME_APPROVER = 2 [json_name='USERNAME_APPROVER'];
    string CREATED_DATETIME = 3 [json_name='CREATED_DATETIME'];
    string CREATED_DATE = 4 [json_name='CREATED_DATE'];
    string CREATED_TIME = 5 [json_name='CREATED_TIME'];
    string EVENT_DATETIME = 6 [json_name='EVENT_DATETIME'];
    string EVENT_DATE = 7 [json_name='EVENT_DATE'];
    string EVENT_TIME = 8 [json_name='EVENT_TIME'];
    string TASK_ID = 14 [json_name='TASK_ID'];
    string USERNAME_REJECTOR = 15 [json_name='USERNAME_REJECTOR'];
    string COMPANY_NAME = 16 [json_name='COMPANY_NAME'];
    string USERNAME_CHECKER = 17 [json_name='USERNAME_CHECKER'];
    string USERNAME_RELEASER = 18 [json_name='USERNAME_RELEASER'];
    string MODULE = 19 [json_name='MODULE'];
    string STATUS_ACTION = 23 [json_name='STATUS_ACTION'];
    string REASON = 25 [json_name='REASON'];
    string COMMENT = 26 [json_name='COMMENT'];
}