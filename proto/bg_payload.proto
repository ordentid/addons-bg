syntax = "proto3";

import "bg_gorm_db.proto";
import "bg_core.proto";

package bg.service.v1;
option go_package = "./pb";

// import "mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/timestamp.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "google/protobuf/struct.proto";

enum TaskStatus {
    AllStatus = 0;
    Pending = 1;
    Draft = 2;
    Returned = 3;
    Approved = 4;
    Rejected = 5;
    DeleteRequest = 6;
    Deleted = 7;
}

enum TaskStep {
    AllStep = 0;
    Maker = 1;
    Checker = 2;
    Signer = 3;
    Releaser = 4;
}

enum ApplicantType {
    IndividualApplicant = 0;
    CompanyApplicant = 1;
}

enum PublishingType {
    SingleBranch = 0;
    InterBranch = 1;
}

enum Gender {
    Male = 0;
    Female = 1;
}

enum FormatTemplate {
    null = 0;
    csv = 1;
    xls = 2;
    xlsx = 3;
    pdf = 4; 
}

message Task {
    uint64 taskID = 1;
    string type = 2;
    string status = 3;
    string step = 4;
    uint64 featureID = 5;
    uint64 lastApprovedByID = 6;
    uint64 lastRejectedByID = 7;
    string lastApprovedByName = 8;
    string lastRejectedByName = 9;
    string createdByName = 10;
    string updatedByName = 11;
    string reasons = 12;
    string comment = 13;
    uint64 companyID = 22;
    uint64 holdingID = 23;
    google.protobuf.Timestamp createdAt = 101;
    google.protobuf.Timestamp updatedAt = 102;
}

message Company {
    uint64 companyID = 1;
    uint64 holdingID = 2;
    string groupName = 3;
    string companyName = 4;
    string holdingCompanyName = 5;
    google.protobuf.Timestamp createdAt = 101;
    google.protobuf.Timestamp updatedAt = 102;
}

message TaskMappingData {
    Task task = 1;
    Company company = 2;
    repeated MappingData data = 3;
}

message MappingData {
    uint64 thirdPartyID = 1;
    string thirdPartyName = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    uint64 companyID = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    string companyName = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    bool isAllowAllBeneficiary = 5;
}

message TaskMappingDigitalData {
    Task task = 1;
    Company company = 2;
    repeated MappingDigitalData data = 3;
}

message MappingDigitalData {
    uint64 thirdPartyID = 1;
    string thirdPartyName = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    uint64 companyID = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    string companyName = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    string beneficiaryName = 5;
}

message TaskIssuingData {
    Task task = 1;
    Company company = 2;
    IssuingData data = 3;
}

message IssuingData {
    uint64 step = 1;
    PublishingData publishing = 2;
    AccountData account = 3;
    ApplicantData applicant = 4;
    ProjectData project = 5;
    DocumentData document = 6;
}

message PublishingData {
    ApplicantType applicantType = 1;
    PublishingType publishingType = 2;
    uint64 thirdPartyID = 3;
    string thirdPartyName = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    BgType bgType = 5;
    string effectiveDate = 6 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }
    ];
    string expiryDate = 7 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }
    ];
    string remark = 8;
    uint64 claimPeriod = 9;
    string lawArticle = 10;
    string openingBranch = 11;
    string publishingBranch = 12;
}

message AccountData {
    string cif = 1;
    string name = 2;
    string accountNumber = 3;
}

message ApplicantData {
    string name = 1;
    string birthDate = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }
    ];
    Gender gender = 3;
    string address = 4;
    string contactPerson = 5;
    string beneficiaryName = 6;
    string beneficiaryAddress = 7;
}

message ProjectData {
    string contractNumber = 1;
    string name = 2;
    string projectDate = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            format: "date",
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$", 
            example: "\"2022-07-06\""
        }
    ];
    string nrkNumber = 4;
    string projectCurrency = 5;
    double projectAmount = 6;
    string bgCurrency = 7;
    double bgAmount = 8;
}

message DocumentData {
    string businessLegal = 1;
    string tender = 2;
    string sp = 3;
    string bg = 4;
    repeated string other = 5;
}

message ApiPaginationResponse {
    uint64 page = 1;
    uint64 limit = 2;
    uint64 totalRecord = 3;
    uint32 totalPage = 4;
}

message HealthCheckRequest {}
message HealthCheckResponse {
    string message = 1;
}

message GenerateThirdPartyRequest {
    uint64 page = 1;
    uint64 limit = 2;
}
message GenerateThirdPartyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    ApiPaginationResponse pagination = 4;
}

message BeneficiaryName {
    uint64 beneficiaryId = 1;
    uint64 thirdPartyId = 2;
    string cif = 3;
    string fullname = 4;
    string status = 5;

}
message GetBeneficiaryNameRequest {
    uint64 thirdPartyID = 1;
}
message GetBeneficiaryNameResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated BeneficiaryName data = 4;
}

message ApplicantName {
    string name = 1;
    uint64 total = 2;
}
message GetApplicantNameRequest {
    uint64 thirdPartyID = 1;
}
message GetApplicantNameResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated ApplicantName data = 4;
}

message ThirdPartyName {
    uint64 id = 1;
    string name = 2;
    uint64 total = 3;
}
message GetThirdPartyRequest {}
message GetThirdPartyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated ThirdParty data = 4;
}

message GetTaskMappingFilterCompanyRequest {}
message GetTaskMappingFilterCompanyResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Company data = 4;
}

message GetTaskMappingFileRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}
message GetTaskMappingFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetTaskMappingRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTaskMappingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated TaskMappingData data = 4;
    PaginationResponse pagination = 5;
}

message GetTaskMappingDetailRequest {
    uint64 taskID = 1;
}
message GetTaskMappingDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    TaskMappingData data = 4;
}

message CreateTaskMappingRequest {
    uint64 taskID = 1;
    uint64 companyID = 2;
    repeated MappingData data = 3;
    bool isDraft = 4;
}
message CreateTaskMappingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}

message GetTaskMappingDigitalFileRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}
message GetTaskMappingDigitalFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetTaskMappingDigitalRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTaskMappingDigitalResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated TaskMappingDigitalData data = 4;
    PaginationResponse pagination = 5;
}

message GetTaskMappingDigitalDetailRequest {
    uint64 taskID = 1;
}
message GetTaskMappingDigitalDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    TaskMappingDigitalData data = 4;
}

message CreateTaskMappingDigitalRequest {
    uint64 taskID = 1;
    uint64 thirdPartyID = 2;
    repeated string beneficiaryNames = 3;
    bool isDraft = 4;
}
message CreateTaskMappingDigitalResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}

message GetTransactionFileRequest {
    int32 limit = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    FormatTemplate fileFormat = 101;
}
message GetTransactionFileResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
}

message GetTransactionRequest {
    Transaction transaction = 1;
    int32 limit = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTransactionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Transaction data = 4;
    PaginationResponse pagination = 5;
}

message GetTransactionDetailRequest {
    uint64 transactionID = 1;
}
message GetTransactionDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Transaction data = 4;
}

message CreateTransactionRequest {
    uint64 taskID = 1;
}
message CreateTransactionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated Transaction data = 4;
}

message UpdateTransactionRequest {
    uint64 transactionID = 1;
    Transaction data = 2;
}
message UpdateTransactionResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Transaction data = 4;
}

message GetTaskIssuingRequest {
    TaskStatus status = 1;
    TaskStep step = 2;
    int32 limit = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
    string sort = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Order data by column name",
	}];
    Direction dir = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Sort DirectionEnum should be ASC or DESC",
	}];
    string filter = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'AND' queries \n format: [key:value,key:value] \n example: filter=task_id:1,type:Announcement => Where task_id = 1 AND type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
    string query = 8 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Create 'OR' queries \n format: [key1,key2,key3:value] \n example: query=name,type:Announcement => Where name = 'Announcement' OR type = 'Announcement' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
	}];
}
message GetTaskIssuingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    repeated TaskIssuingData data = 4;
    PaginationResponse pagination = 5;
}

message GetTaskIssuingDetailRequest {
    uint64 taskID = 1;
}
message GetTaskIssuingDetailResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    TaskIssuingData data = 4;
}

message CreateTaskIssuingRequest {
    uint64 taskID = 1;
    IssuingData data = 2;
    bool isDraft = 3;
}
message CreateTaskIssuingResponse {
    bool error = 1;
    uint32 code = 2;
    string message = 3;
    Task data = 4;
}
